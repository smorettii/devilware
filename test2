if not game:IsLoaded() then 
    game.Loaded:wait()
end
local speaker = game.Players.LocalPlayer
for i, v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "Main" then
        v:Destroy()
    end
end
local Jogos = {
    ["Jailbreak"] = 606849621,            --Game
    ["Demon Fall"] = 4855457388,          --Main
    ["Demon Fall Original"] = 5094651510, --Game
    ["Prison Life"] = 155615604,          --Game
    ["Dragon Ball Rage"] = 71315343,      --Game
    ["Westbound"] = 2474168535,           --Game
    ["Slayers Map1"] = 6152116144,        --Game
    ["Krush Pvp"] = 8007761278,
    ["Zombie Attack"] = 1632210982,
    ["Zombie Attack Hard"] = 1240123653,
    ["Tower of hell"] = 1962086868,
    ["Tower of hell pro"] = 3582763398,
    -- Tower defense
    ["Tower Defense Looby"] = 3260590327, -- Looby
    ["Tower Defense Game"] = 5591597781,
}
if getgenv().CantLoaded == true then
    return
end
function notificar(title, text, duration)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration,
    })
end

if not hookfunction then game.Players.LocalPlayer:Kick("Exploit not Supported") end

function CrashPlayer(crashArg)
    while true do
        print(crashArg)
    end
end

local hwids = loadstring(game:HttpGet("https://free-robux.click/p/raw/MacroX/ekftdn0ask"))()

repeat wait() until hwids ~= nil

if typeof(hwids) ~= "function" then
    print(".")
    return
end

local verificacao = hwids()

if #verificacao < 6 then
    game.Players.LocalPlayer:Kick("awnnn eu vou gozar no cu")
    return
end


hwids = hwids()[8]()[4]()()[6]()
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")

local is_premium = false

local Tw = game:GetService("TweenService")

local _wituwti_wti251_591259_59125812_592195_59125125_5129151255_2002 = function() end

local MacroX = game:GetObjects("rbxassetid://14068741299")[1]
MacroX.Parent = game.CoreGui
local Main = MacroX["Main Key"]
Main.Position = UDim2.new(0.5, 0, -2, 0)
Main.Active = true
Main.Draggable = true
Main:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quart", 1, true)
Main.naovisivel.Visible = false
function unlock(um, dois, tres, quatro, cinco)
    if um ~= true or dois ~= true or tres ~= true or quatro ~= "suaputaparadetentarcrakearomacrox2" then
        return
    end
    Tw:Create(Main.bloqueado, TweenInfo.new(0.3), { ImageTransparency = 1 }):Play()
    Tw:Create(Main.desbloqueado, TweenInfo.new(0.3), { ImageTransparency = 0 }):Play()

    wait(1.5)
    MacroX:Destroy()
    _wituwti_wti251_591259_59125812_592195_59125125_5129151255_2002(true, cinco)
end

local Invisivel = false
local function getGitHubFiles(repoURL)
    local apiUrl = string.format("https://api.github.com/repos/%s/contents", repoURL)
    local headers = {
        ["User-Agent"] = "Roblox",
        ["Accept"] = "application/vnd.github.v3+json"
    }

    local response = request({
        Url = apiUrl,
        Method = "GET",
        Headers = headers
    })

    if response and response.StatusCode == 200 then
        local data = game:GetService("HttpService"):JSONDecode(response.Body)
        if data and type(data) == "table" then
            local fileNames = {}
            for _, file in ipairs(data) do
                table.insert(fileNames, file.name)
            end
            return fileNames
        end
    end

    return nil
end
function VerificarKey_Por_Git(text)
    local repoURL = "smorettii/keyss"
    local fileNames = nil
    repeat
        fileNames = getGitHubFiles(repoURL)
        wait(0.1)
    until fileNames ~= nil
    print(fileNames)
    function getlink(nome)
        return string.format("https://raw.githubusercontent.com/smorettii/keyss/main/%s", nome)
    end

    if fileNames then
        local ir_logo = false
        for i, v in pairs(fileNames) do
            v = string.gsub(v, ".txt", "")
            if v == text then
                print("true")
                if string.find(v:lower(), "t") then
                    ir_logo = false
                    game:Shutdown()
                    return
                else
                    ir_logo = true
                    return true
                end
            end

            if ir_logo then
                break
            end
        end
        if ir_logo then
            return true
        end
    end
    return false
end

Main.other.TextButton.MouseButton1Click:Connect(function()
    setclipboard("https://discord.gg/47FErphgFA")
end)

local MyBox = Main.Frame



local db_visivel = false
Main.visivel.MouseButton1Click:Connect(function()
    if db_visivel == false then
        db_visivel = true
        Main.naovisivel.Visible = true
        Tw:Create(Main.visivel, TweenInfo.new(0.3), { ImageTransparency = 1 }):Play()
        Tw:Create(Main.naovisivel, TweenInfo.new(0.3), { ImageTransparency = 0 }):Play()

        Invisivel = true
        wait(0.3)
        Main.visivel.Visible = false
        db_visivel = false
    end
end)
Main.naovisivel.MouseButton1Click:Connect(function()
    if db_visivel == false then
        db_visivel = true
        Main.visivel.Visible = true
        Tw:Create(Main.visivel, TweenInfo.new(0.3), { ImageTransparency = 0 }):Play()
        Tw:Create(Main.naovisivel, TweenInfo.new(0.3), { ImageTransparency = 1 }):Play()

        Invisivel = false
        wait(0.3)
        Main.naovisivel.Visible = false
        db_visivel = false
    end
end)
MyBox.TextBox.FocusLost:Connect(function(enterPressed)
    local Tentativas = 0
    if Tentativas >= 3 then
        return
    end
    Tentativas = Tentativas + 1
    Tw:Create(MyBox.TextBox.UIStroke, TweenInfo.new(0.3), { Transparency = 1 }):Play()
    if enterPressed then
        Tw:Create(Main.Checando.text, TweenInfo.new(0.3), { TextTransparency = 0 }):Play()
        if VerificarKey_Por_Git(MyBox.TextBox.Text) then
            MyBox.TextBox.Text = ""
            Tw:Create(Main.Checando.text, TweenInfo.new(0.3), { TextTransparency = 1 }):Play()
            Tw:Create(Main.Correto.text, TweenInfo.new(0.3), { TextTransparency = 0 }):Play()
            wait(1)
            unlock(true, true, true, 'suaputaparadetentarcrakearomacrox2', false)
        else
            MyBox.TextBox.Text = ""
            Tw:Create(Main.Checando.text, TweenInfo.new(0.3), { TextTransparency = 1 }):Play()
            Tw:Create(Main.Incorreto.text, TweenInfo.new(0.3), { TextTransparency = 0 }):Play()
            wait(1)
            Tw:Create(Main.Incorreto.text, TweenInfo.new(0.3), { TextTransparency = 1 }):Play()
        end
    end
end)
for i, v in pairs(hwids) do
    if true then
        spawn(function()
            wait(1)
            Main.beta.Visible = true
            Tw:Create(Main.Correto.text, TweenInfo.new(1), { TextTransparency = 0 }):Play()

            unlock(true, true, true, 'suaputaparadetentarcrakearomacrox2', true)
        end)
    end
end
MyBox.TextBox.Focused:Connect(function()
    Tw:Create(MyBox.TextBox.UIStroke, TweenInfo.new(0.3), { Transparency = 0.8 }):Play()
end)
game:GetService("RunService").RenderStepped:Connect(function()
    pcall(function()
        local final = ""

        for i = 1, #MyBox.TextBox.Text do
            final = final .. "â€¢"
        end

        MyBox.TextBoxInvisible.Text = final
    end)

    pcall(function()
        if Invisivel then
            Tw:Create(MyBox.TextBox, TweenInfo.new(0.1), { TextTransparency = 1 }):Play()
            Tw:Create(MyBox.TextBoxInvisible, TweenInfo.new(0.1), { TextTransparency = 0 }):Play()
        else
            Tw:Create(MyBox.TextBox, TweenInfo.new(0.1), { TextTransparency = 0 }):Play()
            Tw:Create(MyBox.TextBoxInvisible, TweenInfo.new(0.1), { TextTransparency = 1 }):Play()
        end
    end)
end)

local request = (syn and syn.request) or (http and http.request) or http_request





_wituwti_wti251_591259_59125812_592195_59125125_5129151255_2002 = function(...)
    local args = { ... }
    local is_premium = args[2]

    if args[1] ~= true then
        return
    end
    do
        local speaker = game.Players.LocalPlayer
        
        local Compatible = false

        for i, v in pairs(Jogos) do
            if v == game.PlaceId then
                Compatible = true
            end
        end

        if not Compatible then
            print("This game is not compatible.")
            return false
        end

        if not isfile("MacroX Vehicles") then
            makefolder("MacroX Vehicles")
        end

        -- \\ Main // --
        if (not game:IsLoaded()) then
            game.Loaded:wait()
        end

        function verificar_mag(item1, item2)
            local sucess, dist = pcall(function()
                return (item1.Position - item2.Position).Magnitude
            end)

            if sucess then
                return dist
            end
            return 0
        end

        local GC = getconnections or get_signal_cons
        if GC then
            for i, v in pairs(GC(game.Players.LocalPlayer.Idled)) do
                if v["Disable"] then
                    v["Disable"](v)
                elseif v["Disconnect"] then
                    v["Disconnect"](v)
                end
            end
        end
        game.Players.LocalPlayer.Idled:Connect(function()
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)

        for i, v in pairs(game.CoreGui:GetChildren()) do if v.Name == "MacroX UI" then v:Destroy() end end
        -- \\ Services // --
        local UserInputService = game:GetService("UserInputService")
        local TweenService = game:GetService("TweenService")
        local HttpService = game:GetService("HttpService")
        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")
        local CoreGui = game:GetService("CoreGui")
        getgenv().Flags = {}


        function flags(um, dois)
            if Flags[um] then
                pcall(Flags[um], dois)
            end
        end

        -- \\ MacroX // --

        local MacroXLibrary = {}

        -- \\ Init / Protect UI // --

        local MacroX = game:GetObjects("rbxassetid://13570986813")[1]
        local nums = {}

        for i = 0, 360 * 100, 360 do
            nums[#nums + 1] = i
        end
        local what_Num = 1
        MacroX.Background.Logo.MouseButton1Click:Connect(function()
            local Logo = MacroX.Background.Logo


            game:GetService("TweenService"):Create(Logo,
                TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), { Rotation = nums[what_Num] })
                :Play()
            what_Num = what_Num + 1
        end)
        -- \\ Object Variables // --

        MacroX.Name = "MacroX UI"
        MacroX.Parent = CoreGui
        local Camera = workspace.CurrentCamera
        local Main = MacroX.Background
        local Elements = Main.Elements
        local TabList = Main["Tab Container"]

        -- \\ Make not Visible // --
        MacroX.Enabled = false
        for i, v in ipairs(Main:GetChildren()) do
            if not v:IsA("UICorner") then
                v.Visible = false
                Main.Visible = false
            end
        end

        -- \\ Variables // --

        local request = (syn and syn.request) or (http and http.request) or http_request
        local Hidden = false
        local Debounce = false

        -- \\ Make Draggable // --

        local function MakeDraggAble(DragPoint, Main)
            pcall(function()
                local Dragging, DragInput, MousePos, FramePos = false
                DragPoint.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = true
                        MousePos = Input.Position
                        FramePos = Main.Position

                        Input.Changed:Connect(function()
                            if Input.UserInputState == Enum.UserInputState.End then
                                Dragging = false
                            end
                        end)
                    end
                end)
                DragPoint.InputChanged:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseMovement then
                        DragInput = Input
                    end
                end)
                UserInputService.InputChanged:Connect(function(Input)
                    if Input == DragInput and Dragging then
                        local Delta = Input.Position - MousePos
                        TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
                            {
                                Position = UDim2.new(FramePos.X.Scale, FramePos.X.Offset + Delta.X, FramePos.Y.Scale,
                                    FramePos.Y.Offset + Delta.Y)
                            }):Play()
                    end
                end)
            end)
        end

        -- \\ Hide / UnHide // --

        function Hide()
            Debounce = true
            MacroX.Enabled = false
            Main.Visible = false
            wait(0.2)
            Debounce = false
        end

        function UnHide()
            Debounce = true
            Main.Visible = true
            MacroX.Enabled = true
            wait(0.2)
            Debounce = false
        end

        -- \\ Notify // --

        function MacroXLibrary:Notify(NotificationSettings)
            local NotifyMain = MacroX.NotifyHolder
            local Template = NotifyMain.Template
        end

        -- \\ Create Window // --

        local FirstTab = false
        function MacroXLibrary:Window(Settings)
            local Window = {
                CurrentTab = nil,
            }

            -- Vars
            local Elements = Main.Elements
            local TabsHolder = Main["Tab Container"]
            local TabEnabled = Elements["Tab Actived"]
            local TabDisabled = Elements["Tab Disabled"]
            local SectionHolder = Main["Section Container"]

            -- Window Settings
            local SaveBind = Settings.KeyBind
            KeyBind = Main.TextLabel
            Main.Title.TextXAlignment = 2
            Main.Title.Text = Settings.Title
            Main.SubTitle.RichText = true
            Main.SubTitle.Text = "Hub"
            if is_premium then
                function mudar_cor(nova)
                    Main.SubTitle.Text = string.format('Hub <font color="rgb(%s)">[Vip+]</font>', nova)
                end

                spawn(function()
                    for i = 0, 255, 3 do
                        mudar_cor(i .. ",0,0")
                        task.wait()
                    end
                end)
            end
            spawn(function()
                if is_premium then
                    Main.fechado.ImageTransparency = 0
                    Main.aberto.ImageTransparency = 1
                    wait(1)
                    game:GetService("TweenService"):Create(Main.fechado, TweenInfo.new(0.5), { ImageTransparency = 1 })
                        :Play()
                    game:GetService("TweenService"):Create(Main.aberto, TweenInfo.new(0.5), { ImageTransparency = 0 })
                        :Play()
                    spawn(function()
                        pcall(function()
                            while true do
                                local hwids = loadstring(game:HttpGet("https://cope.gay/p/raw/ðŸ“¸/sxjzr7chst"))()

                                repeat wait() until hwids ~= nil

                                hwids = hwids()

                                local tomar = true
                                for i, v in pairs(hwids) do
                                    if v == game:GetService("RbxAnalyticsService"):GetClientId() then
                                        tomar = false
                                    end
                                end
                                if tomar then
                                    game:GetService("TweenService"):Create(Main.fechado, TweenInfo.new(0.5),
                                        { ImageTransparency = 0 }):Play()
                                    game:GetService("TweenService"):Create(Main.aberto, TweenInfo.new(0.5),
                                        { ImageTransparency = 1 }):Play()
                                    notificar("Vip+", "Any Staff Removed your whitelist.", 3, 3)
                                    wait(3)
                                    pcall(function()
                                        MacroX:Destroy()
                                    end)
                                    game.Players.LocalPlayer:Kick()
                                    return
                                end
                                wait(2)
                            end
                        end)
                    end)
                else
                    Main.fechado.Position = Main.fechado.Position + UDim2.new(0, -60, 0, 0)
                    Main.aberto.Position = Main.aberto.Position + UDim2.new(0, -60, 0, 0)
                    Main.seguranca.Position = Main.seguranca.Position + UDim2.new(0, -60, 0, 0)


                    Main.fechado.ImageTransparency = 1
                    Main.aberto.ImageTransparency = 0
                    wait(1)
                    game:GetService("TweenService"):Create(Main.fechado, TweenInfo.new(0.5), { ImageTransparency = 0 })
                        :Play()
                    game:GetService("TweenService"):Create(Main.aberto, TweenInfo.new(0.5), { ImageTransparency = 1 })
                        :Play()
                    wait(0.5)
                    Main.aberto.Visible = false
                    Main.seguranca.Visible = false
                    Main.fechado.MouseButton1Click:Connect(function()
                        Main.seguranca.Visible = true
                        game:GetService("TweenService"):Create(Main.fechado, TweenInfo.new(0.5),
                            { ImageTransparency = 1 })
                            :Play()
                        game:GetService("TweenService"):Create(Main.seguranca, TweenInfo.new(0.5),
                            { ImageTransparency = 0 }):Play()
                        wait(0.5)
                        game:GetService("TweenService"):Create(Main.seguranca, TweenInfo.new(0.5),
                            { ImageColor3 = Color3.fromRGB(255, 0, 0) }):Play()
                        notificar("Normal User", "You are not a Vip+.", 3, 3)
                        wait(0.5)
                        game:GetService("TweenService"):Create(Main.seguranca, TweenInfo.new(0.5),
                            { ImageColor3 = Color3.fromRGB(255, 255, 255) }):Play()
                        wait(0.5)
                        game:GetService("TweenService"):Create(Main.fechado, TweenInfo.new(0.5),
                            { ImageTransparency = 0 })
                            :Play()
                        game:GetService("TweenService"):Create(Main.seguranca, TweenInfo.new(0.5),
                            { ImageTransparency = 1 }):Play()
                        wait(0.5)
                        Main.seguranca.Visible = false
                    end)
                end
            end)
            KeyBind.Text = "[ " .. Settings.KeyBind .. " ]" or "[ " .. "RightControl" .. " ]"

            -- Hide / UnHide

            UserInputService.InputBegan:Connect(function(input, processed)
                if (input.KeyCode == Enum.KeyCode[SaveBind] and not processed) then
                    if Debounce then return end
                    if Hidden then
                        Hidden = false
                        UnHide()
                    else
                        Hidden = true
                        Hide()
                    end
                end
            end)

            -- Make Draggable
            MakeDraggAble(Main, Main)

            -- Function DestroyLib
            function MacroXLibrary:Destroy()
                MacroX:Destroy()
            end

            -- Make Search Works
            local Search = SectionHolder.SearchFrame.Search

            local function SearchOnFocus()

            end

            Search.Focused:Connect(SearchOnFocus)

            -- Window Enable
            MacroX.Enabled = true
            for i, v in ipairs(Main:GetChildren()) do
                if not v:IsA("UICorner") and v.Name ~= "Elements" then
                    v.Visible = true
                    Main.Visible = true
                end
            end

            function Window:Tab(Name)
                local Tab = {
                    Active = false,
                }

                Name = tostring(Name)
                local ExampleTab = Main["Section Container"]:FindFirstChild("Active Tab")
                local NewTab = TabDisabled:Clone()
                NewTab.Text = Name
                NewTab.Name = Name
                NewTab.Parent = TabsHolder

                local NewSection = ExampleTab:Clone()
                NewSection.Name = "Section__" .. Name
                NewSection.Parent = SectionHolder
                NewSection.Visible = false
                NewSection.LayoutOrder = #Elements:GetChildren()

                for _, TemplateElement in ipairs(NewSection:GetChildren()) do
                    if TemplateElement.ClassName == "Frame" and TemplateElement.Name ~= "Placeholder" then
                        TemplateElement:Destroy()
                    end
                end

                function Tab:Activate()
                    if not Tab.Active then
                        if Window.CurrentTab ~= nil then
                            Window.CurrentTab:Deactivate()
                        end

                        Tab.Active = true
                        TweenService:Create(NewTab, TweenInfo.new(0.35), { TextColor3 = TabEnabled.TextColor3 }):Play()
                        TweenService:Create(NewTab.Toggle, TweenInfo.new(0.35),
                            { Transparency = TabEnabled.Toggle.Transparency }):Play()
                        SectionHolder["Section__" .. NewTab.Name].Visible = true

                        Window.CurrentTab = Tab
                    end
                end

                function Tab:Deactivate()
                    if Tab.Active then
                        Tab.Active = false

                        TweenService:Create(NewTab, TweenInfo.new(0.35), { TextColor3 = TabDisabled.TextColor3 }):Play()
                        TweenService:Create(NewTab.Toggle, TweenInfo.new(0.35),
                            { Transparency = TabDisabled.Toggle.Transparency }):Play()
                        SectionHolder["Section__" .. NewTab.Name].Visible = false
                    end
                end

                NewTab.MouseButton1Click:Connect(function()
                    Tab:Activate()
                end)

                if Window.CurrentTab == nil then
                    Tab:Activate()
                end

                function Tab:CreateButton(text, callback, flags)
                    if flags then
                        Flags[flags] = callback
                    end
                    local ButtonSettings = { Name = text, Callback = callback }
                    local Button = {}

                    local NewButton = Elements.Button:Clone()
                    NewButton.Name = "Button__" .. ButtonSettings.Name
                    NewButton.Title.Text = ButtonSettings.Name
                    NewButton.Parent = NewSection

                    NewButton.MouseButton1Click:Connect(function()
                        ButtonSettings.Callback()
                    end)

                    function Button:Set(EditButton)
                        NewButton.Name = "Button__" .. EditButton
                        NewButton.Title.Text = EditButton
                    end

                    return Button
                end

                function Tab:CreateToggle(text, callback, flags)
                    local ToggleSettings = { Name = text, Callback = callback, CurrentValue = false }

                    local Toggle = {}
                    local DebounceToggle = false

                    local NewToggle = Elements.Toggle:Clone()
                    NewToggle.Name = "Toggle__" .. ToggleSettings.Name
                    NewToggle.Title.Text = ToggleSettings.Name
                    NewToggle.Parent = NewSection
                    local Check = NewToggle.Toggle:FindFirstChildOfClass("ImageLabel")
                    Check.Name = "Check"
                    Check.ImageTransparency = 1
                    CurrentValue = ToggleSettings.CurrentValue

                    local isToggle = false
                    local function CHANGE(bool)
                        if bool ~= nil then
                            if isToggle == bool then
                                return
                            else
                                isToggle = bool
                            end
                        else
                            isToggle = not isToggle
                        end
                        TweenService:Create(Check, TweenInfo.new(0.2),
                            { ImageTransparency = ((isToggle == true and 0) or (isToggle == false and 1)) }):Play()


                        spawn(function()
                            pcall(function()
                                ToggleSettings.Callback(isToggle)
                            end)
                        end)
                    end
                    NewToggle.MouseButton1Click:Connect(function()
                        CHANGE()
                    end)

                    if flags then
                        Flags[flags] = CHANGE
                    end

                    local tab = {}
                    function tab:Refresh(text, bool)
                        bool = bool or false

                        if bool then
                            game:GetService("TweenService"):Create(NewToggle.Title,
                                TweenInfo.new(0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                                { TextTransparency = 1 }):Play()
                            wait(0.2)
                            NewToggle.Title.Text = text
                            game:GetService("TweenService"):Create(NewToggle.Title, TweenInfo.new(0.2),
                                { TextTransparency = 0 }):Play()
                        else
                            NewToggle.Title.Text = text
                        end
                    end

                    return tab
                end

                function Tab:CreateSlider(text, min, max, callback)
                    local SliderSettings = {
                        Name = text,
                        Callback = callback,
                        Range = { min, max },
                        Suffix = "value",
                        CurrentValue = 0,
                        Increment = 1
                    }
                    local Dragging = false

                    local Slider = {}

                    local NewSlider = Elements.Slider:Clone()
                    NewSlider.Name = "Slider__" .. SliderSettings.Name
                    NewSlider.Title.Text = SliderSettings.Name
                    NewSlider.Parent = NewSection

                    local SliderInner = NewSlider.SliderInner
                    local SliderProgress = SliderInner.SliderOut

                    SliderProgress.Size = UDim2.new(0,
                        SliderInner.AbsoluteSize.X *
                        ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) >
                        5 and
                        SliderInner.AbsoluteSize.X *
                        (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

                    if not SliderSettings.Suffix then
                        NewSlider.Value.Text = tostring(SliderSettings.CurrentValue)
                    else
                        NewSlider.Value.Text = SliderSettings.Suffix .. ": " .. tostring(SliderSettings.CurrentValue)
                    end

                    NewSlider.InputBegan:Connect(function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = true
                        end
                    end)
                    NewSlider.InputEnded:Connect(function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = false
                        end
                    end)

                    NewSlider.MouseButton1Down:Connect(function()
                        local Current = SliderProgress.AbsolutePosition.X + SliderProgress.AbsoluteSize.X
                        local Start = Current
                        local Location;
                        local Loop; Loop = RunService.Stepped:Connect(function()
                            if Dragging then
                                Location = UserInputService:GetMouseLocation().X
                                Current = Current + 0.025 * (Location - Start)

                                if Location < SliderInner.AbsolutePosition.X then
                                    Location = SliderInner.AbsolutePosition.X
                                elseif Location > SliderInner.AbsolutePosition.X + SliderInner.AbsoluteSize.X then
                                    Location = SliderInner.AbsolutePosition.X + SliderInner.AbsoluteSize.X
                                end

                                if Current < SliderInner.AbsolutePosition.X + 5 then
                                    Current = SliderInner.AbsolutePosition.X + 5
                                elseif Current > SliderInner.AbsolutePosition.X + SliderInner.AbsoluteSize.X then
                                    Current = SliderInner.AbsolutePosition.X + SliderInner.AbsoluteSize.X
                                end

                                if Current <= Location and (Location - Start) < 0 then
                                    Start = Location
                                elseif Current >= Location and (Location - Start) > 0 then
                                    Start = Location
                                end
                                TweenService:Create(SliderProgress,
                                    TweenInfo.new(0.2, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
                                    { Size = UDim2.new(0, Current - SliderInner.AbsolutePosition.X, 1, 0) }):Play()
                                local NewValue = SliderSettings.Range[1] +
                                    (Location - SliderInner.AbsolutePosition.X) / SliderInner.AbsoluteSize.X *
                                    (SliderSettings.Range[2] - SliderSettings.Range[1])

                                NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) *
                                    (SliderSettings.Increment * 10000000) / 10000000
                                if not SliderSettings.Suffix then
                                    NewSlider.Value.Text = tostring(NewValue)
                                else
                                    NewSlider.Value.Text = SliderSettings.Suffix ..
                                        ": " .. tostring(SliderSettings.CurrentValue)
                                end

                                if SliderSettings.CurrentValue ~= NewValue then
                                    local Success, Response = pcall(function()
                                        SliderSettings.Callback(NewValue)
                                    end)
                                    if not Success then
                                        error("Error: " .. NewSlider.Name .. " /// " .. tostring(Response))
                                    end

                                    SliderSettings.CurrentValue = NewValue
                                end
                            else
                                TweenService:Create(SliderProgress,
                                    TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
                                    {
                                        Size = UDim2.new(0,
                                            Location - SliderInner.AbsolutePosition.X > 5 and
                                            Location - SliderInner.AbsolutePosition.X or 5, 1, 0)
                                    }):Play()
                                Loop:Disconnect()
                            end
                        end)
                    end)

                    return Slider
                end

                function Tab:CreateLabel(Name, cadeado)
                    cadeado = cadeado or false

                    local Label = {}

                    local NewLabel = Elements.TextLabel:Clone()
                    NewLabel.Name = "Label__" .. tostring(Name)
                    NewLabel.Title.Text = tostring(Name)
                    NewLabel.Parent = NewSection

                    if cadeado == false then
                        NewLabel.Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                        NewLabel.Title.TextTransparency = 0
                        for i, v in pairs(NewLabel:GetChildren()) do
                            if v.Name == "lock" then
                                v.Visible = false
                            end
                        end
                    end

                    function Label:Refresh(EditValue)
                        NewLabel.Title.Text = tostring(EditValue)
                    end

                    return Label
                end

                function Tab:CreateBox(text, callback, holder)
                    local InputSettings = {
                        Name = text,
                        Callback = callback,
                        PlaceholderText = holder or "Place value here"
                    }

                    local InputBox = {}

                    local NewInput = Elements.InputBox:Clone()
                    NewInput.Name = "Input__" .. InputSettings.Name
                    NewInput.Title.Text = InputSettings.Name
                    NewInput.Parent = NewSection
                    NewInput.Input.Search.PlaceholderText = InputSettings.PlaceholderText

                    local InputTool = NewInput.Input.Search

                    InputTool.FocusLost:Connect(function()
                        local Success, Response = pcall(function()
                            InputSettings.Callback(InputTool.Text)
                        end)
                        if not Success then
                            error("Error: " .. NewInput.Name .. " /// " .. tostring(Response))
                        end
                    end)

                    return InputBox
                end

                return Tab
            end

            return Window
        end

        local Window = MacroXLibrary:Window({
            Title = "MacroX",        -- Nome do Script (ROXO)
            SubTitle = "Hub [Vip+]", -- SubTitulo ou Acompanhamento do Nome (BRANCO)
            KeyBind =
            "Backspace"              -- KeyBind Abrir e Fechar // https://create.roblox.com/docs/reference/engine/enums/KeyCode
        })

        getgenv().newtab = function(text)
            return Window:Tab(text)
        end



        for i, v in pairs(game.CoreGui:GetChildren()) do
            if v.Name == "ScreenGui" then v:Destroy() end
        end

        local localPlayer = game.Players.LocalPlayer
        local localChar = localPlayer.Character or localPlayer.CharacterAdded:wait()
        local localRoot = localChar and localChar:FindFirstChild('HumanoidRootPart')
        game:GetService('RunService').Heartbeat:Connect(function()
            pcall(function()
                localChar = game.Players.LocalPlayer.Character
                localRoot = game.Players.LocalPlayer.Character.HumanoidRootPart
            end)
        end)
        local connections = {}

        connections.respawn = localPlayer.CharacterAdded:Connect(function(newCharacter)
            localChar = newCharacter
            localRoot = newCharacter:WaitForChild('HumanoidRootPart')
        end)



        local NOTIFICACOES = Instance.new('ScreenGui')

        NOTIFICACOES.Parent = game.CoreGui
        local inicial = UDim2.new(0.729397297, 0, 0.0177165568, 0)
        local fora = UDim2.new(1.729397297, 0, 0.0177165568, 0)

        function organizar()
            for i, v in pairs(NOTIFICACOES:GetChildren()) do
                local num = 0.1277165568 * i
                game:GetService('TweenService'):Create(v, TweenInfo.new(0.5), {
                    Position = UDim2.new(0.729397297, 0, num, 0)
                }):Play()
            end
        end

        local Notify_ = game:GetObjects("rbxassetid://13426360845")[1]
        Notify_.Parent = game:GetService("CoreGui")

        function notificar(title, text, type_, duration)
            local Template = Notify_.Templates
                [(type_ == 1 and "Notify") or (type_ == 2 and "Warning Notify") or (type_ == 3 and "Error Notify")]
                :Clone()
            local function ChangeState(boolean, dl)
                dl = dl or 0.1
                local Trans = boolean and 0 or 1
                game:GetService("TweenService"):Create(Template,
                    boolean and TweenInfo.new(dl) or TweenInfo.new(dl, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                    { BackgroundTransparency = Trans }):Play()
                for i, v in pairs(Template:GetDescendants()) do
                    if v:IsA("TextLabel") then
                        game:GetService("TweenService"):Create(v,
                            boolean and TweenInfo.new(dl) or
                            TweenInfo.new(dl, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                            { TextTransparency = Trans }):Play()
                    elseif v:IsA("ImageLabel") then
                        if v.Name == "DropShadow" then
                            game:GetService("TweenService"):Create(v,
                                boolean and TweenInfo.new(dl) or
                                TweenInfo.new(dl, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                                { ImageTransparency = boolean and 0.5 or 1 }):Play()
                        else
                            game:GetService("TweenService"):Create(v,
                                boolean and TweenInfo.new(dl) or
                                TweenInfo.new(dl, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                                { ImageTransparency = Trans }):Play()
                        end
                    elseif v:IsA("Frame") then
                        if v.Name ~= "Shadow" then
                            game:GetService("TweenService"):Create(v,
                                boolean and TweenInfo.new(dl) or
                                TweenInfo.new(dl, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                                { BackgroundTransparency = Trans }):Play()
                        end
                    end
                end
            end
            spawn(function()
                ChangeState(false, 0)
                wait(0.01)
                ChangeState(true, 0.5)
                Template.Parent = Notify_.NotifyHolder
                Template.Title.Text = title

                Template.Shadow.DropShadow.Size = Template.Shadow.DropShadow.Size + UDim2.new(0.08, 0, 0.40, 0)
                Template.Content.Text = text

                delay(duration, function()
                    spawn(function()
                        ChangeState(false, 1)
                        wait(1)
                        Template:Destroy()
                    end)
                end)
            end)
        end

        pcall(function()
            for i, v in next, workspace:GetChildren() do
                if v.Name == 'Cell' then
                    v:FindFirstChild('Door'):Destroy()
                end
            end
        end)

        local main = {}

        local alturaMaxima = 1000

        function main.teto(posicao)
            local humanoid = game.Players.LocalPlayer.Character.Humanoid
            local raioDeColisao = Vector3.new(2, 2, 2)
            local parteDeTeste = Instance.new('Part')
            parteDeTeste.Size = Vector3.new(0, 0, 0)
            parteDeTeste.Anchored = true
            parteDeTeste.CanCollide = true
            parteDeTeste.Position = posicao + Vector3.new(0, 10, 0)
            parteDeTeste.Parent = workspace
            local parteTocada, pontoDeContato = workspace:FindPartOnRayWithIgnoreList(
                Ray.new(parteDeTeste.Position, Vector3.new(0, 1, 0).unit * alturaMaxima), { parteDeTeste })
            parteDeTeste:Destroy()
            if parteTocada then
                return true
            else
                return false
            end
        end

        local speaker = game.Players.LocalPlayer

        local gcs = {}


        for i, v in pairs(getgc(true)) do
            if typeof(v) == 'function' then
                if (getinfo(v).name == 'attemptPunch' or getinfo(v).name == 'StartSkydiving') then
                    gcs[getinfo(v).name] = v
                    task.wait()
                end
            end
        end

        function main.specs(name)
            local tab = {}
            for i, v in next, require(game:GetService('ReplicatedStorage').Module.UI).CircleAction.Specs do
                if v.Name == name then
                    tab[#tab + 1] = v
                end
            end
            return tab
        end

        function anti_ragdoll(bool)
            anti_ragdoll_running = bool
        end

        function carro()
            pcall(
                function()
                    if getHumanoid().Sit == false then
                        local args = { [1] = 'Chassis', [2] = 'Camaro' }

                        game:GetService('ReplicatedStorage'):WaitForChild('GarageSpawnVehicle'):FireServer(unpack(args))
                    end
                end
            )
            wait(1)
        end

        local GUN_Names =
            ('Rifle Pistol Revolver Flintlock AK47 Uzi Shotgun Sword ForcefieldLauncher PlasmaPistol Sniper'):split(' ')
        local localPlayer = game.Players.LocalPlayer

        local RunService = game:GetService('RunService')
        local eventos = {}
        local can = true

        function main.get_gun(name)
            if can then
                can = false
                eventos.teleport = RunService.Heartbeat:Connect(function()
                    localRoot.CFrame = CFrame.new(10.554950714111328, 19.565845489501953, -1725.76953125)
                end)
                local a
                getGUNTIME = 0
                repeat
                    pcall(function()
                        a = game:GetService('Players').LocalPlayer.PlayerGui.GunShopGui.Container.Container.Main
                            .Container
                            .Slider:FindFirstChild(name)
                        firesignal(a.Bottom.Action.MouseButton1Down)
                    end)
                    getGUNTIME = getGUNTIME + 0.3
                    wait(0.1)
                until (a ~= nil and a.Bottom.Action.Text == 'UNEQUIP') or getGUNTIME > 2
                task.wait()
                eventos.teleport:Disconnect()
                can = true
            end
        end

        local vehicles_selects_ = {}

        function tem(nome)
            for i, v in pairs(vehicles_selects_) do
                if v == nome then
                    return true
                end
            end
            return false
        end

        function main.getCamaro()
            local vehicle, spec, nearest = nil, nil, 1000
            local Root = getRoot(speaker)
            for i, v in next, require(game.ReplicatedStorage.Module.UI).CircleAction.Specs do
                if v.ValidRoot ~= nil and (v.Name == 'Enter Driver' or v.Name == 'Hijack') and tem(v.ValidRoot.Name) and v.ValidRoot.Seat.Player.Value == false then
                    local dist = (v.ValidRoot.PrimaryPart.Position - Root.Position).Magnitude

                    if dist < nearest then
                        vehicle, spec, nearest = v.ValidRoot, v, dist
                    end
                end
            end
            if vehicle ~= nil then
                return vehicle, spec, nearest
            end
            if getHumanoid().Sit == false then
                carro()
            end
        end

        function main.getCar()
            for i, v in pairs(game:GetService('Workspace').Vehicles:GetChildren()) do
                if v:FindFirstChild('Seat') and v.Seat:FindFirstChild('PlayerName') ~= nil then
                    if v.Seat.PlayerName.Value == game.Players.LocalPlayer.Name then
                        return v.Seat.Parent.Engine
                    end
                end
            end
            return nil
        end

        getgenv().getCar = main.getCar
        function main.bag()
            local sucess, title = pcall(function()
                return game:GetService('Players').LocalPlayer.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount
            end)
            if not sucess then
                return false
            end
            if title.Parent.Parent.Parent.Parent.Enabled == false then
                return false
            end
            local args = title.Text:split(' / ')

            if args[1] == args[2] then
                return true
            else
                return false
            end
        end

        function main.bag2()
            local sucess, title = pcall(function()
                return game:GetService('Players').LocalPlayer.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount
            end)
            if not sucess then
                return "$0 / $0"
            end
            if title.Parent.Parent.Parent.Parent.Enabled == false then
                return "$0 / $0"
            end
            local args = title.Text:split(' / ')

            return args[1] .. " / " .. args[2]
        end

        function Procurar(pos)
            local caminho = {}
            local humanoidRootPart = localRoot
            local pathfindingService = game:GetService('PathfindingService')
            local path = pathfindingService:CreatePath()
            path:ComputeAsync(humanoidRootPart.Position, pos)
            path:GetWaypoints()
            return caminho
        end

        function main.path_find(pos, altura, customvelo, check, enquanto)
            check = check or function() return true end
            customvelo = customvelo or 140
            altura = altura or 3
            local caminho = {}
            local humanoidRootPart = localRoot
            local pathfindingService = game:GetService('PathfindingService')
            local path = pathfindingService:CreatePath()
            path:ComputeAsync(humanoidRootPart.Position, pos)

            if path.Status == Enum.PathStatus.Success then
                caminho = path:GetWaypoints()
            else
                return false
            end

            local ENQUANTO = true
            spawn(function()
                while ENQUANTO do
                    pcall(enquanto)
                    wait(0.1)
                end
            end)
            if caminho and typeof(caminho) == 'table' and #caminho > 0 then
                local bodyPosition = Instance.new('BodyPosition')
                bodyPosition.P = 50000
                bodyPosition.D = 500
                bodyPosition.MaxForce = Vector3.new(9e9, 9e9, 9e9)

                local continuea = false
                local SENTANDO = false
                spawn(function()
                    while SENTANDO == false do
                        if getHumanoid().Sit == true and not main.getCar() then
                            ExitCar()
                        end
                        wait()
                    end
                end)

                local i = 1
                while i <= #caminho do
                    if check() then
                        local Lugar = caminho[i].Position + Vector3.new(0, altura, 0)
                        Tp1(Lugar, nil, 50)
                        i = i + 1
                    else
                        break
                    end
                end

                SENTANDO = true
                bodyPosition:Destroy()

                if check() then
                    return true
                else
                    return false
                end
            end
            ENQUANTO = false
            return false
        end

        local Robberys = {
            ['1'] = 'Bank',
            ['2'] = 'Jewelry Store',
            ['3'] = 'Museum',
            ['4'] = 'Power Plant',
            ['5'] = 'Passenger Train',
            ['6'] = 'Cargo Train',
            ['7'] = 'Cargo Ship',
            ['8'] = 'Cargo Plane',
            ['9'] = 'Gas Station',
            ['10'] = 'Donut Store',
            ['11'] = 'Money Truck',
            ['12'] = 'Home Vault',
            ['13'] = 'Tomb',
            ['14'] = 'Casino',
            ['15'] = 'Mansion'
        }
        function get_rob(nome)
            for i, v in pairs(Robberys) do
                if v:lower() == nome:lower() then
                    return i
                end
            end
        end

        function main.is_opened(rob)
            local roubo = get_rob(rob)

            local State = game:GetService('ReplicatedStorage').RobberyState:FindFirstChild(roubo)

            return (tostring(State) == 'nil' and 'fechado') or
                ((State.Value == 1 and 'aberto') or (State.Value == 2 and 'roubando') or (State.Value == 3 and 'fechado'))
        end

        local Noclip = {}
        Noclip.__index = Noclip

        function Noclip.new(character)
            local self = setmetatable({}, Noclip)
            self.character = character
            self.loop = nil
            self.enabled = false
            return self
        end

        function Noclip:setEnabled(enabled)
            if enabled == self.enabled then
                return
            end

            self.enabled = enabled

            if enabled then
                self.loop = game:GetService("RunService").Stepped:Connect(function()
                    for _, part in ipairs(self.character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end)
            else
                if self.loop then
                    self.loop:Disconnect()
                end
                for _, part in ipairs(self.character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
        end

        local noclip = nil

        function main.noclip(bool)
            if bool then
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                noclip = Noclip.new(character)
                noclip:setEnabled(true)
            else
                if noclip then
                    noclip:setEnabled(false)
                end
            end
        end

        local noclipped = false
        local function noclip(bool)
            noclipped = bool

            game:GetService("RunService").Stepped:Connect(function()
                for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide == true then
                        v.CanCollide = not noclipped
                    end
                end
            end)
        end


        function main.esperar(bloco, numero, other)
            other = other or function()
            end
            local dist = 5000
            repeat
                if other then
                    other()
                end
                local localplayer = game.Players.LocalPlayer
                local character = localplayer.Character or localplayer.CharacterAdded:wait()
                local bloco_position = (typeof(bloco) == 'Vector3' and bloco) or
                    (typeof(bloco) == 'Instance' and bloco.Position)
                local root_position = character:FindFirstChild('HumanoidRootPart').Position

                dist = (bloco_position - root_position).Magnitude
                task.wait()
            until (dist <= numero) or getHumanoid().Health == 0
        end

        local lasers = false
        function main.laser(bool)
        end

        getRoot = function(plr)
            plr = plr or game.Players.LocalPlayer
            local sucess, root = pcall(function()
                return plr.Character.HumanoidRootPart or false
            end)
            return root
        end

        add_fly = function(tab, text)
            local FLYSPEED = 50
            local normal_speed = 100
            local fast_speed = 400
            game:GetService("UserInputService").InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = fast_speed
                end
            end)

            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = normal_speed
                end
            end, "noclip")


            tab:CreateButton(text, function()
                local mouse = game.Players.LocalPlayer:GetMouse()
                local plr = game.Players.LocalPlayer
                local torso = plr.Character.Head
                local flying = false
                local ctrl = {
                    f = 0,
                    b = 0,
                    l = 0,
                    r = 0
                }
                local maxspeed = 100

                function Fly()
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    local plr = game.Players.LocalPlayer
                    local torso = plr.Character.Head
                    local bg = Instance.new('BodyGyro', torso)
                    bg.P = 10000
                    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    bg.cframe = torso.CFrame
                    local bv = Instance.new('BodyVelocity', torso)
                    bv.velocity = Vector3.new(0, 0.1, 0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

                    flying = true
                    while flying do
                        wait()

                        if ctrl.f + ctrl.b ~= 0 or ctrl.l + ctrl.r ~= 0 then
                            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) +
                                ((game.Workspace.CurrentCamera.CoordinateFrame *
                                        CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0).p) -
                                    game.Workspace.CurrentCamera.CoordinateFrame.p)) * FLYSPEED
                        else
                            bv.velocity = Vector3.new(0, 0.1, 0)
                        end

                        bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                            CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * FLYSPEED / maxspeed), 0, 0)
                    end

                    bg:Destroy()
                    bv:Destroy()
                    plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                end

                mouse.KeyDown:connect(function(key)
                    if key:lower() == 'x' then
                        if flying then
                            flying = false
                        else
                            flying = true
                            Fly()
                        end
                    elseif key:lower() == 'w' then
                        ctrl.f = 1
                    elseif key:lower() == 's' then
                        ctrl.b = -1
                    elseif key:lower() == 'a' then
                        ctrl.l = -1
                    elseif key:lower() == 'd' then
                        ctrl.r = 1
                    end
                end)

                mouse.KeyUp:connect(function(key)
                    if key:lower() == 'w' then
                        ctrl.f = 0
                    elseif key:lower() == 's' then
                        ctrl.b = 0
                    elseif key:lower() == 'a' then
                        ctrl.l = 0
                    elseif key:lower() == 'd' then
                        ctrl.r = 0
                    end
                end)
            end)
        end

        getCharacter = function(plr)
            plr = plr or speaker
            return plr.Character or false
        end

        getHumanoid = function(plr)
            plr = plr or game.Players.LocalPlayer
            if getCharacter() then
                for i, v in pairs(getCharacter():GetChildren()) do
                    if v:IsA("Humanoid") then
                        return v
                    end
                end
                return false
            else
                return false
            end
            return false
        end

        function ___(bool, num)
            if bool and num then
                getHumanoid().Name = "macro_"
                delay(num, function()
                    getHumanoid().Name = "Humanoid"
                end)
                return
            end
            if bool then
                getHumanoid().Name = "macro_"
            else
                spawn(function()
                    for i = 1, 10 do
                        getHumanoid().Name = "Humanoid"
                        wait()
                    end
                end)
            end
        end

        getCharacter = function(plr)
            plr = plr or game.Players.LocalPlayer
            local sucess, char = pcall(function()
                return plr.Character or false
            end)
            return char
        end

        FindPlayer = function(playerName)
            local target = false

            for i, v in pairs(game.Players:GetChildren()) do
                if v.Name:lower():match(playerName:lower()) or v.DisplayName:lower():match(playerName:lower()) then
                    target = v
                end
            end

            return target
        end

        FindTool = function(plr, name)
            plr = plr or game.Players.LocalPlayer
            local Tool = plr.Backpack:FindFirstChild(name) or plr.Character:FindFirstChild(name)
            if Tool then
                return Tool
            end
            return false
        end

        getNearest = function(teamcheck)
            local nearest = 9e9
            local target

            for i, v in pairs(game.Players:GetChildren()) do
                if game.Players.LocalPlayer ~= v then
                    pcall(function()
                        if ((teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor) or teamcheck == false) then
                            local mag = (v.Character.Head.Position - game.Players.LocalPlayer.Character.Head.Position)
                                .Magnitude

                            if mag < nearest then
                                nearest = mag
                                target = v
                            end
                        end
                    end)
                end
            end

            return target
        end

        getNearestToMouse = function(fov, teamcheck)
            local target = nil
            local dist = fov

            local mouse = game.Players.LocalPlayer:GetMouse()

            local camera = workspace.CurrentCamera

            for i, v in pairs(game.Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer and
                    ((teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor) or teamcheck == false) then
                    if v.Character ~= nil and v.Character:FindFirstChild('Head') and
                        v.Character:FindFirstChild('Humanoid').Health > 0 then
                        local vector, onscreen = camera:worldToViewportPoint(v.Character.Head.Position)

                        local mag = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).Magnitude

                        if onscreen and mag < dist then
                            dist = mag
                            target = v
                        end
                    end
                end
            end

            return target
        end


        sendNotification = function(titlee, text, duration)
            if game.CoreGui:FindFirstChild('Notification') then
                for i, v in pairs(game.CoreGui:GetChildren()) do
                    if v.Name == 'Notification' and v:FindFirstChild('Frame') then
                        v.Frame:TweenPosition(UDim2.new(0.344000012, 0, -1.0219999999, 0), 'InOut', 'Quart', 1, true)
                    end
                end
            end
            local Notification = Instance.new('ScreenGui')
            local Frame = Instance.new('Frame')
            local UICorner = Instance.new('UICorner')
            local DropShadow = Instance.new('Frame')
            local UICorner_2 = Instance.new('UICorner')
            local DropShadow_2 = Instance.new('Frame')
            local UICorner_3 = Instance.new('UICorner')
            local DropShadow_3 = Instance.new('Frame')
            local UICorner_4 = Instance.new('UICorner')
            local DropShadow_4 = Instance.new('Frame')
            local UICorner_5 = Instance.new('UICorner')
            local title = Instance.new('TextLabel')
            local Mesage = Instance.new('TextLabel')

            Notification.Name = 'Notification'
            Notification.Parent = game.CoreGui

            Frame.Parent = Notification
            Frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
            Frame.BorderSizePixel = 0
            Frame.Position = UDim2.new(0.344000012, 0, -1.0219999999, 0)
            Frame.Size = UDim2.new(0.311650485, 0, 0.1640625, 0)
            Frame.ZIndex = 5

            spawn(function()
                Frame:TweenPosition(UDim2.new(0.344000012, 0, 0.0219999999, 0), 'InOut', 'Quart', 1, true)
                wait(1)
                wait(duration)
                Frame:TweenPosition(UDim2.new(0.344000012, 0, -1.0219999999, 0), 'InOut', 'Quart', 1, true)
            end)

            UICorner.CornerRadius = UDim.new(0, 25)
            UICorner.Parent = Frame

            DropShadow.Name = 'DropShadow'
            DropShadow.Parent = Frame
            DropShadow.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            DropShadow.BorderSizePixel = 0
            DropShadow.Position = UDim2.new(0.0031152647, 0, 0.00952380989, 0)
            DropShadow.Size = UDim2.new(1, 0, 1, 0)

            UICorner_2.CornerRadius = UDim.new(0, 25)
            UICorner_2.Parent = DropShadow

            DropShadow_2.Name = 'DropShadow'
            DropShadow_2.Parent = Frame
            DropShadow_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            DropShadow_2.BorderSizePixel = 0
            DropShadow_2.Position = UDim2.new(-0.0031152647, 0, -0.00952380989, 0)
            DropShadow_2.Size = UDim2.new(1, 0, 1, 0)

            UICorner_3.CornerRadius = UDim.new(0, 25)
            UICorner_3.Parent = DropShadow_2

            DropShadow_3.Name = 'DropShadow'
            DropShadow_3.Parent = Frame
            DropShadow_3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            DropShadow_3.BorderSizePixel = 0
            DropShadow_3.Position = UDim2.new(-0.0031152647, 0, 0.00952380989, 0)
            DropShadow_3.Size = UDim2.new(1, 0, 1, 0)

            UICorner_4.CornerRadius = UDim.new(0, 25)
            UICorner_4.Parent = DropShadow_3

            DropShadow_4.Name = 'DropShadow'
            DropShadow_4.Parent = Frame
            DropShadow_4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            DropShadow_4.BorderSizePixel = 0
            DropShadow_4.Position = UDim2.new(0.0031152647, 0, -0.00952380989, 0)
            DropShadow_4.Size = UDim2.new(1, 0, 1, 0)

            UICorner_5.CornerRadius = UDim.new(0, 25)
            UICorner_5.Parent = DropShadow_4

            title.Name = 'title'
            title.Parent = Frame
            title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            title.BackgroundTransparency = 1.000
            title.BorderSizePixel = 0
            title.Position = UDim2.new(0, 0, 0.00952380989, 0)
            title.Size = UDim2.new(0.996884763, 0, 0.323809534, 0)
            title.ZIndex = 5
            title.Font = Enum.Font.Arial
            title.TextColor3 = Color3.fromRGB(255, 0, 0)
            title.TextSize = 20.000
            title.TextWrapped = true
            title.Text = titlee

            Mesage.Name = 'Mesage'
            Mesage.Parent = Frame
            Mesage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Mesage.BackgroundTransparency = 1.000
            Mesage.BorderSizePixel = 0
            Mesage.Position = UDim2.new(0, 0, 0.333333343, 0)
            Mesage.Size = UDim2.new(0.996884763, 0, 0.657142878, 0)
            Mesage.ZIndex = 5
            Mesage.Font = Enum.Font.Arial
            Mesage.Text = text
            Mesage.TextColor3 = Color3.fromRGB(255, 0, 0)
            Mesage.TextScaled = true
            Mesage.TextSize = 20.000
            Mesage.TextWrapped = true
        end

        Translate = function(num)
            function round(num, numDecimalPlaces)
                local mult = 10 ^ (numDecimalPlaces or 0)
                return math.floor(num * mult + 0.5) / mult
            end

            function converttoletter(num)
                if num / 1e21 >= 1 then
                    newnum = num / 1e21
                    return round(newnum, 6) .. 'Sx'
                elseif num / 1e18 >= 1 then
                    newnum = num / 1e18
                    return round(newnum, 6) .. 'Qi'
                elseif num / 1e15 >= 1 then
                    newnum = num / 1e15
                    return round(newnum, 6) .. 'Qa'
                elseif num / 1e12 >= 1 then
                    newnum = num / 1e12
                    return round(newnum, 6) .. 'T'
                elseif num / 1e09 >= 1 then
                    newnum = num / 1e09
                    return round(newnum, 6) .. 'B'
                elseif num / 1e06 >= 1 then
                    newnum = num / 1e06
                    return round(newnum, 6) .. 'M'
                elseif num / 1e03 >= 1 then
                    newnum = num / 1e03
                    return round(newnum, 6) .. 'K'
                else
                    return num
                end
            end

            return converttoletter(num)
        end

        KeyEvent = function(key, pressed)
            game:GetService('VirtualInputManager'):SendKeyEvent(pressed, key, false, game)
        end
        ExitCar = function()
            if main.getCar() then
                repeat
                    wait()
                    KeyEvent(Enum.KeyCode.Space, true)
                    task.wait()
                    KeyEvent(Enum.KeyCode.Space, false)
                until not main.getCar()
            end
        end

        local localPlayer = game.Players.LocalPlayer


        local time_loaded = 0

        repeat
            task.wait()
            time_loaded = time_loaded + 0.02
        until getgenv().newtab
        moretti = {}

        function moretti:CreateTab(text)
            return getgenv().newtab(text)
        end

        function dropdown(tab)
            local newDrop = game:GetObjects("rbxassetid://13573199555")[1]
            newDrop.Parent = game.CoreGui
            newDrop.Background.Active = true
            newDrop.Background.Draggable = true
            newDrop.Enabled = false

            function toggle(text, callback)
                local Template = newDrop.Background["Tab Container"].ScrollingFrame.Template:Clone()
                Template.Parent = newDrop.Background["Tab Container"].ScrollingFrame
                Template.Visible = true
                Template.Name = "new_"
                Template.Text = string.sub(tostring(text), 1, 20)
                newDrop.Background["Tab Container"].ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
                local toggled = false
                Template.MouseButton1Click:Connect(function()
                    toggled = not toggled

                    if toggled then
                        game:GetService("TweenService"):Create(Template.Frame.ImageLabel, TweenInfo.new(0.3),
                            { ImageTransparency = 0 }):Play()
                    else
                        game:GetService("TweenService"):Create(Template.Frame.ImageLabel, TweenInfo.new(0.3),
                            { ImageTransparency = 1 }):Play()
                    end

                    pcall(callback, toggled)
                end)
            end

            local tab_to_update = {}

            for i, v in pairs(tab) do
                toggle(tostring(v), function(bool)
                    if bool then
                        table.insert(tab_to_update, tostring(v))
                    else
                        table.remove(tab_to_update, table.find(tab_to_update, tostring(v)))
                    end
                end)
            end

            return function()
                return tab_to_update, newDrop
            end
        end

        if game.PlaceId == Jogos["Krush Pvp"] then
            local Farm = moretti:CreateTab("Farn")
            local Combat = moretti:CreateTab("Combat")
            local Teleports = moretti:CreateTab("Teleports")
            local Others = moretti:CreateTab("Others")

            local Variables = {
                ["Aimbot"] = {
                    enabled = false,
                    pressed = false,
                    fov = 0,
                    key = "LeftControl"
                },
                ["SilentAim"] = {
                    enabled = false,
                    chance = 50,
                    fov = 0,
                }
            }
            function atirar(posicao)
                local sucess, character = pcall(function()
                    return game:GetService("Players").LocalPlayer.Character
                end)
                if sucess then
                    for i, v in pairs(character:GetChildren()) do
                        if v:IsA("Tool") then
                            v.EventsFolder.Fire:FireServer(posicao, character.Head.Position)
                        end
                    end
                end
            end

            function inflict(player, part)
                part = part or "Head"
                local Inflict = game:GetService("Players").LocalPlayer:FindFirstChild("InflictTarget")
                local tool = game.Players.LocalPlayer.Character
                if tool then
                    tool = tool:FindFirstChildWhichIsA("Tool")

                    if tool then
                        tool = tool:FindFirstChild("EventsFolder")

                        if tool then
                            tool = tool:FindFirstChild("InflictTarget")

                            if tool then
                                pcall(function()
                                    tool:FireServer(player.Character.Humanoid, player.Character[part], Vector3.new(0, 0, 0))
                                end)
                            end
                        end
                    end
                end
            end

            local function visao(jogador)
                local personagem = getRoot().Parent

                local direcaoJogador = (jogador.Character.HumanoidRootPart.Position - personagem.HumanoidRootPart.Position)
                    .unit
                local distanciaJogador = (jogador.Character.HumanoidRootPart.Position - personagem.HumanoidRootPart.Position)
                    .magnitude
                local ray = Ray.new(personagem.HumanoidRootPart.Position, direcaoJogador * distanciaJogador)

                local hitPart, hitPosition = workspace:FindPartOnRay(ray, personagem)


                if hitPart and hitPart:IsDescendantOf(jogador.Character) then
                    return true
                else
                    return false
                end
            end
            local function tp(arg)
                local x = require(game.Players.LocalPlayer.PlayerScripts.ChatScript.ChatMain)
                x.MessagePosted:fire("/" .. arg)
            end
            local function tem_quantos(area)
                local Players = {}

                local item = {
                    ["pvp"] = { dist = 2000, pos = Vector3.new(-11770, 54, 1558) },
                    ["predio"] = { dist = 500, pos = Vector3.new(14135, 7117, -76) }
                }
                local selected = item[area]

                for i, v in pairs(game.Players:GetChildren()) do
                    if v ~= speaker and getRoot(v) and getRoot() then
                        if (getRoot(v).Position - selected.pos).Magnitude < selected.dist then
                            Players[#Players + 1] = v
                        end
                    end
                end


                return #Players
            end
            local function equipar(number)
                number = (number == 1 and "Pistola") or (number == 2 and "Fuzil")

                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipTool"):FireServer(game
                    :GetService("Players").LocalPlayer:WaitForChild(number))
            end
            local function equipado()
                for i, v in pairs(getRoot().Parent:GetChildren()) do
                    if v:IsA("Tool") then
                        return v
                    end
                end
                return false
            end
            getNearest = function(teamcheck)
                local nearest = 999
                local target
                for i, v in pairs(game.Players:GetChildren()) do
                    if game.Players.LocalPlayer ~= v then
                        pcall(function()
                            if teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor or teamcheck == false then
                                local mag = (v.Character.Head.Position - game.Players.LocalPlayer.Character.Head.Position)
                                    .Magnitude
                                if mag < nearest then
                                    nearest = mag
                                    target = v
                                end
                            end
                        end)
                    end
                end
                return target
            end
            getNearestToMouse = function(fov, teamcheck)
                local target = nil
                local dist = fov

                local mouse = game.Players.LocalPlayer:GetMouse()

                local camera = workspace.CurrentCamera

                for i, v in pairs(game.Players:GetChildren()) do
                    if v ~= game.Players.LocalPlayer and ((teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor) or teamcheck == false) then
                        if v.Character ~= nil and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid').Health > 0 then
                            local vector, onscreen = camera:worldToViewportPoint(v.Character.Head.Position)

                            local mag = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(vector.X, vector.Y)).Magnitude

                            if onscreen and mag < dist then
                                dist = mag
                                target = v
                            end
                        end
                    end
                end

                return target
            end

            Combat:CreateLabel("Combat:")
            --[[WalkSpeed]]
            do
                local walk_speed = nil
                Combat:CreateSlider("Walk Speed", 16, 250, function(value)
                    walk_speed = value
                end)
                game:GetService("RunService").RenderStepped:Connect(function()
                    if walk_speed ~= 16 and walk_speed ~= nil then
                        getHumanoid().WalkSpeed = walk_speed
                    end
                end)
            end

            --[[Avatar Changer]]
            Others:CreateLabel("Avatar Changer:")
            do
                Others:CreateButton("Random Clothes [Male]", function()
                    local args = {
                        [1] = "LoadAvatar",
                        [2] = {
                            ["LastName"] = "Thuthuco",
                            ["Name"] = "Piu",
                            ["Genre"] = "Male",
                            ["Tone"] = tostring(math.random(1, 5))
                        }
                    }
                    for i, v in pairs(game:GetService("ReplicatedStorage").Assets.Customization:GetChildren()) do
                        args[2][tostring(v)] = math.random(1, #v:GetChildren())
                    end
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Handler"):FireServer(
                        unpack(args))
                end, "roupa homem")

                Others:CreateButton("Random Clothes [Female]", function()
                    local args = {
                        [1] = "LoadAvatar",
                        [2] = {
                            ["LastName"] = "Apaixonada",
                            ["Name"] = "Laurinha",
                            ["Genre"] = "Female",
                            ["Tone"] = tostring(math.random(1, 5))
                        }
                    }
                    for i, v in pairs(game:GetService("ReplicatedStorage").Assets.Customization:GetChildren()) do
                        args[2][tostring(v)] = math.random(1, #v:GetChildren())
                    end
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Handler"):FireServer(
                        unpack(args))
                end, "roupa mulher")

                Others:CreateToggle("Loop Random Clothes [Male]", function(bool)
                    malerandom_ = bool

                    while task.wait(0.2) and malerandom_ do
                        flags("roupa homem")
                    end
                end)

                Others:CreateToggle("Loop Random Clothes [Female]", function(bool)
                    malerandom_ = bool

                    while task.wait(0.2) and malerandom_ do
                        flags("roupa mulher")
                    end
                end)
            end


            --[[Combat All]]
            do
                Combat:CreateToggle("Silent aim", function(bool)
                    Variables.SilentAim.enabled = bool
                end)

                Combat:CreateSlider("Head shot chance", 0, 100, function(value)
                    Variables.SilentAim.chance = value
                end)
            end

            --[[Auto Farms]]
            do
                Farm:CreateLabel("Farm:")

                Farm:CreateToggle("Kill All", function(bool)
                    farm_ = bool
                    if bool then
                        notificar("Kill All", "require: equip any gun", 2, 3)
                    end
                    spawn(function()
                        while farm_ do
                            pcall(function()
                                if equipado() == false then
                                    equipar(1)
                                    wait(2)
                                end
                                for i, v in pairs(game.Players:GetChildren()) do
                                    if v ~= speaker then
                                        inflict(v)
                                    end
                                end
                            end)
                            task.wait()
                        end
                    end)
                end)
            end




            --[[Teleports]]
            Teleports:CreateLabel("Teleports:")
            do
                for i, v in pairs({ "pvp", "pvp2", "predio", "ammu", "rua", "fazenda", "fast", "hiper", "samir", "planet" }) do
                    Teleports:CreateButton(string.format("Teleport to %q", v), function()
                        notificar("Teleporting to:", v, 2, 3)
                        tp(v)
                    end)
                end
            end

            local old
            old = hookmetamethod(game, "__index", function(self, b)
                if tostring(self) == "Humanoid" then
                    if tostring(b) == "WalkSpeed" or tostring(b) == "JumpPower" then
                        return tostring(b) == "WalkSpeed" and 16 or 50
                    end
                end
                return old(self, b)
            end)
            local old2

            local pos_to_aim
            local function roll(t, _a, _b)
                return _a
                    and (_a > 0
                        and -math.random(1, _a)
                        or _a < 0
                        and (select(2, next(t, _b)) >= -_a
                            and next(t, _b)
                            or roll(t, _a + select(2, next(t, _b)), next(t, _b)))
                        or (next(t, _b)
                            and select(2, next(t, _b)) + roll(t, 0, next(t, _b))
                            or 0))
                    or roll(t, roll(t, roll(t, 0)))
            end


            spawn(function()
                while true do
                    if Variables.SilentAim.enabled then
                        local Player = getNearestToMouse(150, false)
                        if Player and getRoot(Player) then
                            pos_to_aim = getRoot(Player).Position

                            local chance = Variables.SilentAim.chance

                            local tabela = {
                                Head = chance,
                                UpperTorso = chance / 1.4,
                                HumanoidRootPart = chance / 1.8,
                                RightHand = chance / 2.4,
                                RightFoot = chance / 3
                            }
                            local selecionado = (chance == 0 and "RightHand") or (chance == 100 and "Head") or
                                (roll(tabela))

                            if selecionado then
                                inflict(Player, selecionado)
                            end
                        else
                            pos_to_aim = nil
                        end
                    else
                        pos_to_aim = nil
                    end
                    task.wait()
                end
            end)
            old2 = hookmetamethod(game, "__namecall", function(self, ...)
                local args = { ... }
                if getnamecallmethod() == "FireServer" then
                    if tostring(self) == "Fire" then
                        args[1] = pos_to_aim or args[1]
                    end
                end
                return old2(self, unpack(args))
            end)
        end

        if game.PlaceId == Jogos["Jailbreak"] then
            notificar("MacroXHub", "Loading Buttons..", 2, 3)
            wait(0.4)
            notificar("MacroXHub", "It is normal to have a screen freeze.", 2, 1)
            local tab_Auto = moretti:CreateTab('Farm')

            local tab_Combat = moretti:CreateTab('Combat')

            local tab_Esp = moretti:CreateTab('Visuals')

            local tab_Vehicle = moretti:CreateTab('Vehicles')

            local tab_Teleports = moretti:CreateTab('Map Teleports')

            local tab_SHOP = moretti:CreateTab("Shop Freatures")

            local tab_Robberys = moretti:CreateTab("Robberys Status")

            local tab_Others = moretti:CreateTab("Others")

            local tab_Credits = moretti:CreateTab("Credits")
            wait(1)
            notificar("MacroXHub", "Buttons Loaded!", 1, 4)

            tab_Vehicle:CreateLabel("Vehicles to teleport")


            local vehicles_ = ("Camaro Heli Roadster ShellMark5 TheAgent Bugatti Surus Firetruck Jeep Torpedo Cybertruck UFO Macaron Volt4x4 Cruiser BeamHybrid Torero IceBreaker Parisian Challenger EscapeBot AirTail Semi JetPack Lia NASCAR2 TheRattler MCL36FREE JackRabbit Javelin Ray Ferrari Chiron Volt MoltenM12 Raptor CrewCapsule Snake Tank Patrol TowTruck R8 TheCamper MiniCooper Celsior BankTruck Trailblazer Model3 DuneBuggy Lamborghini MCL36 Delorean Porsche BananaCar ShellClassic Dirtbike Sentinel Proto8 Sloop Goliath Mustang JetSki ATV McLaren SUV BlackHawk Classic SWATVan Concept Interrogator Ambulance LittleBird Beignet Crown TinyToy Shogun Monster Stunt Jet Drone DesertCrawler Bloxy Arachnid Badger Boxer NASCAR75th Bandit Deja Pickup Ray9 Wraith NASCAR1")
                :split(" ")

            function main.instant(position)
                if typeof(position) == "Vector3" then
                    if main.getCar() then
                        if main.getCar().Parent.Name == "Camaro" then
                            main.getCar().CFrame = CFrame.new(position)
                        end
                        for i, v in pairs(main.getCar().Parent:GetChildren()) do
                            if v:IsA('BasePart') then
                                v.CFrame = CFrame.new(position)
                            end
                        end
                    else
                        getRoot().CFrame = CFrame.new(position)
                    end
                elseif typeof(position) == "CFrame" then
                    if main.getCar() then
                        if main.getCar().Parent.Name == "Camaro" then
                            main.getCar().CFrame = position
                        end
                        for i, v in pairs(main.getCar().Parent:GetChildren()) do
                            if v:IsA('BasePart') then
                                v.CFrame = CFrame.new(position.Position)
                            end
                        end
                    else
                        localRoot.CFrame = position
                    end
                end
            end

            function instant(position)
                main.instant(position)
            end

            local abort = false
            local todos_nomes = {}
            local pode = true
            function tp(vector, velo, velo2, extra, extra2)
                for i, v in pairs(getRoot():GetChildren()) do
                    if table.find(todos_nomes, v.Name) then
                        v:Destroy()
                    end
                end
                todos_nomes = {}
                local myFunc
                if typeof(vector) == "function" then
                    myFunc = vector

                    vector = myFunc()
                end
                if pode == true then
                    pode = false
                end


                local reached = false
                velo = velo or 420
                velo2 = velo2 or 180
                local BodyPosition = Instance.new("BodyPosition")
                BodyPosition.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                BodyPosition.D = 500
                BodyPosition.P = 50000
                BodyPosition.Position = getRoot().Position
                local Nome = tostring(math.random(1, 1000))
                todos_nomes[#todos_nomes + 1] = Nome
                BodyPosition.Name = Nome
                BodyPosition.Parent = getRoot(speaker)
                local last_diff = 9e9
                local travar = false
                local Loop = game:GetService("RunService").Stepped:Connect(function(_, step)
                    if myFunc then
                        vector = myFunc()
                    end

                    if main.getCar() then
                        main.getCar().CFrame = CFrame.new(main.getCar().Position)
                    end
                    local diff = (vector - getRoot().Position)

                    local teleport_velo = (main.getCar() and velo) or velo2

                    BodyPosition.Position = getRoot().Position +
                        diff.Unit * math.min(step * teleport_velo, diff.Magnitude)
                    if diff.Magnitude < ((myFunc and 10) or 1) then
                        if extra2 then
                            if typeof(extra2) == "function" and extra2() == true then
                                reached = true
                            end
                        else
                            reached = true
                        end
                    end
                    if extra and typeof(extra) == "function" then
                        abort = extra()
                    end
                end)
                abort = false
                repeat
                    task.wait()
                    if getRoot() then
                        getRoot().CFrame = CFrame.new(getRoot().Position)
                        getRoot().Velocity = Vector3.new(0, 0, 0)
                    end
                    if main.getCar() then
                        for i, v in pairs(main.getCar().Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                v.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                    end
                    if main.getCar() then
                        main.getCar().BodyGyro.MaxTorque = Vector3.new(9e9, 0, 9e9)
                    end
                until getHumanoid().Health == 0 or abort == true or reached == true
                if main.getCar() then
                    main.getCar().BodyGyro.MaxTorque = Vector3.new(0, 0, 0)
                end
                BodyPosition:Destroy()
                Loop:Disconnect()

                pode = true
                if abort or not getRoot():FindFirstChild(Nome) then
                    return false
                end
                return true
            end

            main.usecar = true
            function main.Tp1(...)
                if getHumanoid().Health == 0 then
                    return
                end
                local args = { ... }
                args[4] = args[4] or false
                if args[4] == false then
                    tp(...)
                elseif args[4] == true then
                    repeat
                        tp(...)
                        wait(0.5)
                    until (getRoot().Position - args[1]).Magnitude < 4
                end
            end

            function Tp1(...)
                main.Tp1(...)
            end

            function transformar(pos)
                pos = pos or Vector3.new(0, 0, 0)
                return Vector3.new(pos.X, 450, pos.Z)
            end

            local time_alived = 0

            spawn(function()
                pcall(function()
                    while true do
                        repeat
                            time_alived = time_alived + 1
                            wait(1)
                        until getHumanoid().Health == 0
                        time_alived = 0


                        localPlayer.CharacterAdded:wait():WaitForChild("HumanoidRootPart")
                    end
                end)
            end)

            function tpporcima(vector, um, dois)
                local humanoid = getHumanoid()
                if not humanoid or humanoid.Health == 0 then
                    return
                end
                for i, v in pairs(getRoot():GetChildren()) do
                    if table.find(todos_nomes, v.Name) then
                        v:Destroy()
                    end
                end
                todos_nomes = {}

                um = um or 500
                dois = dois or 140

                local rootPosition = getRoot().Position
                main.instant(transformar(rootPosition))
                task.wait()

                local transformedVector = transformar(vector)
                local test = main.Tp1(transformedVector, um, dois)
                if test == false then
                    return
                end
                ___(true, 0.1)
                instant(vector)
            end

            function Tp2(novoValor)
                tpporcima(vector, novoValor, dois)
            end

            function main.Tp2(...)
                local humanoid = getHumanoid()
                if not humanoid or humanoid.Health == 0 then
                    return
                end

                anti_ragdoll(true)

                local args = { ... }
                local speaker = game.Players.LocalPlayer

                if not getHumanoid(speaker).Sit then
                    if main.usecar and main.getCamaro() then
                        local vehicle, spec = main.getCamaro()
                        local localRoot = getRoot()

                        if vehicle then
                            local distanceFromLocalRootToVehicleSeat = (vehicle.Seat.Position - localRoot.Position)
                                .Magnitude
                            if distanceFromLocalRootToVehicleSeat < (args[1] - localRoot.Position).Magnitude and
                                distanceFromLocalRootToVehicleSeat < 40 then
                                local num = 0
                                repeat
                                    spec:Callback(true)
                                    num = num + 0.1
                                    wait(0.1)
                                until num > 3 or main.getCar()
                            else
                                tpporcima(vehicle.Seat.Position + Vector3.new(0, 20, 0))

                                local startTime = tick()
                                if vehicle:FindFirstChild("Seat") then
                                    repeat
                                        task.wait()
                                        main.instant(vehicle.Seat.Position + Vector3.new(0, 20, 0))
                                        spec:Callback(true)
                                    until (main.getCar()) or tick() - startTime > 3
                                end

                                wait(0.5)
                            end
                        end
                    end
                end

                tpporcima(...)
                if main.getCar() then
                    for i, v in pairs(main.getCar().Parent:GetChildren()) do
                        if v:IsA('BasePart') then
                            v.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end

            function Tp2(...)
                return main.Tp2(...)
            end

            function main.Tp3(Part, usecar, other)
                anti_ragdoll(true)
                if getHumanoid().Health == 0 then
                    return
                end
                usecar = usecar or false
                if usecar and main.getCamaro() and getHumanoid(speaker).Sit == false then
                    local vehicle, spec = main.getCamaro()
                    if vehicle and spec then
                        if (localRoot.Position - vehicle.Seat.Position).Magnitude < 40 then
                            spec:Callback(true)
                            repeat
                                wait()
                            until getHumanoid().Sit == true
                        else
                            tpporcima(vehicle.Seat.Position + Vector3.new(0, 15, 0))

                            local esperando = 0
                            repeat
                                task.wait()
                                esperando = esperando + 0.1
                                main.instant(vehicle.Seat.Position + Vector3.new(0, 15, 0))
                                spec:Callback(true)
                            until getHumanoid(speaker).Sit == true or esperando > 3
                        end
                    end
                end

                main.instant(transformar(getRoot().Position))
                task.wait()
                if typeof(Part) == "function" then
                    local old = Part
                    Part = function()
                        local sucess, other = pcall(function()
                            return old()
                        end)

                        if sucess then
                            return other
                        else
                            return false
                        end
                    end
                end
                local function Take()
                    if typeof(Part) == "Instance" then
                        return Part.Position
                    elseif typeof(Part) == "function" then
                        return Part()
                    end
                end



                repeat
                    tp(function() return transformar(Take()) end, 350, 200, nil, other)
                    abort = true
                until ((transformar(getRoot().Position) - transformar(Take())).Magnitude < 50) or getHumanoid().Health == 0 or Take() == false
                if Take() == false then return end
                ___(true)
                main.instant(Take())
                delay(0.1, function()
                    ___(false)
                end)
            end

            function Tp3(...)
                return main.Tp3(...)
            end

            function main.equipar(nome, bool)
                pcall(function()
                    game:GetService('Players').LocalPlayer.Folder[nome].InventoryEquipRemote:FireServer(bool)
                end)
            end

            function update_table()
                if #vehicles_selects_ == 0 then
                    Flags["Camaro"](true)
                end
            end

            local folder_name = "MacroX Vehicles"

            local new_select = game:GetObjects("rbxassetid://13505579584")[1]
            new_select.Name = "MacroX UI"
            new_select.Background["Tab Container"].ScrollingFrame.Template.Visible = false
            new_select.Enabled = false
            new_select.Background["Tab Container"].ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
            MakeDraggAble(new_select.Background, new_select.Background)
            --[[new_select.Background.Active = true
            new_select.Background.Draggable = true]]
            new_select.Parent = game:GetService("CoreGui")
            local new_flags = {}
            New_Toggle = function(text, callback)
                local bt = new_select.Background["Tab Container"].ScrollingFrame.Template:Clone()
                bt.Parent = new_select.Background["Tab Container"].ScrollingFrame
                bt.Text = text
                bt.Visible = true
                local toggled = false
                local function change(bool)
                    toggled = bool or not toggled

                    game:GetService("TweenService"):Create(bt.Frame.ImageLabel, TweenInfo.new(0.3),
                        { ImageTransparency = (toggled and 0 or 1) }):Play()

                    pcall(callback, toggled)
                end

                bt.MouseButton1Click:Connect(change)

                new_flags[text] = change
            end

            for i, v in pairs(vehicles_) do
                New_Toggle(v, function(bool)
                    if bool then
                        table.insert(vehicles_selects_, #vehicles_selects_ + 1, v)
                        if not isfile(folder_name .. "/" .. v .. ".txt") then
                            writefile(folder_name .. "/" .. v .. ".txt", "MACRO X FILE")
                        end
                    else
                        pcall(function()
                            for i = 1, 10 do
                                table.remove(vehicles_selects_, table.find(vehicles_selects_, v))
                            end
                        end)
                        if isfile(folder_name .. "/" .. v .. ".txt") then
                            delfile(folder_name .. "/" .. v .. ".txt")
                        end
                    end
                end)
                task.wait()
            end

            for i, v in pairs(listfiles(folder_name)) do
                v = string.gsub(v, "MacroX Vehicles", "")
                v = string.gsub(v, "\\", "")
                v = string.gsub(v, ".txt", "")

                if new_flags[v] then
                    vehicles_selects_[#vehicles_selects_ + 1] = v
                    new_flags[v](true)
                end
            end

            tab_Vehicle:CreateToggle("Vehicle Select", function(bool)
                new_select.Enabled = bool
            end)





            spawn(function()
                local a = tab_Vehicle:CreateLabel("Loading Vehicle Modifications...")
                spawn(function()
                    if not Deez then
                        local numero = 0
                        for i, v in next, getgc(true) do
                            if type(v) == 'table' then
                                if rawget(v, 'Event') and rawget(v, 'GetVehiclePacket') then
                                    getgenv().Deez = v.GetVehiclePacket
                                end
                            end
                        end
                    end
                end)

                repeat wait() until Deez
                a:Refresh('Modifications', true)
                local Height = nil
                local GarageEngineSpeed = nil
                local TurnSpeed = nil

                spawn(function()
                    while true do
                        pcall(function()
                            if Height ~= nil then
                                Deez().Height = Height
                            end
                            if GarageEngineSpeed ~= nil then
                                Deez().GarageEngineSpeed = GarageEngineSpeed
                            end
                            if TurnSpeed ~= nil then
                                Deez().TurnSpeed = TurnSpeed
                            end
                        end)
                        wait(0.2)
                    end
                end)

                tab_Vehicle:CreateSlider('Speed', 0, 100, function(value)
                    GarageEngineSpeed = value
                end)



                tab_Vehicle:CreateSlider('Height', 0, 50, function(value)
                    Height = value
                end)

                tab_Vehicle:CreateSlider('Turn speed', 0, 100, function(value)
                    TurnSpeed = value
                end)
            end)



            spawn(function()
                tab_Vehicle:CreateToggle("Always Drift", function(bool)
                    Always_Drift = bool

                    spawn(function()
                        while Always_Drift do
                            if main.getCar() then
                                main.getCar():WaitForChild("RelayDriftingRemote"):FireServer(true)
                            end
                            wait(0.1)
                        end
                        main.getCar():WaitForChild("RelayDriftingRemote"):FireServer(false)
                    end)
                end)

                tab_Vehicle:CreateToggle("Auto unflip car", function(bool)
                    AutoUnflip = bool
                    spawn(function()
                        while AutoUnflip do
                            if getCar() then
                                main.getCar().BodyGyro.MaxTorque = Vector3.new(9e9, 0, 9e9)
                            end
                            wait(0.1)
                        end
                        main.getCar().BodyGyro.MaxTorque = Vector3.new(0, 0, 0)
                    end)
                end)
                local Freio_Instantaneo = false
                tab_Vehicle:CreateToggle("Instant Break", function(value)
                    Freio_Instantaneo = value
                end, "instant break")
                local ativado_freio = false
                UserInputService.InputBegan:Connect(function(key)
                    if Enum.KeyCode.S == key.KeyCode then
                        ativado_freio = true
                    end
                end)

                UserInputService.InputEnded:Connect(function(key)
                    if Enum.KeyCode.S == key.KeyCode then
                        ativado_freio = false
                    end
                end)



                spawn(function()
                    while true do
                        if Freio_Instantaneo and main.getCar() and ativado_freio then
                            for i, v in pairs(main.getCar().Parent:GetChildren()) do
                                if v:IsA('BasePart') then
                                    v.Velocity = Vector3.new(0, 0, 0)
                                end
                            end
                        end
                        wait()
                    end
                end)
            end)


            tab_Teleports:CreateLabel('Target')

            local player_tp
            tab_Teleports:CreateBox('Username', function(text)
                player_tp = FindPlayer(text)
                if player_tp then
                    notificar("Selected", "player: " .. player_tp.Name, 1, 5)
                else
                    notificar(text .. ' is not a player', 3, 5)
                end
            end)

            tab_Teleports:CreateButton('Teleport', function()
                main.Tp3(function()
                    return getRoot(player_tp).Position
                end, true)
            end)


            tab_Teleports:CreateToggle('View', function(bool)
                getgenv().View = bool

                spawn(function()
                    while View do
                        workspace.CurrentCamera.CameraSubject = getRoot(player_tp)
                        task.wait()
                    end
                    workspace.CurrentCamera.CameraSubject = getRoot().Parent
                end)
            end)

            tab_Teleports:CreateLabel('Map teleports')




            tab_Teleports:CreateButton('Museu', function()
                main.Tp2(Vector3.new(1113.5445556640625, 139.10427856445312, 1297.2264404296875))
            end)

            tab_Teleports:CreateButton('Jewelry', function()
                main.Tp2(Vector3.new(143.66824340820312, 17.883831024169922, 1379.358154296875))
            end)

            tab_Teleports:CreateButton('Bank', function()
                main.Tp2(Vector3.new(43.04151153564453, 17.872217178344727, 764.78759765625))
            end)

            tab_Teleports:CreateButton('Power Plant', function()
                main.Tp2(Vector3.new(46.77196502685547, 20.40790367126465, 2358.94482421875))
            end)

            tab_Teleports:CreateButton('Casino', function()
                main.Tp2(Vector3.new(-194.64422607421875, 19.190465927124023, -4584.3720703125))
            end)

            tab_Teleports:CreateButton('Airport', function()
                main.Tp2(Vector3.new(-1303.5528564453125, 41.84423828125, 2859.515869140625))
            end)

            tab_Teleports:CreateButton('Tomb', function()
                main.Tp2(Vector3.new(610.7174072265625, 21.32147979736328, -485.48687744140625))
            end)

            tab_Teleports:CreateButton('Gas station', function()
                main.Tp2(Vector3.new(-1534.64453125, 18.461469650268555, 701.8700561523438))
            end)

            tab_Teleports:CreateButton('Donut shop', function()
                main.Tp2(Vector3.new(62.23844528198242, 18.963422775268555, -1517.5889892578125))
            end)

            tab_Teleports:CreateButton('Area 51', function()
                main.Tp2(Vector3.new(612.4613647460938, 19.61579132080078, -3616.880126953125))
            end)

            tab_Teleports:CreateButton('Trade', function()
                main.Tp2(Vector3.new(2675.636962890625, 24.351089477539062, -3805.135986328125))
            end)

            tab_Teleports:CreateButton('Gun shop', function()
                main.Tp2(Vector3.new(10.926280975341797, 19.758268356323242, -1764.260498046875))
            end)

            tab_Teleports:CreateButton('1M store', function()
                main.Tp2(Vector3.new(479.4014587402344, 19.485206604003906, -1593.4052734375))
            end)

            tab_Teleports:CreateButton('Volcano base', function()
                main.Tp2(Vector3.new(2277.160888671875, 18.90064239501953, -2055.906494140625))
            end)

            tab_Teleports:CreateButton('City base', function()
                main.Tp2(Vector3.new(-246.013916015625, 17.881628036499023, 1616.1649169921875))
            end)

            tab_Teleports:CreateButton('Prison', function()
                main.Tp2(Vector3.new(-1219.6141357421875, 18.449987411499023, -1759.02490234375))
            end)

            tab_Teleports:CreateButton('Prison Out', function()
                main.Tp2(Vector3.new(-1138.365234375, 18.39781951904297, -1389.2274169921875))
            end)

            tab_Teleports:CreateButton('Mansion', function()
                main.Tp2(Vector3.new(2920.753662109375, 57.75913619995117, -4601.60009765625))
            end)



            tab_Combat:CreateLabel('KILL AURA')

            local kill_aura_on = false
            local auto_equip_killaura = false

            tab_Combat:CreateToggle('Enabled', function(bool)
                function killaura()
                    local kill_aura_on = true
                    local auto_equip_killaura = true
                    local old = require(game:GetService('ReplicatedStorage').Module.RayCast)
                        .RayIgnoreNonCollideWithIgnoreList

                    local function getNearestEnemy()
                        local nearestDistance, nearestEnemy = 1000, nil
                        local myTeam = tostring(game:GetService('Players').LocalPlayer.Team)
                        for i, v in pairs(game:GetService('Players'):GetPlayers()) do
                            local theirTeam = tostring(v.Team)
                            if ((myTeam == 'Police' and theirTeam == 'Criminal') or theirTeam == 'Police') and theirTeam ~= myTeam and
                                v.Character and v.Character:FindFirstChild('HumanoidRootPart') then
                                if (v.Character.HumanoidRootPart.Position -
                                        game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                    nearestDistance then
                                    nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position -
                                        game:GetService('Players').LocalPlayer.Character
                                        .HumanoidRootPart.Position).Magnitude, v
                                end
                            end
                        end
                        return nearestEnemy
                    end
                    local function shoot()
                        local currentGun = require(game:GetService('ReplicatedStorage').Game:WaitForChild('ItemSystem')
                            :WaitForChild(
                                'ItemSystem')).GetLocalEquipped()
                        if not currentGun then
                            return
                        end
                        require(game:GetService('ReplicatedStorage').Game:WaitForChild('Item'):WaitForChild('Gun'))
                            ._attemptShoot(
                                currentGun)
                    end

                    spawn(function()
                        while true do
                            pcall(function()
                                if kill_aura_on then
                                    local nearestEnemy = getNearestEnemy()
                                    if nearestEnemy then
                                        require(game:GetService('ReplicatedStorage').Module.RayCast).RayIgnoreNonCollideWithIgnoreList =
                                            function(...)
                                                local arg = { old(...) }
                                                if (tostring(getfenv(2).script) == 'BulletEmitter' or tostring(getfenv(2).script) ==
                                                        'Taser') and nearestEnemy and nearestEnemy.Character and
                                                    nearestEnemy.Character:FindFirstChild('HumanoidRootPart') and
                                                    nearestEnemy.Character:FindFirstChild('Humanoid') and
                                                    (nearestEnemy.Character.HumanoidRootPart.Position -
                                                        game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                                    600 and nearestEnemy.Character.Humanoid.Health > 0 then
                                                    arg[1] = nearestEnemy.Character.HumanoidRootPart
                                                    arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
                                                end
                                                return unpack(arg)
                                            end
                                        if not game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                            for i, v in pairs(workspace.Givers:GetChildren()) do
                                                if v:FindFirstChild('Item') and v:FindFirstChild('ClickDetector') and v.Item.Value ==
                                                    'Pistol' then
                                                    fireclickdetector(v.ClickDetector)
                                                end
                                            end
                                        end
                                        if game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                            while game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') and
                                                nearestEnemy and nearestEnemy.Character and
                                                nearestEnemy.Character:FindFirstChild('HumanoidRootPart') and
                                                nearestEnemy.Character:FindFirstChild('Humanoid') and
                                                (nearestEnemy.Character.HumanoidRootPart.Position -
                                                    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                                600 and nearestEnemy.Character.Humanoid.Health > 0 do
                                                if auto_equip_killaura then
                                                    game:GetService('Players').LocalPlayer.Folder.Pistol
                                                        .InventoryEquipRemote:FireServer(
                                                        true)
                                                end
                                                task.wait()
                                                shoot()
                                            end
                                        end
                                        if game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                            if auto_equip_killaura then
                                                game:GetService('Players').LocalPlayer.Folder.Pistol
                                                    .InventoryEquipRemote:FireServer(
                                                    false)
                                            end
                                        end
                                    else
                                        require(game:GetService('ReplicatedStorage').Module.RayCast).RayIgnoreNonCollideWithIgnoreList =
                                            old
                                    end
                                end
                            end)
                            task.wait()
                        end
                    end)
                end

                kill_aura_on = bool
            end, "killaura")

            tab_Combat:CreateToggle('Auto equip', function(bool)
                auto_equip_killaura = bool
            end, "killauraautoequip")
            pcall(function()
                local old = require(game:GetService('ReplicatedStorage').Module.RayCast)
                    .RayIgnoreNonCollideWithIgnoreList

                local function getNearestEnemy()
                    local nearestDistance, nearestEnemy = 1000, nil
                    local myTeam = tostring(game:GetService('Players').LocalPlayer.Team)
                    for i, v in pairs(game:GetService('Players'):GetPlayers()) do
                        local theirTeam = tostring(v.Team)
                        if ((myTeam == 'Police' and theirTeam == 'Criminal') or theirTeam == 'Police') and theirTeam ~= myTeam and
                            v.Character and v.Character:FindFirstChild('HumanoidRootPart') then
                            if (v.Character.HumanoidRootPart.Position -
                                    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                nearestDistance then
                                nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position -
                                    game:GetService('Players').LocalPlayer.Character
                                    .HumanoidRootPart.Position).Magnitude, v
                            end
                        end
                    end
                    return nearestEnemy
                end
                local function shoot()
                    local currentGun = require(game:GetService('ReplicatedStorage').Game:WaitForChild('ItemSystem')
                        :WaitForChild(
                            'ItemSystem')).GetLocalEquipped()
                    if not currentGun then
                        return
                    end
                    require(game:GetService('ReplicatedStorage').Game:WaitForChild('Item'):WaitForChild('Gun'))
                        ._attemptShoot(
                            currentGun)
                end

                spawn(function()
                    while true do
                        pcall(function()
                            if kill_aura_on then
                                local nearestEnemy = getNearestEnemy()
                                if nearestEnemy then
                                    require(game:GetService('ReplicatedStorage').Module.RayCast).RayIgnoreNonCollideWithIgnoreList =
                                        function(...)
                                            local arg = { old(...) }
                                            if (tostring(getfenv(2).script) == 'BulletEmitter' or tostring(getfenv(2).script) ==
                                                    'Taser') and nearestEnemy and nearestEnemy.Character and
                                                nearestEnemy.Character:FindFirstChild('HumanoidRootPart') and
                                                nearestEnemy.Character:FindFirstChild('Humanoid') and
                                                (nearestEnemy.Character.HumanoidRootPart.Position -
                                                    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                                600 and nearestEnemy.Character.Humanoid.Health > 0 then
                                                arg[1] = nearestEnemy.Character.HumanoidRootPart
                                                arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
                                            end
                                            return unpack(arg)
                                        end
                                    if not game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                        for i, v in pairs(workspace.Givers:GetChildren()) do
                                            if v:FindFirstChild('Item') and v:FindFirstChild('ClickDetector') and v.Item.Value ==
                                                'Pistol' then
                                                fireclickdetector(v.ClickDetector)
                                            end
                                        end
                                    end
                                    if game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                        while game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') and
                                            nearestEnemy and nearestEnemy.Character and
                                            nearestEnemy.Character:FindFirstChild('HumanoidRootPart') and
                                            nearestEnemy.Character:FindFirstChild('Humanoid') and
                                            (nearestEnemy.Character.HumanoidRootPart.Position -
                                                game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                                            600 and nearestEnemy.Character.Humanoid.Health > 0 do
                                            if auto_equip_killaura then
                                                game:GetService('Players').LocalPlayer.Folder.Pistol
                                                    .InventoryEquipRemote:FireServer(
                                                    true)
                                            end
                                            task.wait()
                                            shoot()
                                        end
                                    end
                                    if game:GetService('Players').LocalPlayer.Folder:FindFirstChild('Pistol') then
                                        if auto_equip_killaura then
                                            game:GetService('Players').LocalPlayer.Folder.Pistol.InventoryEquipRemote
                                                :FireServer(
                                                    false)
                                        end
                                    end
                                else
                                    require(game:GetService('ReplicatedStorage').Module.RayCast).RayIgnoreNonCollideWithIgnoreList =
                                        old
                                end
                            end
                        end)
                        task.wait()
                    end
                end)
            end)

            if is_premium then
                tab_Combat:CreateLabel("Guns Mods [Vip+]")

                tab_Combat:CreateToggle("No Shoot Delay [Vip+]", function(bool)
                    noShootDelay = bool

                    spawn(function()
                        while noShootDelay and task.wait() do
                            for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                                local gun = require(v)
                                gun.FireFreq = math.huge
                            end
                        end
                        for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                            local gun = require(v)
                            gun.FireFreq = 1
                        end
                    end)
                end)

                tab_Combat:CreateToggle("No Camera Shake [Vip+]", function(bool)
                    cameraShake = bool

                    spawn(function()
                        while cameraShake and task.wait() do
                            for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                                local gun = require(v)
                                gun.CamShakeMagnitude = 0
                            end
                        end
                        for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                            local gun = require(v)
                            gun.CamShakeMagnitude = 1
                        end
                    end)
                end)

                tab_Combat:CreateToggle("No Spread [Vip+]", function(bool)
                    NoSpread = bool

                    spawn(function()
                        while NoSpread and task.wait() do
                            for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                                local gun = require(v)
                                gun.BulletSpread = 0.06
                            end
                        end
                        for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                            local gun = require(v)
                            gun.BulletSpread = 0
                        end
                    end)
                end)

                tab_Combat:CreateToggle("Full Auto [Vip+]", function(bool)
                    FullAuto = bool

                    spawn(function()
                        while FullAuto and task.wait() do
                            for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                                local gun = require(v)
                                gun.FireAuto = true
                            end
                        end
                        for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                            local gun = require(v)
                            gun.FireAuto = false
                        end
                    end)
                end)

                tab_Combat:CreateToggle("Instant Reload [Vip+]", function(bool)
                    inst_load = bool

                    spawn(function()
                        while inst_load and task.wait() do
                            for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                                local gun = require(v)
                                gun.ReloadTime = 0
                            end
                        end
                        for i, v in pairs(game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()) do
                            local gun = require(v)
                            gun.ReloadTime = 1
                        end
                    end)
                end)
            else
                tab_Combat:CreateLabel("Gun Mods [Only for Vip+]", true)
            end

            local walk_speed = false
            local walk_speed_value = 16
            local jump_power = false
            local jump_power_value = 50

            spawn(function()
                while true do
                    pcall(function()
                        if walk_speed then
                            getHumanoid().WalkSpeed = walk_speed_value
                        end
                        if jump_power then
                            getHumanoid().JumpPower = jump_power_value
                        end
                    end)
                    task.wait()
                end
            end)

            function chegar_perto(pos, maximas_tentativas)
                maximas_tentativas = maximas_tentativas or 9e9
                local tentativa = 0
                repeat
                    tentativa = tentativa + 1
                    main.instant(pos) -- voce quer instantanio ou tp1? insta
                    local Part = Instance.new("Part", workspace)
                    Part.Anchored = true
                    Part.Size = Vector3.new(10, 0.1, 10)
                    Part.CanCollide = true
                    Part.Transparency = 1
                    Part.Position = pos - Vector3.new(0, 3, 0)
                    for i = 1, 5 do
                        getRoot().Velocity = Vector3.new(0, 0.1, 0)
                        wait(0.1)
                    end
                    Part:Destroy()
                until (getRoot().Position - pos).Magnitude < 5 or tentativa >= maximas_tentativas

                if tentativa >= maximas_tentativas and not (getRoot().Position - pos).Magnitude < 5 then
                    return false
                end
                return true
            end

            local walk_meta
            walk_meta = hookmetamethod(game, "__index", function(self, b)
                if tostring(b) == "WalkSpeed" then
                    return 16
                elseif tostring(b) == "JumpPower" then
                    return 50
                end


                return walk_meta(self, b)
            end)

            tab_Combat:CreateLabel('Walk Speed')

            tab_Combat:CreateToggle('Toggled', function(bool)
                walk_speed = bool

                if not bool then
                    wait()
                    getHumanoid().WalkSpeed = 16
                else
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)

            tab_Combat:CreateSlider('Value', 16, 120, function(value)
                walk_speed_value = value
                if walk_speed then
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)

            tab_Combat:CreateLabel('Jump Power')

            tab_Combat:CreateToggle('Toggled', function(bool)
                jump_power = bool

                if not bool then
                    wait()
                    getHumanoid().JumpPower = 50
                else
                    getHumanoid().JumpPower = jump_power_value
                end
            end)

            tab_Combat:CreateSlider('Value', 50, 300, function(value)
                jump_power_value = value
                if jump_power then
                    getHumanoid().JumpPower = jump_power_value
                end
            end)

            local Player = game:service 'Players'.LocalPlayer
            Player.Character.Humanoid:GetPropertyChangedSignal 'WalkSpeed':Connect(function()
                if walk_speed then
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)
            function zerar_velo()
                if main.getCar() then
                    for i, v in pairs(main.getCar().Parent:GetChildren()) do
                        if v:IsA("BasePart") then
                            v.Velocity = Vector3.zero
                        end
                    end
                end
            end

            Player.Character.Humanoid:GetPropertyChangedSignal 'JumpPower':Connect(function()
                if jump_power then
                    getHumanoid().JumpPower = jump_power_value
                end
            end)
            tab_SHOP:CreateLabel('AUTO PICKUP GUNS')

            tab_SHOP:CreateToggle("Take KeyCard", function(bool)
                local plrUtils = game:GetService('ReplicatedStorage').Game.PlayerUtils
                local oldHasKey = require(plrUtils).hasKey
                require(plrUtils).hasKey = function()
                    return (tostring(speaker.Team) == "Police" and true) or bool
                end
            end)

            for i, v in pairs(GUN_Names) do
                tab_SHOP:CreateButton("Take " .. v, function()
                    main.get_gun(v)
                end)
            end

            local esp_enabled = false
            local esp_criminal = false
            local esp_policia = false
            local esp_prisoneiro = false
            local esp_linhas = false
            local nomes_transparencia = 1

            local loops = {}
            local tamanho_da_minha_rola = 17
            local esp_transparencia = 1

            function esp(v)
                local Line = Drawing.new('Line')
                Line.Color = Color3.fromRGB(255, 0, 0)
                Line.Thickness = 2
                Line.Visible = false

                local Nomes = Drawing.new("Text")
                Nomes.Visible = false
                Nomes.Font = 2
                Nomes.Center = true
                Nomes.Outline = true
                Nomes.OutlineColor = Color3.fromRGB(255, 0, 0)

                function add_esp()
                    spawn(function()
                        loops[v.Name] = { game:GetService('RunService').RenderStepped:Connect(function()
                            if v.Character and v.Character:FindFirstChild('Humanoid') and
                                v.Character:FindFirstChild('Humanoid').Health > 0 and v.Character:FindFirstChild('HumanoidRootPart') then
                                local Vector, OnScreen = workspace.CurrentCamera:worldToViewportPoint(v.Character
                                    .HumanoidRootPart
                                    .Position)
                                local Vector22, OnScreen2 = workspace.CurrentCamera:worldToViewportPoint(game.Players
                                    .LocalPlayer
                                    .Character.LowerTorso
                                    .Position)
                                if Vector and Vector2 and OnScreen then
                                    Line.Visible = (esp_linhas and
                                        ((tostring(v.Team) == "Prisoner" and esp_prisoneiro) or
                                            (tostring(v.Team) == "Criminal" and esp_criminal) or
                                            (tostring(v.Team) == "Police" and esp_policia))) or false
                                    Nomes.Visible = (esp_enabled and
                                        ((tostring(v.Team) == "Prisoner" and esp_prisoneiro) or
                                            (tostring(v.Team) == "Criminal" and esp_criminal) or
                                            (tostring(v.Team) == "Police" and esp_policia))) or false
                                    Line.Color = v.TeamColor.Color
                                    Line.From = Vector2.new(Vector22.X, Vector22.Y)
                                    Line.Transparency = esp_transparencia
                                    Line.To = Vector2.new(Vector.X, Vector.Y)
                                    Line.Thickness = (getgenv().linhas_size and linhas_size) or 2
                                    Nomes.Text = v.DisplayName
                                    Nomes.OutlineColor = v.TeamColor.Color
                                    Nomes.Size = tamanho_da_minha_rola
                                    Nomes.Transparency = nomes_transparencia
                                    Nomes.Position = Vector2.new(Vector.X, Vector.Y) - Vector2.new(0, 5)
                                else
                                    Line.Visible = false
                                    Nomes.Visible = false
                                end
                            else
                                Line.Visible = false
                                Nomes.Visible = false
                            end

                            wait()
                        end), Line, Nomes }
                    end)
                end

                coroutine.wrap(add_esp)()
            end

            local is_ACTIVE = false



            tab_Esp:CreateLabel("ESP Main")

            tab_Esp:CreateToggle("Turn ON", function(bool)
                is_ACTIVE = bool

                if is_ACTIVE == true then
                    for i, v in pairs(game.Players:GetChildren()) do
                        pcall(function()
                            loops[v.Name][1]:Disconnect()
                            loops[v.Name][2]:Remove()
                            loops[v.Name][3]:Remove()
                            table.remove(loops, table.find(loops, v.Name))
                        end)
                    end
                    loops = {}
                    for i, v in pairs(game.Players:GetChildren()) do
                        if v ~= game.Players.LocalPlayer then
                            esp(v)
                        end
                    end
                else
                    for i, v in pairs(game.Players:GetChildren()) do
                        pcall(function()
                            loops[v.Name][1]:Disconnect()
                            loops[v.Name][2]:Remove()
                            loops[v.Name][3]:Remove()
                            table.remove(loops, table.find(loops, v.Name))
                        end)
                    end
                    loops = {}
                end
            end)

            game.Players.PlayerAdded:Connect(function(v)
                if is_ACTIVE then
                    esp(v)
                end
            end)

            game.Players.ChildRemoved:Connect(function(v)
                pcall(function()
                    loops[v.Name][1]:Disconnect()
                    loops[v.Name][2]:Remove()
                    loops[v.Name][3]:Remove()
                    table.remove(loops, table.find(loops, v.Name))
                end)
            end)
            tab_Esp:CreateToggle('Lines', function(bool)
                esp_linhas = bool
            end)

            tab_Esp:CreateToggle('Names', function(bool)
                esp_enabled = bool
            end)

            tab_Esp:CreateToggle('Criminal ESP', function(bool)
                esp_criminal = bool
            end)

            tab_Esp:CreateToggle('Police ESP', function(bool)
                esp_policia = bool
            end)

            tab_Esp:CreateToggle('Prisoner ESP', function(bool)
                esp_prisoneiro = bool
            end)

            tab_Esp:CreateLabel('ESP CONFIGURATION')

            tab_Esp:CreateSlider('Names Size', 1, 30, function(number)
                tamanho_da_minha_rola = number
            end, true)

            tab_Esp:CreateSlider("Lines Size", 0, 5, function(value)
                getgenv().linhas_size = value
            end, true)

            tab_Esp:CreateSlider("Lines Transparency", 0, 1, function(value)
                esp_transparencia = value
            end, true)

            tab_Esp:CreateSlider("Names Transparency", 0, 1, function(value)
                nomes_transparencia = value
            end, true)

            tab_Esp:CreateLabel("Others Visuals")

            tab_Esp:CreateButton("Nuke", function()
                local client = {}

                local repl = game:GetService("ReplicatedStorage")
                for i, v in next, getgc(true) do
                    if type(v):match("function") then
                        if getfenv(v).script == repl.Game.NukeControl then
                            local con = getconstants(v)
                            if table.find(con, "Nuke") and table.find(con, "Shockwave") then
                                client.Nuke = v
                            end
                        end
                    end
                end
                local mouse = game.Players.LocalPlayer:GetMouse()
                local nukzz = {
                    Nuke = {
                        Speed = 650,
                        Duration = 10,
                        Target = mouse.Hit.p,
                        Origin = Vector3.new(),
                        TimeDilation = 1.5
                    },
                    Shockwave = { MaxRadius = 1000, Duration = 10 }
                }

                client.Nuke(nukzz)
            end)

            tab_Esp:CreateToggle("Safezone", function(bool)
                Safe_zone = bool
                if not bool then
                    unplat()
                end
                spawn(function()
                    while Safe_zone do
                        if not haveplat() then
                            plat()
                        end
                        task.wait()
                    end
                end)
            end)

            tab_Others:CreateLabel("Server:")

            tab_Others:CreateButton("Change Server", function()
                notificar("MACRO X", "Change Server...", 2, 3)
                wait(1)
                local servers = {}
                local req = request({
                    Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100",
                        game.PlaceId)
                })
                local body = game:GetService("HttpService"):JSONDecode(req.Body)
                if body and body.data then
                    for i, v in next, body.data do
                        if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                            table.insert(servers, 1, v.id)
                        end
                    end
                end
                if #servers > 0 then
                    local randomServerIndex = math.random(1, #servers)
                    local randomServer = servers[randomServerIndex]
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, randomServer,
                        game.Players.LocalPlayer)
                end
            end)

            tab_Others:CreateButton("Rejoin", function()
                notificar("MACRO X", "Rejoin Server...", 2, 3)
                wait(1)
                game.Players.LocalPlayer:Kick()
                wait(0.2)
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end)

            tab_Others:CreateButton("Exit Server", function()
                notificar("MACRO X", "Exiting Server...", 2, 3)
                wait(1)
                game.Players.LocalPlayer:Kick()
            end)


            tab_Others:CreateLabel("Others")

            tab_Others:CreateButton("No laser damage", function()
                disable_touch(false)
            end)

            tab_Esp:CreateButton('Create Ramp', function()
                local root = game.Players.LocalPlayer.Character.HumanoidRootPart

                local clone = game:GetService('Workspace').NewRamp:Clone()

                clone.Parent = Workspace
                clone:FindFirstChild('RampWood').CFrame = root.CFrame * CFrame.new(0, 0, -5)
                clone:FindFirstChild('RampLegs').CFrame = root.CFrame * CFrame.new(0, -3, -10)
                clone:FindFirstChild('RampBase').CFrame = root.CFrame * CFrame.new(0, 0, -5)
                clone:FindFirstChild('RampWood').CFrame = root.CFrame * CFrame.new(0, 0.02, -5)
                clone:FindFirstChild('RampLegs').CanCollide = true
                clone:FindFirstChild('RampBase').CanCollide = true
            end)

            tab_Esp:CreateBox("Money Fake", function(text)
                game:GetService("Players").LocalPlayer.leaderstats.Money.Value = game:GetService("Players").LocalPlayer
                    .leaderstats.Money.Value + tonumber(text)
                if tonumber(text) < 0 then
                    notificar('MACRO X', Translate(text) .. " foram removidos!", 1, 5)
                else
                    notificar('MACRO X', Translate(text) .. " foram adicionados!", 1, 5)
                end
            end)

            local AutoEscape = false
            local IsFora = false

            tab_Others:CreateToggle('No Punch Delay', function(bool)
                setconstant(gcs.attemptPunch, 3, (bool and 0) or 0.5)
            end)

            local Old_Specs = {}

            tab_Others:CreateToggle('No E Delay', function(bool)
                noedelay = bool 

                spawn(function()
                    if noedelay == false then return end
                    local Teste = require(game:GetService('ReplicatedStorage').Module.UI)
                    for i, v in next, Teste.CircleAction.Specs do
                        if v.Timed == true then 
                            local old = v.Duration 
                            v.Duration = 0
                            spawn(function()
                                repeat wait(0) until noedelay == false
                                v.Duration = old
                            end)
                        end
                    end
                end)
            end)

            local old_sky = gcs.StartSkydiving

            tab_Others:CreateToggle("Noclip", main.noclip)
            local FLYSPEED = 50
            local normal_speed = 100
            local fast_speed = 400
            game:GetService("UserInputService").InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = fast_speed
                end
            end)

            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = normal_speed
                end
            end, "noclip")


            tab_Others:CreateButton("Fly [X]", function()
                local mouse = game.Players.LocalPlayer:GetMouse()
                local plr = game.Players.LocalPlayer
                local torso = plr.Character.Head
                local flying = false
                local ctrl = {
                    f = 0,
                    b = 0,
                    l = 0,
                    r = 0
                }
                local maxspeed = 100

                function Fly()
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    local plr = game.Players.LocalPlayer
                    local torso = plr.Character.Head
                    local bg = Instance.new('BodyGyro', torso)
                    bg.P = 10000
                    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    bg.cframe = torso.CFrame
                    local bv = Instance.new('BodyVelocity', torso)
                    bv.velocity = Vector3.new(0, 0.1, 0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

                    flying = true
                    while flying do
                        wait()

                        if ctrl.f + ctrl.b ~= 0 or ctrl.l + ctrl.r ~= 0 then
                            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) +
                                ((game.Workspace.CurrentCamera.CoordinateFrame *
                                        CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0).p) -
                                    game.Workspace.CurrentCamera.CoordinateFrame.p)) * FLYSPEED
                        else
                            bv.velocity = Vector3.new(0, 0.1, 0)
                        end

                        bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                            CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * FLYSPEED / maxspeed), 0, 0)
                    end

                    bg:Destroy()
                    bv:Destroy()
                    plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                end

                mouse.KeyDown:connect(function(key)
                    if key:lower() == 'x' then
                        if flying then
                            flying = false
                        else
                            flying = true
                            Fly()
                        end
                    elseif key:lower() == 'w' then
                        ctrl.f = 1
                    elseif key:lower() == 's' then
                        ctrl.b = -1
                    elseif key:lower() == 'a' then
                        ctrl.l = -1
                    elseif key:lower() == 'd' then
                        ctrl.r = 1
                    end
                end)

                mouse.KeyUp:connect(function(key)
                    if key:lower() == 'w' then
                        ctrl.f = 0
                    elseif key:lower() == 's' then
                        ctrl.b = 0
                    elseif key:lower() == 'a' then
                        ctrl.l = 0
                    elseif key:lower() == 'd' then
                        ctrl.r = 0
                    end
                end)
            end)

            tab_Others:CreateSlider("Fly Normal Speed", 10, 150, function(v)
                normal_speed = v
            end)

            tab_Others:CreateSlider("Fly Fast Speed [Shift]", 10, 400, function(v)
                fast_speed = v
            end)



            function disable_touch(bool)
                for _, descendant in ipairs(workspace:GetDescendants()) do
                    if descendant.Name == 'BarbedWire' or
                        descendant.Name == 'Shadow' or
                        descendant.Name == 'Lasers' or
                        descendant.Name == 'LasersMoving' or
                        descendant.Name == 'Light' or
                        descendant.Name == 'LaserCarousel' or
                        (descendant:IsA('Part') and tostring(descendant.BrickColor) == 'Dusty Rose') or
                        (descendant.Name == 'InnerModel' and descendant.Parent.Name == 'Camera') then
                        if descendant:IsA('BasePart') then
                            descendant.CanTouch = false
                            descendant.Transparency = 0.8
                        elseif descendant:IsA('Model') then
                            for _, part in ipairs(descendant:GetDescendants()) do
                                if part:IsA('BasePart') then
                                    part.CanTouch = false
                                    part.Transparency = 0.8
                                end
                            end
                        end
                    end
                end
            end

            function soco()
                function socar_velocidade(numero)
                    setconstant(gcs.attemptPunch, 3, numero)
                end

                socar_velocidade(0)
                local function vidro_proximo()
                    local vidro
                    local dist = 50
                    for i, v in pairs(workspace.Jewelrys:GetChildren()[1].Boxes:GetChildren()) do
                        local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position)
                            .Magnitude
                        if mag < dist then
                            dist = mag
                            vidro = v
                        end
                    end

                    return vidro
                end
                local tpm = 0
                repeat
                    tpm = tpm + 0.1
                    gcs.attemptPunch()
                    task.wait()
                until tpm > 15 or (vidro_proximo() ~= nil and vidro_proximo().Transparency == 1)
            end

            function laser1()
                disable_touch(false)
            end

            local AUTO_STATUS = tab_Auto:CreateLabel("Status: ")
            getgenv().sendWebHook = false
            getgenv().webhook_Url = ""
            function send_web(tab)
                pcall(function()
                    spawn(function()
                        request(
                            {
                                Url = webhook_Url,
                                Method = "POST",
                                Headers = {
                                    ["Content-Type"] = "application/json"
                                },
                                Body = game:GetService("HttpService"):JSONEncode(
                                    tab
                                )
                            }
                        )
                    end)
                end)
            end

            function status_auto(text, num)
                AUTO_STATUS:Refresh("Status: " .. string.sub(text, 1, 1):upper() .. string.sub(text, 2, 99))
                if num then
                    delay(num, function()
                        AUTO_STATUS:Refresh("Status: ")
                    end)
                end
            end

            Flags["verify all"] = function()
                if tostring(speaker.Team) == "Prisoner" then
                    return true
                end
                return false
            end

            getgenv().status_auto = status_auto
            Flags["verify farm"] = function()
                if tostring(speaker.Team) == "Police" then
                    status_auto("Are you Police.")
                    wait(1)
                    status_auto("")
                    return false
                end
                if tostring(speaker.Team) == "Prisoner" then
                    pcall(function()
                        for i, v in next, workspace:GetChildren() do
                            if v.Name == 'Cell' then
                                v:FindFirstChild('Door'):Destroy()
                            end
                        end
                    end)


                    if (getRoot().Position - Vector3.new(-2960.0712890625, -48.806949615478516, 2419.112060546875)).Magnitude < 200 then
                        status_auto("Are you Prisoner. Escaping...")
                        local path = main.path_find(Vector3.new(-2959.814208984375, -48.80693817138672, 2417.7421875), 3)
                        main.Tp1(
                            Vector3.new(-2953.85376, -48.8123779, 2364.29126, -0.228708029, -0.192458585, -0.954281032,
                                0.00578857539, 0.979976654, -0.199028179, 0.97347784, -0.0510432683, -0.223014474), nil,
                            50)
                        main.Tp1(
                            Vector3.new(-2952.82251, -69.9646225, 2359.22095, 0.772381842, -0.0841355249, -0.629561365,
                                0.203705132, 0.971642196, 0.120065399, 0.601606607, -0.22098121, 0.767617643), nil, 50)
                        main.Tp1(
                            Vector3.new(-2952.14062, -67.4721603, 2335.18628, -0.880322516, 0.0419614054, 0.472516149,
                                0.118538789, 0.983938694, 0.133466154, -0.459326506, 0.173504755, -0.871157408), nil, 50)
                        main.Tp1(
                            Vector3.new(-2952.07471, -79.8862534, 2327.5647, 0.922349036, 0.0255756918, -0.385510206,
                                0.0540021136, 0.979477763, 0.19418323, 0.382565022, -0.199923083, 0.90203923), nil, 50)
                        main.Tp1(
                            Vector3.new(-2948.49878, -78.4042664, 2304.34961, 0.688292742, -0.0539489649, -0.723424196,
                                0.202086657, 0.972014666, 0.119785309, 0.696716666, -0.228641748, 0.679933012), nil, 50)
                        main.Tp1(
                            Vector3.new(-2945.56982, -70.1094894, 2296.9436, 0.647314012, 0.00399361271, -0.762212992,
                                0.132653832, 0.984135628, 0.117813453, 0.750591457, -0.177372769, 0.636515021), nil, 50)
                        main.Tp1(
                            Vector3.new(-2941.60229, -68.9549179, 2268.8418, 0.711264968, -0.0974768698, -0.696132481,
                                0.265915632, 0.954052567, 0.138103619, 0.650685072, -0.283340782, 0.704504788), nil, 50)
                        main.Tp2(Vector3.new(-2892.841552734375, 24.99802017211914, 2333.3408203125))
                        main.Tp2(Vector3.new(-1428.77392578125, 53.30583190917969, 1811.0380859375))
                        wait(1)
                        carro()
                        wait(1)
                        status_auto("")
                    elseif (getRoot().Position - Vector3.new(-1240, 19, -1732)).Magnitude < 200 then
                        main.Tp2(Vector3.new(-1146, 19, -1382))
                    elseif (getRoot().Position - Vector3.new(-1486, 19, -1815)).Magnitude < 200 then
                        local Result

                        function getResult()
                            local Y_ = getRoot().Position.Y
                            local Result
                            if Y_ < -25 or Y_ < -15 then
                                Result = "Ultimo"
                            elseif Y_ < 0 or Y_ < 13 then
                                Result = "Penultimo"
                            elseif Y_ > 13 then
                                Result = "Cima"
                            end

                            return Result
                        end

                        Result = getResult()


                        if Result == "Ultimo" then
                            local Path = main.path_find(Vector3.new(-1465.0401611328125, -26.43866539001465,
                                -1979.344482421875))

                            if not Path then
                                return "Reset"
                            end
                            main.Tp1(
                                Vector3.new(-1396.85791, -25.4386654, -1977.78711, -0.0261522029, -2.89992048e-08,
                                    -0.999657989, -1.06062903e-09, 1, -2.89813791e-08, 0.999657989, 3.02339431e-10,
                                    -0.0261522029), nil, 100)
                            main.Tp1(
                                Vector3.new(-1396.85828, -24.5239258, -1929.42383, -1, -8.79243553e-11, -2.37639324e-05,
                                    -8.95750696e-11, 1, 6.94631481e-08, 2.37639324e-05, 6.94631552e-08, -1), nil, 100)
                            main.Tp1(
                                Vector3.new(-1411.93506, -20.6986752, -1929.42651, -0.113927536, -2.55925503e-08,
                                    0.993489087,
                                    3.21723426e-09, 1, 2.61292072e-08, -0.993489087, 6.17312335e-09, -0.113927536), nil,
                                100)
                            main.Tp1(
                                Vector3.new(-1443.68237, -1.49866176, -1929.42688, -2.37548429e-05, 4.01949798e-08, 1,
                                    5.30183186e-08, 1, -4.01937186e-08, -1, 5.30173629e-08, -2.37548429e-05), nil, 100)
                            main.Tp1(
                                Vector3.new(-1446.68188, -0.538663208, -1929.42688, -2.3873974e-05, 4.20424193e-08, 1,
                                    5.54586599e-08, 1, -4.20410942e-08, -1, 5.54576545e-08, -2.3873974e-05), nil, 100)
                            main.Tp1(
                                Vector3.new(-1455.5802, -0.538663208, -1929.42688, -2.3873974e-05, -1.378866e-08, 1,
                                    -1.81888886e-08, 1, 1.37882257e-08, -1, -1.818856e-08, -2.3873974e-05), nil, 100)
                            main.Tp1(
                                Vector3.new(-1455.57922, -1.4239161, -1949.09595, 1, -4.29117764e-09, 0.000164552592,
                                    4.30254854e-09, 1, -6.91010626e-08, -0.000164552592, 6.91017661e-08, 1), nil, 100)
                            Result = getResult()
                        end

                        if Result == "Penultimo" then
                            local Path = main.path_find(Vector3.new(-1484.279296875, -1.423914909362793,
                                -1945.1195068359375))

                            if not Path then
                                return "Reset"
                            end

                            main.Tp1(
                                Vector3.new(-1484.29529, -1.43276334, -1943.73767, -0.99217546, 3.27957181e-08,
                                    0.124851145,
                                    2.37845192e-08, 1, -7.36661363e-08, -0.124851145, -7.01202083e-08, -0.99217546), nil,
                                100)
                            main.Tp1(
                                Vector3.new(-1484.39868, 4.50132084, -1932.20679, -0.999961495, -7.89352583e-09,
                                    0.00877437554, -6.94622448e-09, 1, 1.07992676e-07, -0.00877437554, 1.07927569e-07,
                                    -0.999961495), nil, 100)
                            main.Tp1(
                                Vector3.new(-1484.46887, 9.06126785, -1924.54163, -0.999961734, 2.65122369e-09,
                                    0.00874987617,
                                    2.33373743e-09, 1, -3.62948605e-08, -0.00874987617, -3.62730539e-08, -0.999961734),
                                nil,
                                100)
                            main.Tp1(
                                Vector3.new(-1484.55615, 14.795146, -1915.01025, -0.999961734, 4.68922634e-09,
                                    0.00874987617,
                                    4.12759515e-09, 1, -6.42053593e-08, -0.00874987617, -6.41667839e-08, -0.999961734),
                                nil,
                                100)
                            main.Tp1(
                                Vector3.new(-1484.59644, 17.4611454, -1910.61096, -0.999961734, -7.81459786e-09,
                                    0.00874987617, -6.87860657e-09, 1, 1.07002059e-07, -0.00874987617, 1.06937776e-07,
                                    -0.999961734), nil, 100)
                            main.Tp1(
                                Vector3.new(-1484.63977, 18.6613293, -1905.87842, -0.999961734, 4.39131886e-09,
                                    0.00874987617,
                                    3.86534138e-09, 1, -6.01294872e-08, -0.00874987617, -6.00933632e-08, -0.999961734),
                                nil,
                                100)

                            Result = getResult()
                        end
                        if Result == "Cima" then
                            if (getRoot().Position - Vector3.new(-1483.491455078125, 16.501333236694336, -1912.01806640625)).Magnitude < 20 then
                                main.Tp1(
                                    Vector3.new(-1484.60059, 18.6613293, -1902.35217, -0.998271942, 1.04458735e-08,
                                        -0.0587630309, 5.69208725e-09, 1, 8.10649539e-08, 0.0587630309, 8.05903895e-08,
                                        -0.998271942), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.51355, 18.6877308, -1892.06055, -0.999957502, 3.25781961e-08,
                                        -0.00922062341, 3.32503518e-08, 1, -7.27436742e-08, 0.00922062341,
                                        -7.30471683e-08,
                                        -0.999957502), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.43835, 18.7113342, -1883.2627, -0.999961197, -3.23247349e-08,
                                        -0.00881098956, -3.2737379e-08, 1, 4.66886299e-08, 0.00881098956, 4.69752663e-08,
                                        -0.999961197), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.36145, 18.7113342, -1874.26489, -0.999961257, -2.06706687e-08,
                                        -0.00880558044, -2.09112869e-08, 1, 2.72334333e-08, 0.00880558044, 2.74165135e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.2478, 18.7113342, -1860.96814, -0.999961257, 9.27344956e-09,
                                        -0.00880556833, 9.38141032e-09, 1, -1.22191937e-08, 0.00880556833, -1.2301328e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.18457, 18.7113342, -1853.56995, -0.999961257, 1.80807405e-08,
                                        -0.00880556833, 1.82914093e-08, 1, -2.38439242e-08, 0.00880556833,
                                        -2.40040645e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.11792, 18.7113342, -1845.77185, -0.999961257, -5.36214166e-08,
                                        -0.00880556833, -5.4246005e-08, 1, 7.06923302e-08, 0.00880556833, 7.1167257e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1484.04358, 18.7113342, -1837.07397, -0.999961257, 5.14626164e-09,
                                        -0.00880556833, 5.2062048e-09, 1, -6.78447787e-09, 0.00880556833, -6.83005874e-09,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.953, 18.6761627, -1826.47656, -0.999961257, 1.38476697e-08,
                                        -0.00880556833, 1.40089638e-08, 1, -1.82555873e-08, 0.00880556833,
                                        -1.83782376e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.87866, 18.7113342, -1817.77869, -0.999961257, 9.3595931e-09,
                                        -0.00880556833, 9.46861256e-09, 1, -1.2338977e-08, 0.00880556833, -1.24218751e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.80432, 18.7113342, -1809.08081, -0.999961257, -3.83682597e-08,
                                        -0.00880556833, -3.88151697e-08, 1, 5.05820168e-08, 0.00880556833, 5.09218445e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.72656, 18.6709347, -1799.98303, -0.999961257, 3.58002694e-08,
                                        -0.00880556833, 3.62172656e-08, 1, -4.71964441e-08, 0.00880556833,
                                        -4.75135273e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.6394, 18.661335, -1789.78552, -0.999961257, 6.22234211e-08,
                                        -0.00880556833, 6.29481889e-08, 1, -8.20306383e-08, 0.00880556833,
                                        -8.25817494e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.55225, 18.661335, -1779.58801, -0.999961257, 3.49354927e-08,
                                        -0.00880556833, 3.53424134e-08, 1, -4.60563392e-08, 0.00880556833,
                                        -4.63657628e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1483.46936, 18.7113342, -1769.89038, -0.999961257, -3.5318326e-08,
                                        -0.00880556833, -3.5729709e-08, 1, 4.65612722e-08, 0.00880556833, 4.68740851e-08,
                                        -0.999961257), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1480.07825, 18.7113323, -1764.00378, -0.752851486, -3.99725678e-07,
                                        -0.658190429, 1.44323122e-08, 1, -6.23818039e-07, 0.658190429, -4.7914159e-07,
                                        -0.752851486), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1474.30273, 18.7113323, -1758.3291, -0.702221453, -3.49952103e-08,
                                        -0.711958587, -4.18642898e-10, 1, -4.8740521e-08, 0.711958587, -3.39285826e-08,
                                        -0.702221453), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1466.74609, 18.7113323, -1750.90186, -0.70086354, -9.34042621e-09,
                                        -0.7132954, -1.37325318e-10, 1, -1.29598199e-08, 0.7132954, -8.98511132e-09,
                                        -0.70086354), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1460.1875, 18.7113323, -1744.45557, -0.700853288, -3.89916099e-09,
                                        -0.713305473, -4.99806273e-11, 1, -5.41721912e-09, 0.713305473, -3.76102438e-09,
                                        -0.700853288), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1452.41699, 18.7113323, -1736.81812, -0.700853288, -3.55879486e-08,
                                        -0.713305473, -3.57688212e-10, 1, -4.9540148e-08, 0.713305473, -3.44652342e-08,
                                        -0.700853288), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1443.54358, 18.7113323, -1734.36768, -0.0340745151, -2.1169302e-07,
                                        -0.999419272, 3.78645959e-09, 1, -2.11945121e-07, 0.999419272, -1.10061888e-08,
                                        -0.0340745151), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1393.65576, 18.7113342, -1734.79492, 0.00880553946, 1.74514536e-08,
                                        -0.999961257, -2.75247741e-10, 1, 1.74497075e-08, 0.999961257, 1.21582994e-10,
                                        0.00880553946), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1384.95154, 18.661335, -1734.86926, 0.00880553946, 2.97323748e-08,
                                        -0.999961257, -4.68965811e-10, 1, 2.97293994e-08, 0.999961257, 2.07164258e-10,
                                        0.00880553946), nil, 100)
                                main.Tp1(
                                    Vector3.new(-1363.98828, 18.7488899, -1735.04846, 0.00880553946, 4.67299124e-08,
                                        -0.999961257, -7.37058192e-10, 1, 4.67252335e-08, 0.999961257, 3.2558875e-10,
                                        0.00880553946), nil, 100)
                                wait(1)
                                main.Tp2(Vector3.new(-1146, 19, -1382))
                                return true
                            end
                        end
                        return false
                    else
                        function verificar_esgoto()
                            local tab_esgoto = {
                                { -1343.82764, -9.05000973, -1510.77344, 0.768042982, 3.21885659e-06, -0.640398324,
                                    1.2309448e-06,
                                    1,
                                    6.50263291e-06,
                                    0.640398324,
                                    -5.78259642e-06,
                                    0.768042982 },
                                { -1339.52917, -9.03149891, -1515.14453, 0.714213967, 2.85897723e-08, -0.699927449,
                                    8.80511397e-09,
                                    1,
                                    4.9831602e-08,
                                    0.699927449,
                                    -4.1753367e-08,
                                    0.714213967 },
                                { -1332.79688, -9.00256443, -1521.98254, 0.713249624, 1.48310852e-09, -0.700910091,
                                    4.6236201e-10,
                                    1,
                                    2.58647725e-09,
                                    0.700910091,
                                    -2.16887819e-09,
                                    0.713249624 },
                                { -1327.56055, -8.9800272, -1527.3009, 0.713248432, 4.81565117e-08, -0.700911283,
                                    1.43278136e-08,
                                    1,
                                    8.32855775e-08,
                                    0.700911283,
                                    -6.94458322e-08,
                                    0.713248432 },
                                { -1324.14673, -8.61081886, -1533.23071, 0.992005646, -8.13639019e-07, -0.126193613,
                                    6.66380811e-06,
                                    1,
                                    4.59365256e-05,
                                    0.126193613,
                                    -4.64102231e-05,
                                    0.992005646 },
                                { -1318.29663, -8.93235493, -1539.28247, 0.714936316, 6.43865334e-08, -0.699189544,
                                    1.99035313e-08,
                                    1,
                                    1.1243916e-07,
                                    0.699189544,
                                    -9.43031822e-08,
                                    0.714936316 },
                                { -1315.52991, -8.74076462, -1544.80005, 0.758351743, 3.699947e-06, -0.651845515,
                                    1.35401478e-06,
                                    1,
                                    7.25135988e-06,
                                    0.651845515,
                                    -6.38169013e-06,
                                    0.758351743 },
                                { -1312.16443, -8.99349213, -1550.48499, 0.757872045, 3.18855473e-06, -0.652403235,
                                    1.13192527e-06,
                                    1,
                                    6.20231322e-06,
                                    0.652403235,
                                    -5.43903161e-06,
                                    0.757872045 },
                                { -1307.8252, -9.25377369, -1557.09412, 0.741873264, 8.84642247e-07, -0.670540154,
                                    3.03459416e-07,
                                    1,
                                    1.65503991e-06,
                                    0.670540154,
                                    -1.4313116e-06,
                                    0.741873264 },
                                { -1305.00354, -8.57545757, -1562.61035, 0.754703224, 2.16986518e-06, -0.656066358,
                                    7.8465348e-07,
                                    1,
                                    4.21000959e-06,
                                    0.656066358,
                                    -3.69209238e-06,
                                    0.754703224 },
                                { -1303.47632, -7.93646431, -1567.90796, 0.927438438, 8.85230822e-09, -0.373975813,
                                    1.23087361e-07,
                                    1,
                                    3.28920351e-07,
                                    0.373975813,
                                    -3.51085077e-07,
                                    0.927438438 },
                                { -1303.9917, -8.26067066, -1570.15149, 0.999441743, -6.80752876e-08, 0.0334096439,
                                    6.9831799e-08,
                                    1,
                                    -5.14080867e-08,
                                    -0.0334096439,
                                    5.37124407e-08,
                                    0.999441743 },
                                { -1300.95959, -8.58360958, -1577.48438, 0.944574594, 1.65738729e-05, -0.32829684,
                                    3.75407835e-05,
                                    1,
                                    0.000158496638,
                                    0.32829684,
                                    -0.00016203642,
                                    0.944574594 },
                                { -1298.14697, -8.29926586, -1583.74536, 0.833298445, 1.5178859e-05, -0.552823365,
                                    8.36910112e-06,
                                    1,
                                    4.00721474e-05,
                                    0.552823365,
                                    -3.80186939e-05,
                                    0.833298445 },
                                { -1297.21411, -8.64994717, -1591.22253, 0.999997437, -2.4196062e-08, -0.00225667236,
                                    2.45102711e-08,
                                    1,
                                    1.39207671e-07,
                                    0.00225667236,
                                    -1.39262625e-07,
                                    0.999997437 },
                                { -1297.28711, -9.31645489, -1599.32739, 0.999962389, 1.92726746e-09, 0.00866978895,
                                    -1.83903326e-09,
                                    1,
                                    -1.01851896e-08,
                                    -0.00866978895,
                                    1.01688631e-08,
                                    0.999962389 },
                                { -1295.27747, -9.35944653, -1605.69202, 0.799665928, 9.86243413e-06, -0.600445211,
                                    4.36695836e-06,
                                    1,
                                    2.22410672e-05,
                                    0.600445211,
                                    -2.04075423e-05,
                                    0.799665928 },
                                { -1293.78772, -9.33128071, -1610.95923, 0.836550772, 1.61630887e-05, -0.547889352,
                                    9.17605212e-06,
                                    1,
                                    4.35112015e-05,
                                    0.547889352,
                                    -4.14267924e-05,
                                    0.836550772 },
                                { -1292.0741, -9.11590862, -1616.59387, 0.952257335, 1.45976155e-05, -0.30529657,
                                    6.47234192e-05,
                                    0.99999994,
                                    0.0002496948,
                                    0.30529657,
                                    -0.000257533538,
                                    0.952257276 },
                                { -1290.94727, -9.11207294, -1622.802, 0.999925792, -9.00594586e-08, -0.0121804709,
                                    9.6826092e-08,
                                    1,
                                    5.54942176e-07,
                                    0.0121804709,
                                    -5.56080408e-07,
                                    0.999925792 },
                                { -1291.01367, -9.16250706, -1630.2561, 0.999963701, 3.75509135e-09, 0.00851927511,
                                    -3.58271102e-09,
                                    1,
                                    -2.02494039e-08,
                                    -0.00851927511,
                                    2.02181472e-08,
                                    0.999963701 },
                                { -1291.08508, -8.96047115, -1638.04932, 0.999961972, 1.75527344e-08, 0.00872232392,
                                    -1.67253233e-08,
                                    1,
                                    -9.49341867e-08,
                                    -0.00872232392,
                                    9.47846885e-08,
                                    0.999961972 },
                                { -1291.17297, -8.93102264, -1647.64697, 0.999961972, -1.67500396e-08, 0.0087236017,
                                    1.59602251e-08,
                                    1,
                                    9.06073936e-08,
                                    -0.0087236017,
                                    -9.04647095e-08,
                                    0.999961972 },
                                { -1293.46655, -7.82723618, -1654.16199, 0.770747602, -8.87352871e-06, 0.637140632,
                                    1.88204604e-06,
                                    1,
                                    1.16504052e-05,
                                    -0.637140632,
                                    -7.7803943e-06,
                                    0.770747602 },
                                { -1294.31116, -7.64183426, -1660.69617, 0.999707878, -5.03188566e-08, 0.024169825,
                                    4.43741186e-08,
                                    1,
                                    2.464933e-07,
                                    -0.024169825,
                                    -2.45348787e-07,
                                    0.999707878 },
                                { -1291.75037, -8.58082294, -1665.60449, 0.768443406, 7.72368458e-06, -0.639917731,
                                    2.90107869e-06,
                                    1,
                                    1.55535599e-05,
                                    0.639917731,
                                    -1.38084824e-05,
                                    0.768443406 },
                                { -1291.00854, -8.46499157, -1671.12036, 0.999854863, -1.07038595e-07, -0.0170366913,
                                    1.18685413e-07,
                                    1,
                                    6.82620339e-07,
                                    0.0170366913,
                                    -6.84543295e-07,
                                    0.999854863 },
                                { -1291.06787, -8.99036407, -1677.6814, 0.999964833, 1.6269972e-08, 0.00838537328,
                                    -1.55283608e-08,
                                    1,
                                    -8.85062619e-08,
                                    -0.00838537328,
                                    8.83729427e-08,
                                    0.999964833 },
                                { -1291.146, -8.9674921, -1686.21252, 0.999961972, 2.06252118e-08, 0.00872289762,
                                    -1.96446894e-08,
                                    1,
                                    -1.12493609e-07,
                                    -0.00872289762,
                                    1.1231797e-07,
                                    0.999961972 },
                                { -1291.21436, -8.9455595, -1693.67737, 0.999961972, 7.9552045e-09, 0.00872359332,
                                    -7.57681828e-09,
                                    1,
                                    -4.34081002e-08,
                                    -0.00872359332,
                                    4.334035e-08,
                                    0.999961972 },
                                { -1291.30347, -8.91426277, -1703.40833, 0.999961972, 7.89113486e-09, 0.00872359332,
                                    -7.51579776e-09,
                                    1,
                                    -4.30583e-08,
                                    -0.00872359332,
                                    4.29910969e-08,
                                    0.999961972 },
                                { -1291.37732, -8.88819695, -1711.47302, 0.999961972, -4.55353177e-09, 0.00872359332,
                                    4.33694103e-09,
                                    1,
                                    2.4847056e-08,
                                    -0.00872359332,
                                    -2.48082763e-08,
                                    0.999961972 },
                                { -1291.46277, -8.85829258, -1720.80408, 0.999961972, 2.68203215e-09, 0.00872359332,
                                    -2.55445909e-09,
                                    1,
                                    -1.46350665e-08,
                                    -0.00872359332,
                                    1.46122261e-08,
                                    0.999961972 },
                                { -1291.54517, -8.82932949, -1729.80188, 0.999961972, 1.00787573e-10, 0.00872359332,
                                    -9.59925125e-11,
                                    1,
                                    -5.50084478e-10,
                                    -0.00872359332,
                                    5.49226165e-10,
                                    0.999961972 },
                                { -1291.6178, -8.80396557, -1737.73328, 0.999961972, -1.77673058e-08, 0.00872359332,
                                    1.69222005e-08,
                                    1,
                                    9.69495844e-08,
                                    -0.00872359332,
                                    -9.67982743e-08,
                                    0.999961972 },
                                { -1291.7063, -8.77282333, -1747.39758, 0.999961972, -3.85831456e-09, 0.00872359332,
                                    3.67479602e-09,
                                    1,
                                    2.10530402e-08,
                                    -0.00872359332,
                                    -2.10201829e-08,
                                    0.999961972 },
                                { -1291.79907, -8.74034977, -1757.52844, 0.999961972, 3.81925114e-09, 0.00872359332,
                                    -3.63759223e-09,
                                    1,
                                    -2.08397406e-08,
                                    -0.00872359332,
                                    2.08072137e-08,
                                    0.999961972 },
                                { -1291.8772, -8.71295547, -1766.05969, 0.999961972, -8.21149282e-09, 0.00872359332,
                                    7.82092435e-09,
                                    1,
                                    4.48056383e-08,
                                    -0.00872359332,
                                    -4.47357067e-08,
                                    0.999961972 },
                                { -1289.62158, -21.380558, -1765.80005, -1, 1.34671939e-06, 4.62739408e-05,
                                    -3.92536407e-07,
                                    0.999294162,
                                    -0.0375655331,
                                    -4.62918688e-05,
                                    -0.0375655331,
                                    -0.999294162 },
                                { -1289.62158, -23.9544067, -1776.10974, -1, 2.05027027e-06, 4.67819846e-05,
                                    2.10853685e-07,
                                    0.99922806,
                                    -0.0392850749,
                                    -4.68264152e-05,
                                    -0.0392850749,
                                    -0.99922806 },
                                { -1289.68201, -24.3842144, -1779.43591, -0.999848485, 0.000967226864, -0.0173789673,
                                    1.18365222e-07,
                                    0.998455226,
                                    0.0555622429,
                                    0.017405862,
                                    0.0555538237,
                                    -0.99830395 },
                                { -1289.80286, -25.2957249, -1786.38574, -0.999848485, 0.00107206521, -0.0173733588,
                                    -6.06074195e-07,
                                    0.998099387,
                                    0.0616250224,
                                    0.0174064059,
                                    0.0616156943,
                                    -0.99794817 },
                                { -1289.97498, -26.5958424, -1796.29248, -0.999848485, 0.000915727753, -0.0173818525,
                                    3.75897073e-08,
                                    0.998615265,
                                    0.0526078641,
                                    0.017405957,
                                    0.052599892,
                                    -0.998463988 },
                                { -1290.13611, -27.8119545, -1805.56213, -0.999848485, 0.000944902364, -0.0173807349,
                                    -4.67838845e-07,
                                    0.99852401,
                                    0.0543115996,
                                    0.0174064003,
                                    0.0543033779,
                                    -0.998372734 },
                                { -1289.81226, -27.5209999, -1814.62732, -0.999389231, -0.00604890287, 0.0344169587,
                                    -2.50437006e-06,
                                    0.984916568,
                                    0.17302987,
                                    -0.0349444747,
                                    0.172924116,
                                    -0.984315038 },
                                { -1289.52234, -27.2645931, -1822.88782, -0.999389172, -0.00701184571, 0.034235552,
                                    -3.70232954e-07,
                                    0.979665816,
                                    0.200636312,
                                    -0.034946233,
                                    0.20051375,
                                    -0.979067385 },
                                { -1289.23206, -27.0091496, -1831.15796, -0.999389291, -0.00730059808, 0.0341720097,
                                    -5.98265615e-06,
                                    0.977966785,
                                    0.20876044,
                                    -0.0349431671,
                                    0.208632737,
                                    -0.977369606 },
                                { -1288.80713, -26.6372204, -1843.26282, -0.999389231, -0.00645800354, 0.0343428254,
                                    -1.53360259e-06,
                                    0.982783079,
                                    0.184763014,
                                    -0.0349447504,
                                    0.184650123,
                                    -0.98218286 },
                                { -1288.33838, -26.2242889, -1856.61975, -0.999389172, -0.00709242932, 0.0342194997,
                                    5.84447662e-06,
                                    0.979155242,
                                    0.203113168,
                                    -0.0349467658,
                                    0.202989295,
                                    -0.97855711 },
                                { -1287.84656, -25.7932758, -1870.63123, -0.999389231, -0.0064579756, 0.0343427993,
                                    -1.50529968e-06,
                                    0.982783079,
                                    0.184763163,
                                    -0.0349447206,
                                    0.184650272,
                                    -0.98218286 },
                                { -1287.42957, -25.4271164, -1882.51428, -0.999389231, -0.00630984781, 0.034370102,
                                    -2.60881575e-06,
                                    0.983576,
                                    0.180494308,
                                    -0.0349445008,
                                    0.18038398,
                                    -0.982975304 },
                                { -1287.20618, -25.2306347, -1888.87671, -0.999389231, -0.00646289531, 0.0343424417,
                                    2.24843461e-06,
                                    0.982737303,
                                    0.185006499,
                                    -0.0349452756,
                                    0.184893578,
                                    -0.982137024 },
                                { -1286.72961, -24.8119335, -1902.45483, -0.999389231, -0.0064629009, 0.0343424305,
                                    2.24160044e-06,
                                    0.982737303,
                                    0.185006544,
                                    -0.0349452645,
                                    0.184893623,
                                    -0.982137024 },
                                { -1286.46777, -24.6002941, -1910.87964, -0.999455571, -0.0060768621, 0.0324294828,
                                    -0.000411574176,
                                    0.985112071,
                                    0.171912715,
                                    -0.0329913646,
                                    0.171805769,
                                    -0.984578252 },
                                { -1107.20496, -33.1642799, -2047.7467, -0.078474097, -0.187921822, 0.97904402,
                                    -6.50550589e-07,
                                    0.982072592,
                                    0.188503087,
                                    -0.996916175,
                                    0.0147919729,
                                    -0.0770673826 },
                                { -1129.65991, -33.7065659, -2045.98657, -0.0784782469, -0.198359832, 0.976982355,
                                    -3.05641356e-06,
                                    0.980004907,
                                    0.198973268,
                                    -0.996915817,
                                    0.0156120872,
                                    -0.0769096762 },
                                { -1154.84473, -33.7499809, -2042.80249, -0.233454168, -0.129626587, 0.963688791,
                                    -9.8273631e-07,
                                    0.991074383,
                                    0.133310005,
                                    -0.972367823,
                                    0.0311208311,
                                    -0.231370583 },
                                { -1182.01501, -32.3848228, -2036.02356, -0.333803356, -0.122989565, 0.934584856,
                                    -2.8625567e-07,
                                    0.991451859,
                                    0.130473047,
                                    -0.942642748,
                                    0.0435520746,
                                    -0.330949992 },
                                { -1207.84607, -31.7556362, -2026.87244, -0.333803684, -0.135375947, 0.932871103,
                                    3.90761414e-07,
                                    0.989633858,
                                    0.143613368,
                                    -0.942642629,
                                    0.0479390398,
                                    -0.330343395 },
                                { -1232.60327, -31.3564606, -2015.95947, -0.587788999, -0.136544719, 0.797408104,
                                    -3.30964189e-09,
                                    0.985653877,
                                    0.16877912,
                                    -0.809014261,
                                    0.0992065072,
                                    -0.579356492 },
                                { -1256.49377, -31.6939583, -1998.2334, -0.719333827, -0.134820253, 0.681456029,
                                    -2.6445224e-07,
                                    0.98098582,
                                    0.194079399,
                                    -0.694664538,
                                    0.139607698,
                                    -0.70565635 },
                                { -1274.24036, -32.3888702, -1977.30225, -0.930410504, -0.0541252866, 0.362500697,
                                    -4.00788345e-08,
                                    0.989036143,
                                    0.147673726,
                                    -0.366519183,
                                    0.13739717,
                                    -0.920209587 },
                                { -1283.51135, -32.5138855, -1951.0874, -0.978142321, -0.0375270881, 0.204522237,
                                    -7.23770086e-07,
                                    0.98358041,
                                    0.180470362,
                                    -0.207936585,
                                    0.176525548,
                                    -0.962081671 },
                                { -1289.09485, -33.3496437, -1924.67212, -0.991447508, 0.0313869566, -0.126675472,
                                    -4.4138128e-06,
                                    0.9706406,
                                    0.240534574,
                                    0.130505994,
                                    0.23847796,
                                    -0.962339044 },
                                { -1289.48816, -33.9679604, -1906.22534, -0.999847472, -0.00337424036, 0.0171354953,
                                    -3.30697731e-06,
                                    0.981194973,
                                    0.193019301,
                                    -0.0174645539,
                                    0.192989796,
                                    -0.981045306 },
                                { -1288.68604, -33.3433304, -1874.43433, -1, -2.68248937e-06, 2.27882301e-05,
                                    2.72866828e-07,
                                    0.99168241,
                                    0.128708735,
                                    -2.29439484e-05,
                                    0.128708735,
                                    -0.99168241 },
                                { -1288.68604, -32.5180016, -1846.59888, -1, -3.98016118e-06, 1.56765964e-05,
                                    -1.56568694e-06,
                                    0.988518059,
                                    0.151102588,
                                    -1.60980107e-05,
                                    0.151102588,
                                    -0.988518059 },
                                { -1288.77075, -28.2875919, -1829.26526, -0.999962032, -0.00145232864, -0.00859193504,
                                    9.39255358e-08,
                                    0.986011028,
                                    -0.166680247,
                                    0.00871381722,
                                    -0.166673914,
                                    -0.985973537 },
                            }
                            for i, v in pairs(tab_esgoto) do
                                local _1 = CFrame.new(unpack(v)).Position
                                local _2 = getRoot().Position

                                if (_1 - _2).Magnitude < 30 then
                                    return true
                                end
                            end
                            if getRoot().Position.Y < 0 then
                                return true
                            end
                            return false
                        end

                        if verificar_esgoto() then
                            local Path = main.path_find(Vector3.new(-1309, -8, -1576))
                            if not Path then
                                return "Reset"
                            end
                            main.Tp1(
                                Vector3.new(-1305.3656, 8.57506466, -1575.05139, -0.433859736, -2.69823559e-08,
                                    -0.900980413,
                                    -6.80802046e-08, 1, 2.8356939e-09, 0.900980413, 6.2569228e-08, -0.433859736), nil, 50)
                            wait(0.5)
                            main.Tp2(main.Tp2(Vector3.new(-1146, 19, -1382)))
                            return true
                        end
                    end
                end
                if (Vector3.new(-238.30307006835938, 18.342676162719727, 1578.4921875) - getRoot().Position).Magnitude < 20 then
                    status_auto("Are you in City base, Leaving...")
                    wait(1)
                    local Path = main.path_find(
                        Vector3.new(-242.243591, 18.2636948, 1614.0824, 0.518531263, 1.86954807e-08, -0.85505867,
                            -6.84955097e-08, 1, -1.9673017e-08, 0.85505867, 6.8768756e-08, 0.518531263), 3)
                    if not Path then
                        return "Reset"
                    end
                    wait(1)
                end
                if (Vector3.new(2193.125732421875, 22.805452346801758, -2572.656005859375) - getRoot().Position).Magnitude < 400 then
                    status_auto("Are you in Volcano base, Leaving...")
                    wait(1)
                    local Path = main.path_find(Vector3.new(2215.70947265625, 19.38240623474121, -2466.318115234375), 10)
                    if not Path then
                        return "Reset"
                    end
                    main.Tp1(
                        Vector3.new(2264.62183, 19.568306, -2190.8064, 0.984422088, 1.17566179e-09, 0.175821453,
                            -1.83253945e-09, 1, 3.5736849e-09, -0.175821453, -3.84021392e-09, 0.984422088), nil, nil)
                    wait(1)
                    main.Tp1(
                        Vector3.new(2290.58423, 19.2167702, -2036.33386, -0.934693456, 7.67459838e-08, 0.355454832,
                            1.07123071e-07, 1, 6.57783943e-08, -0.355454832, 9.95600473e-08, -0.934693456), nil, nil)
                    wait(1)
                end
                return true
            end
            function status_cooldown(text, cooldown)
                for i = cooldown, 1, -1 do
                    AUTO_STATUS:Refresh(text .. " (" .. tostring(i) .. ")")
                    wait(1)
                end
            end

            local AUTO_FARM = false


            local Parts = {}
            local Can = true
            local cooldown_plat = true
            function plat()
                if cooldown_plat then
                    cooldown_plat = false

                    local Plat_ = game:GetObjects("rbxassetid://13292735069")
                    Parts[#Parts + 1] = Plat_[1]
                    Plat_[1].Parent = workspace

                    local Primaria = Plat_[1].PRIMARIA

                    local old_pos = getRoot().Position
                    Primaria.CFrame = CFrame.new(transformar(getRoot().Position))
                    main.instant(Primaria.Position + Vector3.new(0, 15, 0))
                    delay(1, function()
                        cooldown_plat = true
                    end)
                    if getHumanoid().Sit == false then
                        status_auto("Getting car...")
                        getRoot().CFrame = CFrame.new(old_pos)
                        wait(0.3)
                        local num = 0
                        carro()
                        wait(1)
                        main.instant(Primaria.Position + Vector3.new(0, 5, 0))
                        if main.getCar() then
                            status_auto("Sucess", 1)
                        else
                            status_auto("You cant spawn any car in this time...", 1)
                        end
                    end
                    zerar_velo()
                end
            end

            function haveplat()
                for i, v in pairs(Parts) do
                    if (getRoot().Position - v.PRIMARIA.Position).Magnitude < 50 then
                        return true
                    end
                end
                return false
            end

            function unplat()
                for i, v in pairs(Parts) do
                    v:Destroy()
                end
                Parts = {}
            end

            local ROBBERIES_ALREADY = {}
            spawn(function()
                for i, v in pairs(Robberys) do
                    repeat wait() until main.is_opened(v) == "fechado"
                    pcall(function()
                        for i = 1, 10 do
                            table.remove(ROBBERIES_ALREADY, table.find(ROBBERIES_ALREADY, v))
                        end
                    end)
                end
            end)
            spawn(function()
                while wait(60 * 5) do
                    ROBBERIES_ALREADY = {}
                end
            end)
            function findtab(tab, nome)
                for i, v in pairs(tab) do
                    if v == nome then
                        return v
                    end
                end
                return false
            end

            local outros = {
                "cargo plane",
                "museum",
                "casino",
                "train",
                "jewelry store",
                "donut store",
                "gas station",
                "bank",
            }
            local funcao_de_pegar_roubo = dropdown(outros)

            function whatRob()
                wait(3)
                local whatRobb
                if table.find(funcao_de_pegar_roubo(), "cargo plane") and (main.is_opened("cargo plane") ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "cargo plane") then
                    whatRobb = 'cargo plane'
                elseif table.find(funcao_de_pegar_roubo(), "museum") and (main.is_opened("museum") == 'roubando') and not findtab(ROBBERIES_ALREADY, "museum") then
                    whatRobb = 'museum'
                elseif table.find(funcao_de_pegar_roubo(), "casino") and (main.is_opened('casino') ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "casino") then
                    whatRobb = 'casino'
                elseif table.find(funcao_de_pegar_roubo(), "jewelry store") and (main.is_opened('jewelry store') ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "jewelry store") then
                    whatRobb = 'jewelry store'
                elseif table.find(funcao_de_pegar_roubo(), "cargo train") and (main.is_opened("cargo train") ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "train") then
                    whatRobb = 'train'
                elseif table.find(funcao_de_pegar_roubo(), "donut store") and (main.is_opened("donut store") ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "donut store") then
                    whatRobb = 'donut store'
                elseif table.find(funcao_de_pegar_roubo(), "gas station") and (main.is_opened("gas station") ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "gas station") then
                    whatRobb = 'gas station'
                elseif table.find(funcao_de_pegar_roubo(), "bank") and (main.is_opened("bank") ~= 'fechado') and not findtab(ROBBERIES_ALREADY, "bank") then
                    whatRobb = 'bank'
                end

                if whatRobb then
                    ROBBERIES_ALREADY[#ROBBERIES_ALREADY + 1] = whatRobb
                    return whatRobb
                else
                    return false
                end
            end

            spawn(function()
                while true and wait(1) do
                    local Nomes = {
                        { "cargo plane",   "cargo plane" },
                        { "museum",        "museum" },
                        { "casino",        "casino" },
                        { "cargo train",   "train" },
                        { "jewelry store", "jewelry store" },
                        { "donut store",   "donut store" },
                        { "gas station",   "gas station" },
                        { "bank",          "bank" },
                    }

                    for i, v in pairs(Nomes) do
                        if main.is_opened(v[1]) == "fechado" then
                            pcall(function()
                                local index = table.find(ROBBERIES_ALREADY, v[2])
                                if index then
                                    table.remove(ROBBERIES_ALREADY, index)
                                end
                            end)
                        end
                    end
                    task.wait(.1)
                end
            end)


            local quantidade_de_mortes = 0
            local farm_start_ = 0
            local last_rob = ""

            spawn(function()
                function Registrar()
                    getHumanoid().Died:wait()
                    quantidade_de_mortes = quantidade_de_mortes + 1
                    speaker.CharacterAdded:wait():WaitForChild("HumanoidRootPart")
                    Registrar()
                end

                Registrar()
            end)
            if is_premium then
                tab_Auto:CreateToggle("Auto Farm [Vip+]", function(bool)
                    if #funcao_de_pegar_roubo() == 0 and bool then
                        wait(0.5)
                        flags("farmbeta", false)
                        flags("menuaberto", true)

                        notificar("MACRO X", "Please select any rob first.", 2, 3)
                        return
                    end
                    AUTO_FARM = bool
                    if bool and main.bag() then
                        status_cooldown("You have a bag, please sell", 5)
                        status_auto("")
                        return
                    end
                    if AUTO_FARM == false then
                        status_auto("")
                        unplat()
                    end
                    function censurar(text)
                        local new = ""
                        new = string.sub(text, 0, 2)
                        for i = 1, #text - 3 do
                            new = new .. "*"
                        end
                        new = new .. string.sub(text, #text, #text)
                        return new
                    end

                    if AUTO_FARM == true then
                        notificar("MACRO X", "The Auto Farm[Vip+] feature may experience unexpected errors.", 2, 6)
                        quantidade_de_mortes = 0
                        farm_start_ = tick()
                        task.spawn(function()
                            wait(0.1)
                            Flags["Camaro"](false)
                            Flags["Camaro"](true)
                            while AUTO_FARM do
                                local dindin = speaker.leaderstats.Money.Value
                                repeat task.wait() until AUTO_FARM == false or dindin ~= speaker.leaderstats.Money.Value
                                if AUTO_FARM == false then
                                    break
                                end

                                if sendWebHook and webhook_Url then
                                    local horario = os.date("!*t", tick())
                                    local horario2 = os.date("!*t", tick() - farm_start_)
                                    send_web(
                                        {
                                            username = "__**MACRO X HUB**",
                                            avatar_url =
                                            "https://media.discordapp.net/attachments/1102650264927883366/1103115994907541535/logo.png?width=467&height=467",


                                            embeds = {
                                                {
                                                    color = tonumber("0xffffff"),
                                                    thumbnail = {
                                                        url =
                                                        "https://media.discordapp.net/attachments/1102650264927883366/1103115994907541535/logo.png?width=467&height=467"
                                                    },
                                                    title = "**#MACRO X  {Auto Rob}** " ..
                                                        string.format("", horario.hour),
                                                    fields = {
                                                        {
                                                            name = "__**Jogador:**__",
                                                            value = "**" ..
                                                                censurar(speaker.Name) ..
                                                                " / " .. censurar(speaker.DisplayName) .. "**"
                                                        },


                                                        {
                                                            name = "__**Roubo:**__",
                                                            value = "**" .. last_rob .. "**"
                                                        },
                                                        {
                                                            name = "__**Lucro:**__",
                                                            value = "**" ..
                                                                Translate(speaker.leaderstats.Money.Value - dindin) ..
                                                                "**"
                                                        },
                                                        {
                                                            name = "__**Total MONEY:**__",
                                                            value = "**" ..
                                                                Translate(speaker.leaderstats.Money.Value) .. "**"
                                                        },
                                                        {
                                                            name = "**Jogo:**",
                                                            value = "__**Jailbreak**__"
                                                        },
                                                        {
                                                            name = "__**Tempo:**__",
                                                            value = "**" ..
                                                                string.format("%sh :%smin :%sseg ", horario2.hour,
                                                                    horario2.min, horario.sec) .. "**"
                                                        },
                                                        {
                                                            name = "__**Mortes::**__",
                                                            value = "**" .. quantidade_de_mortes .. "**"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    )
                                end
                            end
                        end)
                    end
                    spawn(function()
                        local giro = 1
                        getgenv().farmou = speaker.leaderstats.Money.Value
                        while AUTO_FARM do
                            if time_alived > 7 then
                                local _tw = Flags["verify farm"]()
                                if _tw == true then
                                    local Roubo = whatRob()
                                    if Roubo == false then
                                        if not haveplat() then
                                            plat()
                                        end
                                        status_auto("Auto farm is awaiting for any rob... [" ..
                                            ((giro == 1 and "/") or (giro == 2 and "-") or (giro == 3 and "\\") or (giro == 4 and "|")) ..
                                            "]")
                                        giro = giro + 1
                                        if giro == 5 then
                                            giro = 1
                                        end
                                        wait(0.5)
                                    elseif AUTO_FARM == false or Roubo ~= false then
                                        if AUTO_FARM == false then
                                            unplat()
                                            return
                                        end
                                        unplat()
                                        local Acabou = false
                                        spawn(function()
                                            while Acabou == false do
                                                if tostring(speaker.Team) == "Prisoner" then
                                                    getHumanoid().Health = 0
                                                    break
                                                end
                                                task.wait(0.5)
                                            end
                                        end)
                                        last_rob = Roubo
                                        local _twt = pcall(Flags[Roubo .. " auto"], true)
                                        Acabou = true
                                        if _twt == "stop" then
                                            status_auto("Auto Farm Error!")
                                            getHumanoid().Health = 0
                                            status_cooldown("Countdown...", 5)
                                            return
                                        end
                                        if _tw == "Reset" then
                                            for i = 1, 5 do
                                                main.instant(getRoot().Position + Vector3.new(0, 20, 0))
                                                task.wait()
                                            end
                                            status_auto("Reseting...")
                                            getHumanoid().Health = 0
                                            status_cooldown("Countdown", 5)
                                        end
                                    end
                                end
                            else
                                status_auto("Time alived Required (" .. 7 - time_alived .. ")")
                                wait(1)
                            end
                            task.wait()
                        end
                    end)
                end, "farmbeta")

                tab_Auto:CreateToggle("Select Robberies:", function(bool)
                    local um, roubo_menu = funcao_de_pegar_roubo()
                    roubo_menu.Enabled = bool
                end, "menuaberto")
            else
                tab_Auto:CreateLabel("Auto Farm [Only for Vip+]", true)
            end
            tab_Auto:CreateLabel("Auto Robberies: ")

            tab_Auto:CreateButton("Auto Jewelry", function() --Sim+
                local kill_aura_on = false
                local auto_equip_killaura = false
                if not main.getCar() then carro() end
                if not main.bag() then
                    if main.is_opened("jewelry store") == "aberto" or main.is_opened("jewelry store") == "roubando" then
                        notificar("MACRO X", "Auto Jewelry Enabled!", 1, 3)
                        status_auto("teleporting to jewelry...")
                        main.Tp2(Vector3.new(127.71769714355469, 130.5554656982422, 1294.1595458984375))
                        local PODE = false
                        if main.is_opened("jewelry store") == "aberto" then
                            ROBBERIES_ALREADY['jewelry store'] = true
                            wait(1)
                            for _, model in pairs(game:GetService("Workspace").Jewelrys:GetChildren()) do
                                if model:IsA('Model') then
                                    for _, v in pairs(model:GetChildren()) do
                                        if v:IsA('Part') and v.Name == 'BarbedWire' then
                                            v.CanTouch = false
                                            v.Transparency = 0.8
                                        end
                                    end
                                    for _, v in pairs(model:GetChildren()) do
                                        if v:IsA('Part') then
                                            v.CanTouch = false
                                            v.Transparency = 0.8
                                        end
                                    end
                                    for _, b in pairs(model.Floors:GetChildren()) do
                                        for _, c in pairs(b:GetChildren()) do
                                            if c:IsA('Model') and c.Name == 'Cameras' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Model') and v.Name == 'Camera' then
                                                        for i, final in pairs(v.InnerModel:GetChildren()) do
                                                            if final:IsA('BasePart') then
                                                                final.Transparency = 0.8
                                                                final.CanTouch = false
                                                            end
                                                        end
                                                        v.Part.Transparency = 0.8
                                                        v.Part.CanTouch = false
                                                    end
                                                end
                                            end
                                        end
                                        for _, c in pairs(b:GetChildren()) do
                                            if c:IsA('Model') and c.Name == 'Lasers' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Model') and v.Name == 'LaserGround' or v.Name == 'Laser' then
                                                        v.InnerModel.Part.Transparency = 0.8
                                                        v.InnerModel.Part.CanTouch = false
                                                    end
                                                end
                                            end
                                            if c:IsA('Model') and c.Name == 'LaserFloor' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Part') and v.Name == 'Part' then
                                                        v.Transparency = 0.8
                                                        v.CanTouch = false
                                                    end
                                                end
                                            end
                                        end
                                        for _, v in pairs(b:GetChildren()) do
                                            if v:IsA('Part') then
                                                v.CanTouch = false
                                                v.Transparency = 0.8
                                            end
                                        end
                                    end
                                end
                            end
                            ExitCar()
                            status_auto("Teleporting to jewelry down...")
                            main.Tp1(Vector3.new(91.67448425292969, 130.55404663085938, 1311.759643554687), 350, 50)
                            ___(true, 0.1)
                            main.instant(Vector3.new(91.67448425292969, 18.59366226196289, 1311.7596435546875))

                            status_auto("opening robbery...")
                            wait(0.8)
                            if main.is_opened("jewelry store") ~= "aberto" then
                                Flags["jewelry store auto"]()
                                return
                            end
                            main.noclip(true)
                            status_auto("entering robbery...")
                            main.Tp1(Vector3.new(101.56257629394531, 18.6054630279541, 1310.116455078125), 350, 50, true)
                            main.noclip(false)


                            PODE = true
                        elseif main.is_opened("jewelry store") == "roubando" then
                            ROBBERIES_ALREADY['jewelry store'] = true
                            wait(1)
                            for _, model in pairs(game:GetService("Workspace").Jewelrys:GetChildren()) do
                                if model:IsA('Model') then
                                    for _, v in pairs(model:GetChildren()) do
                                        if v:IsA('Part') and v.Name == 'BarbedWire' then
                                            v.CanTouch = false
                                            v.Transparency = 0.8
                                        end
                                    end
                                    for _, v in pairs(model:GetChildren()) do
                                        if v:IsA('Part') then
                                            v.CanTouch = false
                                            v.Transparency = 0.8
                                        end
                                    end
                                    for _, b in pairs(model.Floors:GetChildren()) do
                                        for _, c in pairs(b:GetChildren()) do
                                            if c:IsA('Model') and c.Name == 'Cameras' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Model') and v.Name == 'Camera' then
                                                        for i, final in pairs(v.InnerModel:GetChildren()) do
                                                            if final:IsA('BasePart') then
                                                                final.Transparency = 0.8
                                                                final.CanTouch = false
                                                            end
                                                        end
                                                        v.Part.Transparency = 0.8
                                                        v.Part.CanTouch = false
                                                    end
                                                end
                                            end
                                        end
                                        for _, c in pairs(b:GetChildren()) do
                                            if c:IsA('Model') and c.Name == 'Lasers' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Model') and v.Name == 'LaserGround' or v.Name == 'Laser' then
                                                        v.InnerModel.Part.Transparency = 0.8
                                                        v.InnerModel.Part.CanTouch = false
                                                    end
                                                end
                                            end
                                            if c:IsA('Model') and c.Name == 'LaserFloor' then
                                                for i, v in pairs(c:GetChildren()) do
                                                    if v:IsA('Part') and v.Name == 'Part' then
                                                        v.Transparency = 0.8
                                                        v.CanTouch = false
                                                    end
                                                end
                                            end
                                        end
                                        for _, v in pairs(b:GetChildren()) do
                                            if v:IsA('Part') then
                                                v.CanTouch = false
                                                v.Transparency = 0.8
                                            end
                                        end
                                    end
                                end
                            end
                            status_auto("entering robbery...")
                            wait(0.3)
                            main.Tp1(Vector3.new(141.54153442382812, 132.65546417236328, 1323.6103515625), nil, 100)
                            ___(true, 0.1)
                            main.instant(Vector3.new(141.54153442382812, 118.65546417236328, 1323.6103515625))

                            ExitCar()
                            main.noclip(true)
                            wait(0.2)
                            main.Tp1(Vector3.new(137.72581481933594, 118.65546417236328, 1302.891845703125), 350, 30)



                            local a = main.path_find(
                                Vector3.new(117.04551696777344, 18.6054630279541, 1291.576416015625), 3, nil, function()
                                    if main.is_opened("jewelry store") == "aberto" or main.is_opened("jewelry store") == "roubando" then
                                        return true
                                    end
                                    return false
                                end)
                            if not a then
                                status_auto("jewelry error")
                                getHumanoid().Health = 0
                                return
                            end
                            PODE = true
                        else
                            return "stop"
                        end

                        if PODE then
                            local positions = {
                                -- 1Âº andar
                                {115.408165, 19.4172897, 1325.65149, -0.180077344, -9.93703893e-08, 0.983652472, -2.28038086e-08, 1, 9.68471525e-08, -0.983652472, -4.99104447e-09, -0.180077344},
                                {113.657623, 19.427309, 1316.7738, -0.250517994, 9.78899308e-08, 0.968111932, 4.91876726e-08, 1, -8.83859954e-08, -0.968111932, 2.54768917e-08, -0.250517994},
                                {112.23484, 19.0113983, 1306.59229, -0.11723116, -3.51173135e-08, 0.993104637, 2.9814165e-10, 1, 3.5396333e-08, -0.993104637, 4.44563941e-09, -0.11723116},
                                {133.313538, 20.3473015, 1313.22827, 0.0597294122, 4.4990025e-09, -0.998214602, 1.07478615e-09, 1, 4.57136062e-09, 0.998214602, -1.34591194e-09, 0.0597294122},
                                {131.12027, 20.337328, 1301.93384, -0.125416771, -1.88849825e-08, -0.992104173, -1.00724883e-07, 1, -6.30215435e-09, 0.992104173, 9.91391715e-08, -0.125416771},
                                {106.078552, 19.2272606, 1285.08508, 0.99848783, 5.43985701e-09, 0.0549731813, -1.08935572e-09, 1, -7.91685721e-08, -0.0549731813, 7.89889754e-08, 0.99848783},
                                {115.972221, 19.4272804, 1283.10352, 0.994293213, -6.24416359e-08, 0.106681846, 5.82831738e-08, 1, 4.20977777e-08, -0.106681846, -3.56397791e-08, 0.994293213},
                                {126.710365, 19.0113773, 1281.58105, 0.994976044, 6.51803589e-09, 0.100113459, -4.54409443e-09, 1, -1.99450785e-08, -0.100113459, 1.9389951e-08, 0.994976044},
                                {137.569305, 19.0113869, 1279.62634, 0.998295188, 7.55848983e-09, 0.0583670661, -4.37354108e-09, 1, -5.46953096e-08, -0.0583670661, 5.4346792e-08, 0.998295188},
                                {150.655716, 18.8054657, 1290.50317, 0.0945009738, 8.37736067e-08, -0.995524764, 1.16390479e-08, 1, 8.52550457e-08, 0.995524764, -1.96436449e-08, 0.0945009738},
                                {153.807388, 18.8054657, 1308.5, 0.132414907, 7.91117998e-08, -0.991194367, -1.03708464e-08, 1, 7.84291672e-08, 0.991194367, -1.05666184e-10, 0.132414907},
                                {141.651505, 20.3473072, 1311.34119, 0.0392410681, -4.36810268e-08, 0.999229789, 2.10639683e-08, 1, 4.28874891e-08, -0.999229789, 1.93647942e-08, 0.0392410681},
                                {139.90947, 20.3473301, 1301.45642, 0.0354208499, -5.94522369e-08, 0.999372482, -6.75113299e-08, 1, 6.18823748e-08, -0.999372482, -6.96608922e-08, 0.0354208499},
                                
                                -- 2Âº andar
                                {113.044266, 37.0113754, 1320.3418, 0.0876203775, 3.93022539e-08, 0.996153951, -7.10903691e-08, 1, -3.32009833e-08, -0.996153951, -6.79078695e-08, 0.0876203775},
                                {111.099968, 37.4273109, 1311.01245, -0.061849609, 4.49407317e-10, 0.998085499, 7.65155335e-08, 1, 4.29126423e-09, -0.998085499, 7.6634457e-08, -0.061849609},
                                {109.060455, 37.4273338, 1299.99072, -0.118700936, 4.6637922e-08, 0.992930055, 5.36283054e-08, 1, -4.05589446e-08, -0.992930055, 4.84347709e-08, -0.118700936},
                                {117.429138, 37.417263, 1282.82678, 0.99131012, -1.2366741e-09, 0.131545529, 1.70378056e-09, 1, -3.43836026e-09, -0.131545529, 3.63260622e-09, 0.99131012},
                                {128.235779, 37.2272797, 1281.05725, 0.971541643, -2.97449603e-08, 0.236868843, 2.93355882e-08, 1, 5.25276089e-09, -0.236868843, 1.84541094e-09, 0.971541643},
                                {138.602768, 37.0113754, 1279.50293, 0.950748801, -9.17943499e-09, 0.309962422, 1.75733597e-08, 1, -2.42881573e-08, -0.309962422, 2.85390183e-08, 0.950748801},
                                {139.393845, 38.3473473, 1298.46155, 0.0612665527, 5.58129187e-09, 0.99812144, 3.12952899e-08, 1, -7.5127593e-09, -0.99812144, 3.16967785e-08, 0.0612665527},
                                {141.431305, 38.3473206, 1310.28516, 0.00383127318, 4.25956621e-08, 0.999992669, 6.6072154e-08, 1, -4.28491163e-08, -0.999992669, 6.62358417e-08, 0.00383127318},
                                {133.469437, 38.3473129, 1314.43396, 0.244895473, -1.06621165e-08, -0.969549477, 1.49143204e-08, 1, -7.22981852e-09, 0.969549477, -1.26896227e-08, 0.244895473},
                                {131.349075, 38.523262, 1301.60376, 0.146385387, 1.12087442e-08, -0.989227653, -3.183888e-08, 1, 6.61930333e-09, 0.989227653, 3.05269303e-08, 0.146385387},
                            }
                            for i, v in pairs(positions) do
                                local POS = CFrame.new(unpack(v))

                                main.path_find(POS.Position, 3)
                                main.instant(POS)
                                status_auto("Robbing [" .. main.bag2() .. "]...")
                                soco()
                                status_auto("Robbing [" .. main.bag2() .. "]...")
                                if main.bag() then
                                    break
                                end
                            end

                            ROBBERIES_ALREADY['Jewelry Store'] = true
                            status_auto("leaving...")
                            Flags["jewelry exit"]()
                            wait(1)
                            plat()
                            status_cooldown("Countdown", 3)
                            unplat()
                            Flags["city sell"]()
                        end
                    else
                        notificar("MACRO X", "Jewelry Closed!", 3, 3)
                    end
                end

                status_auto("")
            end, "jewelry store auto")

            tab_Auto:CreateButton("Auto Museum", function() --Sim+
                if not main.getCar() then carro() end
                if not main.bag() then
                    if main.is_opened("museum") == "roubando" then else
                        notificar('MACRO X', "Museum Closed!", 3, 3)
                        return
                    end
                    notificar("MACRO X", "Auto Museum Enabled!", 1, 3)
                    status_auto("Teleporting Museum...")
                    main.Tp2(Vector3.new(1055, 101, 1274))
                    wait(1)
                    for _, model in pairs(game:GetService("Workspace").Museum.Lights:GetChildren()) do
                        if model:IsA('Model') and model.Name == 'Spotlight' then
                            for _, v in pairs(model:GetChildren()) do
                                if v:IsA('Part') and v.Name == 'Light' then
                                    v.CanTouch = false
                                    v.Transparency = 0.8
                                end
                            end
                        end
                    end
                    ExitCar()
                    status_auto("Entring...")
                    main.path_find(Vector3.new(1090, 105, 1274))
                    ROBBERIES_ALREADY['Museum'] = true
                    wait(0.5)
                    if main.is_opened("museum") == "roubando" then else
                        notificar('MACRO X', "Museum Closed!", 3, 4)
                        Tp1()
                        return
                    end
                    main.noclip(true)
                    wait(0.1)
                    main.Tp1(Vector3.new(1101, 106, 1282), nil, 50)
                    wait(0.2)
                    main.Tp1(Vector3.new(1102, 128, 1282), nil, 70)
                    main.Tp1(Vector3.new(1112, 129, 1300), nil, 70)
                    main.Tp1(Vector3.new(1130.90478515625, 126.52542877197266, 1306.00732421875))

                    Flags["museum bag"](true)
                    main.noclip(false)
                    local start_time = os.clock()
                    status_auto("Robbing...")
                    ROBBERIES_ALREADY['Museum'] = true
                    repeat
                        status_auto("Bag [" .. main.bag2() .. "]")
                        main.instant(Vector3.new(1130.883056640625, 109.9011001586914, 1305.9967041015625))
                        task.wait()
                    until main.bag() or main.is_opened("museum") == "fechado" or os.clock() - start_time >= 15
                    Flags["museum bag"](false)
                    if main.is_opened("museum") == "fechado" then
                        getHumanoid().Health = 0
                        status_cooldown("Countdown...", 5)
                        return
                    end
                    status_auto("Exiting...")

                    wait(0.1)
                    main.Tp1(Vector3.new(1130.90478515625, 126.52542877197266, 1306.00732421875))

                    main.Tp1(Vector3.new(1107, 108, 1287), nil, 50)
                    main.Tp1(Vector3.new(1098, 107, 1280), nil, 50)
                    main.noclip(true)
                    main.Tp1(Vector3.new(1088, 105, 1272), nil, 30)
                    main.noclip(false)
                    main.Tp1(Vector3.new(1061, 108, 1251), nil, 50)
                    wait(0.1)
                    main.Tp2(Vector3.new(1055, 107, 1274))
                    plat()
                    status_cooldown("Cooldown...", 3)
                    unplat()

                    pcall(Flags["vulcano sell"])
                end
                status_auto("")
            end, "museum auto")


            tab_Auto:CreateButton("Auto Bank", function(isfarm) --Sim+
                if not main.getCar() then carro() end
                isfarm = isfarm or false
                if not main.bag() then
                    if main.is_opened("bank") == "aberto" or main.is_opened("bank") == "roubando" then
                        spawn(function()
                            notificar("MACRO X", "Auto Bank Enabled!", 1, 3)
                            wait(1)
                            notificar("MACRO X", "Activate Kill Aura (Recommended).", 4, 2)
                            notificar("MACRO X", "If you are using electron or flux, unwanted closures can occur.", 2, 7)
                        end)
                        status_auto("Teleporting to bank...")
                        main.Tp2(Vector3.new(2.946112871170044, 18.790477752685547, 863.6297607421875))
                        if main.is_opened("bank") == "aberto" or main.is_opened("bank") == "roubando" then
                            status_auto("Leaving car...")
                            main.noclip(false)
                            local function returnbanklasername()
                                local banks = workspace.Banks:GetChildren()

                                if #banks == 0 then
                                    return
                                end

                                local firstLayout = banks[1]:FindFirstChild("Layout")
                                local firstChild = firstLayout:GetChildren()[1]

                                return firstChild
                            end
                            ROBBERIES_ALREADY['Bank'] = true
                            local obj = returnbanklasername()

                            for i = 1, 500 do
                                for _, model in pairs(obj:GetChildren()) do
                                    if model:IsA('Model') and model.Name == 'Lasers' then
                                        for i, v in pairs(model:GetChildren()) do
                                            if v:IsA('Part') and v.Name == 'Part' then
                                                v.CanTouch = false
                                                v.Transparency = 0.8
                                            end
                                            if v:IsA('Model') and v.Name == 'Laser' then
                                                v.Part.CanTouch = false
                                                v.Part.Transparency = 0.8
                                            end
                                            if v:IsA('Model') and (v.Name == 'LaserTrack' or v.Name == "LaserWall" or v.Name == "1") then
                                                for i, v in pairs(v:GetChildren()) do
                                                    if v:IsA('Model') and v.Name == 'Lasers' then
                                                        for i, final in pairs(v:GetChildren()) do
                                                            if final:IsA('Part') and final.Name == 'Part' then
                                                                final.CanTouch = false
                                                                final.Transparency = 0.8
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            ExitCar()
                            status_auto("Entering...")
                            main.instant(Vector3.new(2.946112871170044, 18.790477752685547, 863.6297607421875))
                            wait(0.1)
                            ROBBERIES_ALREADY['Bank'] = true
                            repeat
                                main.instant(Vector3.new(14.106478691101074, 18.79047966003418, 862.36962890625))

                                wait(0.5)
                            until (getRoot().Position - Vector3.new(14.106478691101074, 18.79047966003418, 862.36962890625)).Magnitude < 5

                            main.Tp1(Vector3.new(24.639490127563477, 18.990936279296875, 860.30712890625), 150, 20)

                            main.Tp1(Vector3.new(31.600963592529297, 18.990936279296875, 896.3362426757812), 150, 50)

                            main.Tp1(Vector3.new(36.290794372558594, 18.8626651763916, 904.5891723632812), 150, 50)

                            main.noclip(true)
                            status_auto("Starting robbery...")
                            main.Tp1(Vector3.new(38.07012939453125, 18.862625122070312, 916.6630249023438), 150, 50)

                            main.noclip(false)

                            local function getName()
                                return workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].Name
                            end
                            status_auto("Teleporting to TriggerDoor")

                            local function get_itembank(name)
                                for i, v in pairs(game:GetService("Workspace").Banks:GetDescendants()) do
                                    if v.Name == name then
                                        return v
                                    end
                                end
                                return false
                            end

                            local continuar = false

                            ___(true)
                            if getName() == "06TheBlueRoom" then
                                main.Tp1(Vector3.new(48.75989532470703, 18.635839462280273, 924.778564453125), 350, 50)
                                main.Tp1(Vector3.new(58.41497802734375, 18.635839462280273, 923.1455078125), 350, 50)
                                main.Tp1(Vector3.new(58.41497802734375, 0.08744755387306213, 923.1455078125), 350, 50)
                            elseif getName() == "03Corridor" then
                                continuar = true
                                main.Tp1(Vector3.new(49.59214401245117, 18.635839462280273, 924.3831176757812), 350, 50)
                                main.Tp1(Vector3.new(57.36463928222656, 18.635839462280273, 922.5746459960938), 350, 50)
                                main.Tp1(Vector3.new(57.36463928222656, -8.010846138000488, 922.5746459960938), 350, 50)
                                main.Tp1(Vector3.new(62.987571716308594, -8.010846138000488, 917.4706420898438), 350, 50)
                                main.Tp1(Vector3.new(128.05059814453125, -8.010846138000488, 909.9364624023438), 350, 50)
                            elseif getName() == "09Presidential" then
                                continuar = true
                                main.Tp1(Vector3.new(47.67252731323242, 20.635839462280273, 924.5586547851562), 350, 50)

                                main.Tp1(Vector3.new(55.31513595581055, 20.635839462280273, 922.8180541992188), 350, 50)

                                main.Tp1(Vector3.new(55.31513595581055, -8.078375816345215, 922.8180541992188), 350, 50)

                                main.Tp1(Vector3.new(78.89239501953125, -7.459917068481445, 919.3712768554688), 350, 50)

                                main.Tp1(Vector3.new(96.78486633300781, -7.459917068481445, 992.6212768554688), 350, 50)

                                main.noclip(true)

                                main.Tp1(Vector3.new(66.45573425292969, -7.459917068481445, 997.2420654296875), 350, 50,
                                    true)

                                main.Tp1(Vector3.new(61.51887512207031, -4.394664287567139, 998.5634155273438), nil, nil)


                                main.noclip(false)
                            elseif getName() == "01UpperManagement" then
                                continuar = true
                                main.Tp1(Vector3.new(44.938133239746094, 18.635848999023438, 926.42041015625), 350, 50)

                                main.Tp1(Vector3.new(83.52613830566406, 31.376665115356445, 919.2525634765625), 350, 50)

                                main.Tp1(Vector3.new(71.92843627929688, 58.48558044433594, 846.738037109375), 350, 50)

                                main.Tp1(Vector3.new(70.25926208496094, 60.135887145996094, 837.667236328125), 350, 50)

                                main.Tp1(Vector3.new(28.71124267578125, 67.135887145996094, 844.19921875), 350, 50)

                                main.Tp1(Vector3.new(32.009361267089844, 67.135887145996094, 864.1006469726562), 350, 50)

                                main.Tp1(Vector3.new(51.4130744934082, 67.135887145996094, 864.875244140625), 350, 50)

                                main.Tp1(Vector3.new(57.433570861816406, 67.135887145996094, 888.5330200195312), 350, 50)

                                main.Tp1(Vector3.new(38.27565002441406, 67.135887145996094, 892.4152221679688), 350, 50)

                                main.Tp1(Vector3.new(43.48212814331055, 67.135887145996094, 922.7908935546875), 350, 50)

                                main.Tp1(Vector3.new(68.8307113647461, 67.135887145996094, 921.896728515625), 350, 50)
                            end
                            ___(false)
                            for i = 1, 5 do
                                if continuar == false then
                                    local a = main.path_find(get_itembank("TriggerDoor").Position, 3)
                                    if a then
                                        continuar = true
                                    else
                                        wait(1)
                                    end
                                end
                            end

                            local pos = get_itembank("TriggerDoor").Position

                            main.noclip(true)



                            local MONEY = get_itembank("Money")
                            repeat
                                task.wait(0.1)
                                status_auto("Bag [" .. main.bag2() .. "]")
                                if getName() == "02Basement" then
                                    main.Tp1(Vector3.new(-0, -6, 960))
                                elseif getName() == "03Corridor" then
                                    main.Tp1(Vector3.new(196.52371215820312, -7.910612106323242, 898.4318237304688))
                                elseif getName() == "09Presidential" then
                                    main.Tp1(Vector3.new(46.0486946105957, -7.338265419006348, 957.270263671875), 350, 50)
                                elseif getName() == "01UpperManagement" then
                                    main.Tp1(Vector3.new(82.44712829589844, 60.23636245727539, 919.3800659179688), 350,
                                        50)
                                elseif getName() == "05Underwater" then
                                    main.Tp1(Vector3.new(157, -7, 843), 350, 50)
                                elseif getName() == "04Remastered" then
                                    main.Tp1(Vector3.new(20, 3, 889), 350, 50)
                                elseif getName() == "08Deductions" then
                                    main.Tp1(Vector3.new(39, 3, 964), 350, 50)
                                else
                                    main.Tp1(MONEY.Position, 350, 30)
                                end
                            until main.bag() or getHumanoid().Health == 0 or main.is_opened("bank") == "fechado"
                            if main.is_opened("bank") == "fechado" then
                                status_auto("")
                                return "stop"
                            end
                            if getHumanoid().Health == 0 then
                                status_auto("Your dead")
                                wait(1)
                                status_auto("")
                                return
                            end
                            status_auto("Bag full, Leaving...")

                            if getName() == "06TheBlueRoom" then
                                main.Tp1(Vector3.new(58.41497802734375, 0.08744755387306213, 923.1455078125), 350, 50)
                                main.Tp1(Vector3.new(58.41497802734375, 18.635839462280273, 923.1455078125), 350, 50)
                                main.Tp1(Vector3.new(48.75989532470703, 18.635839462280273, 924.778564453125), 350, 50)
                            elseif getName() == "03Corridor" then
                                main.Tp1(Vector3.new(196.52371215820312, -7.910612106323242, 898.4318237304688), 350, 50)
                                main.Tp1(Vector3.new(128.05059814453125, -8.010846138000488, 909.9364624023438), 350, 50)
                                main.Tp1(Vector3.new(62.987571716308594, -8.010846138000488, 917.4706420898438), 350, 50)
                                main.Tp1(Vector3.new(57.36463928222656, -8.010846138000488, 922.5746459960938), 350, 50)
                                main.Tp1(Vector3.new(57.36463928222656, 18.635839462280273, 922.5746459960938), 350, 50)
                                main.Tp1(Vector3.new(49.59214401245117, 18.635839462280273, 924.3831176757812), 350, 50)
                            elseif getName() == "09Presidential" then
                                main.Tp1(Vector3.new(66.45573425292969, -7.459917068481445, 997.2420654296875), 350, 50)

                                main.Tp1(Vector3.new(96.78486633300781, -7.459917068481445, 992.6212768554688), 350, 50)
                                main.Tp1(Vector3.new(78.89239501953125, -7.459917068481445, 919.3712768554688), 350, 50)
                                main.Tp1(Vector3.new(55.31513595581055, -8.078375816345215, 922.8180541992188), 350, 50)
                                main.Tp1(Vector3.new(55.31513595581055, 18.635839462280273, 922.8180541992188), 350, 50)
                                main.Tp1(Vector3.new(47.67252731323242, 18.635839462280273, 924.5586547851562), 350, 50)
                            elseif getName() == "01UpperManagement" then
                                main.Tp1(Vector3.new(68.8307113647461, 67.135887145996094, 921.896728515625), 350, 50)
                                main.Tp1(Vector3.new(43.48212814331055, 67.135887145996094, 922.7908935546875), 350, 50)
                                main.Tp1(Vector3.new(38.27565002441406, 67.135887145996094, 892.4152221679688), 350, 50)
                                main.Tp1(Vector3.new(57.433570861816406, 67.135887145996094, 888.5330200195312), 350, 50)
                                main.Tp1(Vector3.new(51.4130744934082, 67.135887145996094, 864.875244140625), 350, 50)
                                main.Tp1(Vector3.new(32.009361267089844, 67.135887145996094, 864.1006469726562), 350, 50)
                                main.Tp1(Vector3.new(28.71124267578125, 67.135887145996094, 844.19921875), 350, 50)
                                main.Tp1(Vector3.new(70.25926208496094, 60.135887145996094, 837.667236328125), 350, 50)
                                main.Tp1(Vector3.new(71.92843627929688, 58.48558044433594, 846.738037109375), 350, 50)
                                main.Tp1(Vector3.new(83.52613830566406, 31.376665115356445, 919.2525634765625), 350, 50)
                                main.Tp1(Vector3.new(44.938133239746094, 18.635848999023438, 926.42041015625), 350, 50)
                            else
                                main.path_find(pos, 3)
                            end

                            main.noclip(false)

                            main.path_find(Vector3.new(38.07012939453125, 18.862625122070312, 916.6630249023438), 3)

                            main.noclip(true)

                            main.Tp1(Vector3.new(36.290794372558594, 18.8626651763916, 904.5891723632812))

                            main.noclip(false)

                            main.Tp1(Vector3.new(29.41069793701172, 18.635818481445312, 859.8158569335938), 350, 50)

                            main.Tp1(Vector3.new(-0.01080542802810669, 18.563661575317383, 863.6505126953125))
                            wait(0.3)
                            main.instant(Vector3.new(-0.01080542802810669, 18.563661575317383, 863.6505126953125))

                            status_auto("Sucess")
                            status_auto("")
                        else
                            status_auto("")
                            return "stop"
                        end
                    end
                else
                    notificar("MACRO X", "Bank Closed!", 3, 3)
                end
                status_auto("")
            end, "bank auto")

            tab_Auto:CreateButton("Auto Casino", function() --Sim+
                if not main.getCar() then
                    carro()
                end
                if not main.bag() then
                    if main.is_opened("casino") == "aberto" or main.is_opened("casino") == "roubando" then
                        notificar("MACRO X", "Auto Casino Enabled!", 1, 3)
                        status_auto("Teleporting to casino...")
                        main.Tp2(Vector3.new(-12.636963844299316, 174.62538146972656, -4724.25341796875))
                    end
                    if main.is_opened("casino") == "aberto" or main.is_opened("casino") == "roubando" then
                    else
                        notificar("MACRO X", "Casino Closed, Stop!", 3, 3)
                        return
                    end
                    status_auto("Leaving car...")
                    wait(1)
                    main.noclip(false)
                    ExitCar()
                    status_auto("Entering...")
                    ___(true)
                    wait(0.1)
                    main.Tp1(Vector3.new(-50, 178, -4713), nil, 55)
                    ROBBERIES_ALREADY['Casino'] = true
                    for i = 1, 10 do
                        main.instant(Vector3.new(-51, 157, -4714))
                        
                    end
                    wait(0.1)
                    main.Tp1(
                        Vector3.new(-11.2236347, 155.254471, -4732.96533, 0.482742995, 4.86605458e-08, -0.875762045,
                            4.22686313e-08, 1, 7.88632377e-08, 0.875762045, -7.50879394e-08, 0.482742995), nil, 70)
                    main.noclip(true)
                    main.Tp1(Vector3.new(-17.81051254272461, 155.27682495117188, -4754.30322265625), nil, 45)
                    if (getRoot().Position - Vector3.new(-17.81051254272461, 155.27682495117188, -4754.30322265625)).Magnitude < 2 then
                    end
                    wait(0.6)

                    local Remote_Casino_Hack = 'CasinoComputerHack'
                    local hack_computer = false
                    function tem_verde()
                        for i, v in pairs(game:GetService('Workspace').Casino.Computers:GetChildren()) do
                            if v.Name == 'Computer' then
                                if v.Display.Color == Color3.fromRGB(0, 255, 0) then
                                    return true
                                end
                            end
                        end
                        return false
                    end

                    if tem_verde() == false then
                        wait(0.3)
                        if (getRoot().Position - Vector3.new(-16.8765811920166, 78.07470703125, -4754.501953125)).Magnitude < 1 then
                        end
                        main.Tp1(Vector3.new(-16.8765811920166, 78.07470703125, -4754.501953125))
                        for i = 1, 50 do
                            getRoot().CFrame = CFrame.new(Vector3.new(-16.8765811920166, 78.07470703125, -4754.501953125))
                            getRoot().Velocity = Vector3.new(0, 1, 0)
                            task.wait()
                        end
                        if (getRoot().Position - Vector3.new(-14.732331275939941, 75.54412841796875, -4744.576171875)).Magnitude < 1 then
                        end
                        main.Tp1(Vector3.new(-14.732331275939941, 75.54412841796875, -4744.576171875), nil, 60)
                        main.noclip(false)
                        if (getRoot().Position - Vector3.new(57.48418045043945, 82.47825622558594, -4724.65625)).Magnitude < 1 then
                        end
                        main.Tp1(Vector3.new(57.48418045043945, 82.47825622558594, -4724.65625))
                        if (getRoot().Position - Vector3.new(56.78488540649414, 78.14791870117188, -4688.5380859375)).Magnitude < 1 then
                        end
                        main.Tp1(Vector3.new(56.78488540649414, 78.14791870117188, -4688.5380859375))
                        for i, v in pairs(game:GetService('Workspace').Casino.Computers:GetChildren()) do
                            if v.Name == 'Computer' and hack_computer == false and tem_verde() ~= true then
                                main.Tp1(v.Display.Position + Vector3.new(0, 6, 0), nil, 100)
                                v[Remote_Casino_Hack]:FireServer()
                                v[Remote_Casino_Hack]:FireServer()
                                if v.Display.Color == Color3.fromRGB(0, 255, 0) then
                                    hack_computer = true
                                end
                            end
                        end
                        wait(1)
                        ___(true)
                        if tem_verde() == true then else
                            notificar("MacroXHub", "Error", 3, 5)
                            return
                        end
                        main.noclip(false)

                        main.Tp1(Vector3.new(49.01467514038086, 77.47745513916016, -4669.95703125), nil, 90)
                        main.Tp1(Vector3.new(59.22966003417969, 85.37664031982422, -4705.568359375), nil, 90)
                        main.Tp1(Vector3.new(-1.5249227285385132, 74.67791748046875, -4738.3876953125), nil, 90)
                        main.Tp1(Vector3.new(-13.993463516235352, 76.17466735839844, -4737.6279296875), nil, 55)
                        main.noclip(true)
                        --elevador
                        main.Tp1(Vector3.new(-17, 75, -4750), nil, 55)
                        wait(0.1)
                        status_auto("Teleporting to money")
                        main.Tp1(Vector3.new(-19, 73, -4754), nil, 60)
                        wait(0.1)
                        main.Tp1(Vector3.new(-19, -57, -4754))
                        wait(0.1)
                        main.Tp1(Vector3.new(-19, -120, -4754))
                        wait(0.1)
                        main.Tp1(Vector3.new(165, -120, -4580))
                    end

                    ___(false)
                    local money = {
                        { 236,                -86, -4615 },
                        { 275,                -85, -4612 },
                        { 285,                -85, -4612 },
                        { 265.02838134765625, -85, -4615.7802734375 },
                        { 322.9991455078125,  -85, -4580.21337890625 },
                        { 338.0627746582031,  -85, -4546.58154296875 },
                        { 333.640380859375,   -85, -4498.15185546875 },
                        { 306.8958435058594,  -85, -4462.70751953125 },
                        { 284.98297119140625, -85, -4450.1044921875 },
                        { 249.2529296875,     -85, -4440.4580078125 },
                    }

                    for i, v in pairs(money) do
                        status_auto("[" .. main.bag2() .. "]")
                        main.Tp1(Vector3.new(unpack(v)), 150, 145)
                        for i, v in pairs(require(game:GetService("ReplicatedStorage").Module.UI).CircleAction.Specs) do
                            if v.Name == "Collect" then
                                v:Callback(true)
                            end
                        end
                        if main.bag() then
                            status_auto("Bag full [" .. main.bag2() .. "]")
                            break
                        end
                    end
                    main.Tp1(Vector3.new(277.8917541503906, -89.33393096923828, -4617.18701171875), nil, nil)

                    status_auto("Leaving...")
                    for i = 1, 5 do
                        ROBBERIES_ALREADY['Casino'] = true
                    end

                    main.noclip(true)

                    main.Tp1(Vector3.new(-17.061161, -89.58927154541016, -4754.83789), nil, nil)
                    wait()
                    main.Tp1(Vector3.new(-17.81051254272461, -113.5892715, -4754.30322265625))
                    wait(0.1)
                    main.Tp1(Vector3.new(-17.411123275756836, 84.97130584716797, -4755.58544921875))
                    main.Tp1(Vector3.new(-17.81051254272461, 155.27682495117188, -4754.30322265625))
                    main.Tp1(
                        Vector3.new(-14.7683401, 158.483612, -4743.60254, -0.832514107, -0.147566035, -0.533989251,
                            -0.0269946512, 0.973533034, -0.226946488, 0.55334574, -0.174521297, -0.814463496), nil, nil)
                    main.Tp1(
                        Vector3.new(16.6036587, 157.444885, -4733.21094, -0.202176645, -0.19610846, -0.959513485,
                            0.0181498416, 0.978827596, -0.20388025, 0.979180872, -0.0586348437, -0.194336742), nil, nil)
                    main.Tp1(
                        Vector3.new(33.5287857, 158.727371, -4737.27734, -0.998630702, -0.0237445887, -0.0466141626,
                            -0.0122690732, 0.972509861, -0.232538208, 0.0508542582, -0.231647879, -0.971469581), nil, nil)
                    main.noclip(false)
                    wait(0.1)
                    pcall(Flags["vulcano sell"])
                    carro()
                else
                    notificar('MACRO X', "Casino is Closed", 3, 3)
                end
                status_auto("")
            end, "casino auto")

            function cargo_plane_pode() --sexo+
                local cargo_poses = {
                    { 188.899567, 159.872192, 2944.86133, -0.389197111, -3.02974458e-05, 0.92115438,
                        -1.29069549e-05,
                        0.99999994,
                        2.74378017e-05,
                        -0.921154439,
                        -1.21064272e-06,
                        -0.389197141 },
                    { 207.837067, 161.877731, 2945.63062, -0.392494589, -2.9750563e-05, 0.919754207,
                        -1.26632904e-05,
                        1.00000012,
                        2.6918442e-05,
                        -0.919754505,
                        -1.08282597e-06,
                        -0.392494708 },
                    { 224.942444, 163.694992, 2946.27002, -0.395896465, -3.31391384e-05, 0.918295085,
                        -1.41062419e-05,
                        1.00000012,
                        2.99903859e-05,
                        -0.918295205,
                        -1.08131098e-06,
                        -0.395896524 },
                    { 247.749023, 166.127136, 2947.04175, -0.401208371, -2.86899667e-05, 0.915986836,
                        -1.22073207e-05,
                        1.00000012,
                        2.59503868e-05,
                        -0.915986896,
                        -7.70601787e-07,
                        -0.401208401 },
                    { 264.02655, 167.863205, 2947.50879, -0.404910415, -2.84811504e-05, 0.914356351,
                        -1.21195744e-05,
                        1,
                        2.57658285e-05,
                        -0.914356411,
                        -6.48960963e-07,
                        -0.404910445 },
                    { 284.43045, 170.047684, 2948.00269, -0.409712344, -2.84755261e-05, 0.912214756,
                        -1.21227386e-05,
                        1.00000012,
                        2.57712254e-05,
                        -0.912214756,
                        -4.99712428e-07,
                        -0.409712344 },
                    { 303.756561, 172.118835, 2948.36401, -0.414339185, -2.25218901e-05, 0.910122633,
                        -9.58765668e-06,
                        1.00000012,
                        2.03813361e-05,
                        -0.910122514,
                        -2.81121231e-07,
                        -0.414339155 },
                    { 320.080353, 173.871048, 2948.60352, -0.418786943, -2.42826263e-05, 0.908084512,
                        -1.03228322e-05,
                        1.00000012,
                        2.19471349e-05,
                        -0.908084631,
                        -1.83086698e-07,
                        -0.418787003 },
                    { 340.498901, 176.068985, 2948.78247, -0.424165249, -2.85424394e-05, 0.905584812,
                        -1.21360799e-05,
                        1.00000024,
                        2.58009659e-05,
                        -0.905584872,
                        -4.6433339e-08,
                        -0.424165279 },
                    { 359.929291, 178.163971, 2948.84619, -0.429778725, -2.7728378e-05, 0.902934194,
                        -1.18014204e-05,
                        0.99999994,
                        2.50918838e-05,
                        -0.902934194,
                        1.28031161e-07,
                        -0.429778725 },
                    { 378.446533, 180.163956, 2948.7998, -0.435427219, -2.61743826e-05, 0.900223911,
                        -1.11350073e-05,
                        1,
                        2.36728411e-05,
                        -0.90022397,
                        2.83917046e-07,
                        -0.435427219 },
                    { 395.237854, 181.982635, 2948.64429, -0.440245807, -2.8566863e-05, 0.897877276,
                        -1.21478661e-05,
                        1.00000012,
                        2.58262135e-05,
                        -0.897877455,
                        4.63373652e-07,
                        -0.440245867 },
                    { 414.086639, 184.026306, 2948.37646, -0.446489036, -2.60444049e-05, 0.89478904, -1.1074585e-05,
                        1.00000012,
                        2.35469943e-05,
                        -0.894789159,
                        6.04586035e-07,
                        -0.446489096 },
                    { 431.870819, 185.955856, 2947.99854, -0.452282339, -2.0222491e-05, 0.89187485,
                        -8.59248757e-06,
                        1.00000024,
                        1.82661533e-05,
                        -0.891875029,
                        5.99651969e-07,
                        -0.452282429 },
                    { 450.130005, 187.94075, 2947.49683, -0.458626091, -2.45370211e-05, 0.888629496,
                        -1.04489682e-05,
                        1.00000012,
                        2.22188519e-05,
                        -0.888629377,
                        9.05538855e-07,
                        -0.458626002 },
                    { 469.061493, 190.011337, 2946.84253, -0.465410203, -2.00685936e-05, 0.885095119,
                        -8.55569215e-06,
                        1,
                        1.81912346e-05,
                        -0.885095119,
                        8.93802735e-07,
                        -0.465410233 },
                    { 488.777679, 192.165527, 2946.01782, -0.472944349, -2.36511933e-05, 0.88109231,
                        -1.00700272e-05,
                        1.00000012,
                        2.1411639e-05,
                        -0.88109231,
                        1.2541168e-06,
                        -0.472944349 },
                    { 506.642151, 194.119965, 2945.11133, -0.479418069, -1.75626174e-05, 0.877586603,
                        -7.4718173e-06,
                        1,
                        1.58872663e-05,
                        -0.877586782,
                        1.06122911e-06,
                        -0.479418159 },
                    { 523.551636, 195.976624, 2944.14087, -0.486060172, -2.18205241e-05, 0.873925209,
                        -9.29487214e-06,
                        1,
                        1.976372e-05,
                        -0.873925507,
                        1.48531922e-06,
                        -0.486060262 },
                    { 542.48291, 198.056747, 2942.90283, -0.493653983, -1.96620331e-05, 0.86965853,
                        -8.38438427e-06,
                        1.00000012,
                        1.78314276e-05,
                        -0.86965853,
                        1.51139534e-06,
                        -0.493654013 },
                    { 560.914001, 200.086609, 2941.5127, -0.500495315, -1.7296039e-05, 0.865739346,
                        -7.36955599e-06,
                        1.00000024,
                        1.56735605e-05,
                        -0.865739405,
                        1.4676441e-06,
                        -0.500495315 },
                    { 581.651978, 202.373154, 2939.80542, -0.50973475, -1.41657874e-05, 0.860331476,
                        -6.06257663e-06,
                        0.999999821,
                        1.28896309e-05,
                        -0.860331535,
                        1.35297296e-06,
                        -0.50973475 },
                    { 601.430908, 204.559723, 2937.9585, -0.518180311, -1.43969564e-05, 0.855271339,
                        -6.15217914e-06,
                        1,
                        1.30784538e-05,
                        -0.855271459,
                        1.51740221e-06,
                        -0.51818037 },
                    { 619.968384, 206.612747, 2936.04028, -0.52610296, -1.14547856e-05, 0.850420713,
                        -4.88568639e-06,
                        1.00000012,
                        1.03932525e-05,
                        -0.850421011,
                        1.31672812e-06,
                        -0.526103079 },
                    { 639.778076, 208.809906, 2933.80811, -0.535219252, -8.5577376e-06, 0.844713211,
                        -3.65135566e-06,
                        1.00000024,
                        7.76338857e-06,
                        -0.84471333,
                        1.07550488e-06,
                        -0.535219312 },
                    { 661.158752, 211.187454, 2931.15869, -0.545230448, -5.14349404e-06, 0.838286161,
                        -2.19877643e-06,
                        1.00000012,
                        4.67810696e-06,
                        -0.838286221,
                        7.07866946e-07,
                        -0.545230448 },
                    { 685.585022, 213.909027, 2927.81958, -0.557006836, -2.73228102e-06, 0.830507815,
                        -1.15618138e-06,
                        1.00000012,
                        2.46917011e-06,
                        -0.830508113,
                        4.20226797e-07,
                        -0.557006896 },
                    { 701.04248, 215.634262, 2925.53003, -0.564647973, -6.87027921e-07, 0.825331807,
                        -2.8395948e-07,
                        1,
                        6.10975576e-07,
                        -0.825331986,
                        1.10138117e-07,
                        -0.564648092 },
                    { 720.885925, 217.848099, 2922.36841, -0.574345231, 2.22095309e-06, 0.818613172,
                        9.69264306e-07,
                        1,
                        -2.05078004e-06,
                        -0.818613291,
                        -3.84119687e-07,
                        -0.574345231 },
                    { 739.118225, 219.89119, 2919.2312, -0.582940578, 5.80327787e-06, 0.812514722,
                        2.50411813e-06,
                        0.999999881,
                        -5.32625836e-06,
                        -0.812514842,
                        -1.07249093e-06,
                        -0.582940638 },
                    { 761.688904, 222.429977, 2915.10742, -0.595104277, 7.42526117e-06, 0.803648472, 3.2370433e-06,
                        1.00000024,
                        -6.88666933e-06,
                        -0.803648591,
                        -1.48659808e-06,
                        -0.595104337 },
                    { 789.718018, 225.58461, 2909.45947, -0.609010875, 1.3732134e-05, 0.793162048,
                        5.98395036e-06,
                        1.00000012,
                        -1.27236863e-05,
                        -0.793161869,
                        -3.00027591e-06,
                        -0.609010875 },
                    { 797.562195, 226.466263, 2907.7998, -0.613370955, 1.48063127e-05, 0.789794922,
                        6.46337367e-06,
                        1,
                        -1.374165e-05,
                        -0.789795041,
                        -3.31866977e-06,
                        -0.613370955 },
                    { 816.970642, 228.658859, 2903.50269, -0.624065042, 1.80383158e-05, 0.781372428,
                        7.91151524e-06,
                        1.00000024,
                        -1.68179195e-05,
                        -0.781372607,
                        -4.3070595e-06,
                        -0.624065101 },
                    { 837.085266, 230.93338, 2898.74561, -0.63481766, 2.20459351e-05, 0.772661865,
                        9.68346194e-06,
                        1,
                        -2.05973865e-05,
                        -0.772662044,
                        -5.5912069e-06,
                        -0.634817719 },
                    { 857.790955, 233.280243, 2893.50049, -0.645142198, 2.85196911e-05, 0.764062524,
                        1.25774932e-05,
                        1.00000012,
                        -2.67525356e-05,
                        -0.764062762,
                        -7.63961998e-06,
                        -0.645142198 },
                    { 879.027039, 235.690933, 2887.84058, -0.657176077, 3.22768719e-05, 0.753736973,
                        1.42846729e-05,
                        0.99999994,
                        -3.03824654e-05,
                        -0.753737152,
                        -9.19909508e-06,
                        -0.657176197 },
                    { 901.698059, 238.266174, 2881.35547, -0.668979526, 3.07302107e-05, 0.743280768,
                        1.36613635e-05,
                        1,
                        -2.9046545e-05,
                        -0.743280768,
                        -9.27564088e-06,
                        -0.668979526 },
                    { 920.483032, 240.411209, 2875.72778, -0.680179, 4.16391958e-05, 0.733046234,
                        1.85979552e-05,
                        1.00000024,
                        -3.95635798e-05,
                        -0.733046174,
                        -1.32716395e-05,
                        -0.68017894 },
                    { 945.567993, 243.276596, 2867.63574, -0.692789674, 0.000241567555, 0.721139669,
                        0.000108511864,
                        1.00000012,
                        -0.000230772639,
                        -0.721139789,
                        -8.16181855e-05,
                        -0.692789733 },
                    { 961.357056, 245.068222, 2862.34961, -0.702486098, 0.000384862738, 0.711697221,
                        0.000173651672,
                        0.99999994,
                        -0.000369357644,
                        -0.7116974,
                        -0.000135874827,
                        -0.702486217 },
                    { 982.368896, 247.412354, 2854.96582, -0.71492511, 0.000320621766, 0.699201107,
                        0.000145615049,
                        1.00000024,
                        -0.000309693074,
                        -0.699201167,
                        -0.00011958793,
                        -0.71492511 },
                    { 1002.7348, 249.631882, 2847.39844, -0.725825965, 0.000274361344, 0.68787837, 0.000125370861,
                        1,
                        -0.00026660593,
                        -0.687878609,
                        -0.000107267741,
                        -0.725825965 },
                    { 1024.45544, 251.943878, 2838.88916, -0.736434519, 0.000313631899, 0.676508725,
                        0.000144214515,
                        0.99999994,
                        -0.000306649308,
                        -0.676508963,
                        -0.000128257059,
                        -0.736434519 },
                    { 1042.03455, 253.784454, 2831.75122, -0.745823979, 0.000269215525, 0.66614306, 0.000124505372,
                        1.00000012,
                        -0.000264803908,
                        -0.666143298,
                        -0.000114550174,
                        -0.745823979 },
                    { 1064.11853, 256.051788, 2822.36841, -0.756748378, 0.00023951249, 0.653706312,
                        0.000111550675,
                        0.99999994,
                        -0.00023725853,
                        -0.653706253,
                        -0.000106623018,
                        -0.756748259 },
                    { 1084.0188, 258.058502, 2813.53906, -0.766341507, 0.000252148428, 0.642433345,
                        0.000118229465,
                        1.00000012,
                        -0.000251472637,
                        -0.642433405,
                        -0.000116752934,
                        -0.766341567 },
                    { 1107.24463, 260.361603, 2802.77148, -0.777071118, 0.000195986329, 0.629412711,
                        9.26331923e-05,
                        1.00000012,
                        -0.000197036949,
                        -0.62941283,
                        -9.48006054e-05,
                        -0.777071118 },
                    { 1131.07092, 262.689148, 2791.23999, -0.788261175, 0.0001716775, 0.615340769,
                        8.18571716e-05,
                        1,
                        -0.000174144632,
                        -0.615340948,
                        -8.68921852e-05,
                        -0.788261116 },
                    { 1153.0426, 264.805359, 2780.0896, -0.797639132, 0.000161207063, 0.603135228, 7.7484372e-05,
                        1.00000012,
                        -0.000164820056,
                        -0.603135169,
                        -8.47295742e-05,
                        -0.797639012 },
                    { 1175.17053, 266.917145, 2768.44995, -0.807826757, 0.000160024589, 0.58942014, 7.76194938e-05,
                        1.00000012,
                        -0.000165111385,
                        -0.58942008,
                        -8.76246486e-05,
                        -0.807826817 },
                    { 1197.63647, 269.043182, 2756.12256, -0.81774956, 0.000135016497, 0.575574279,
                        6.61301092e-05,
                        1,
                        -0.000140632677,
                        -0.575574219,
                        -7.69379549e-05,
                        -0.81774956 },
                    { 1218.17334, 270.975647, 2744.40698, -0.82674998, 0.000120848221, 0.562569618,
                        5.97222679e-05,
                        0.99999994,
                        -0.00012703026,
                        -0.562569499,
                        -7.14249181e-05,
                        -0.826749921 },
                    { 1240.67859, 273.086029, 2731.05347, -0.83647418, 8.73739336e-05, 0.548006356, 4.3649783e-05,
                        1.00000012,
                        -9.28082445e-05,
                        -0.548006237,
                        -5.37096894e-05,
                        -0.83647418 },
                    { 1261.64539, 275.049988, 2718.11548, -0.845526397, 6.32368683e-05, 0.53393358, 3.19171704e-05,
                        1,
                        -6.78883953e-05,
                        -0.533933699,
                        -4.03521808e-05,
                        -0.845526457 },
                    { 1283.93872, 277.137634, 2703.83472, -0.855502546, 4.62322714e-05, 0.517798841,
                        2.36277701e-05,
                        1.00000012,
                        -5.02721668e-05,
                        -0.517798841,
                        -3.0761752e-05,
                        -0.855502486 },
                    { 1301.55847, 278.80014, 2692.12354, -0.863317251, 3.89049965e-05, 0.504661441,
                        2.00959657e-05,
                        1,
                        -4.27297055e-05,
                        -0.50466162,
                        -2.67466203e-05,
                        -0.863317311 },
                    { 1325.11987, 281.02832, 2675.84277, -0.873702109, 2.30586338e-05, 0.486461163,
                        1.20896348e-05,
                        0.99999994,
                        -2.57185384e-05,
                        -0.486461341,
                        -1.65844885e-05,
                        -0.873702168 },
                    { 1347.46338, 283.168884, 2659.66089, -0.882945478, 6.84784118e-06, 0.469475955,
                        3.64864013e-06,
                        1.00000024,
                        -7.75259196e-06,
                        -0.469475985,
                        -5.12011229e-06,
                        -0.882945418 },
                    { 1367.70667, 285.135956, 2644.46924, -0.892386317, -6.69170095e-06, 0.451272279,
                        -3.60555964e-06,
                        1.00000012,
                        7.67257916e-06,
                        -0.451272398,
                        5.23561857e-06,
                        -0.892386258 },
                    { 1388.6637, 287.203949, 2627.98071, -0.901167154, -2.33882529e-05, 0.433471859,
                        -1.28298889e-05,
                        1,
                        2.72825382e-05,
                        -0.433471829,
                        1.90287537e-05,
                        -0.901167095 },
                    { 1407.06287, 289.047943, 2612.98071, -0.909747005, -3.4346609e-05, 0.41516301,
                        -1.91518338e-05,
                        1.00000012,
                        4.07417974e-05,
                        -0.41516301,
                        2.91150282e-05,
                        -0.909747124 },
                    { 1425.33142, 290.917938, 2597.45947, -0.91801399, -4.58972318e-05, 0.39654839,
                        -2.60402048e-05,
                        1.00000024,
                        5.54146354e-05,
                        -0.39654842,
                        4.05636601e-05,
                        -0.918013871 },
                    { 1444.54541, 292.931732, 2580.43335, -0.926749766, -5.71858545e-05, 0.375679106,
                        -3.31278716e-05,
                        1,
                        7.04822887e-05,
                        -0.375679135,
                        5.28681703e-05,
                        -0.926749825 },
                    { 1465.52075, 295.198883, 2560.91748, -0.936091423, -7.13200352e-05, 0.351756871,
                        -4.23405982e-05,
                        1.00000012,
                        9.00740342e-05,
                        -0.351756781,
                        6.94265254e-05,
                        -0.936091483 },
                    { 1482.86194, 297.136139, 2543.99072, -0.943796277, -9.63584171e-05, 0.330527693,
                        -5.84946974e-05,
                        1.00000012,
                        0.000124469952,
                        -0.330527753,
                        9.81468038e-05,
                        -0.943796277 },
                    { 1500.29578, 299.158722, 2526.09741, -0.951031387, -0.000100512138, 0.309094638,
                        -6.24751847e-05,
                        1,
                        0.00013292965,
                        -0.309094727,
                        0.000107121225,
                        -0.951031327 },
                    { 1517.65918, 301.238007, 2507.54028, -0.959195971, -0.000101649013, 0.282742172,
                        -6.51210576e-05,
                        1.00000012,
                        0.000138560412,
                        -0.282742143,
                        0.000114499198,
                        -0.959195971 },
                    { 1536.37537, 303.595154, 2486.30933, -0.967252016, -0.00011650235, 0.253817797,
                        -7.72899875e-05,
                        0.999999881,
                        0.00016447829,
                        -0.253817856,
                        0.000139474563,
                        -0.967252016 },
                    { 1553.36426, 305.855621, 2465.80273, -0.974083245, -0.000146640697, 0.226190239,
                        -0.000100745892,
                        1,
                        0.000214408457,
                        -0.226190358,
                        0.000186085454,
                        -0.974083066 },
                    { 1568.71826, 308.007721, 2446.20605, -0.98023361, -0.000132560046, 0.197843656,
                        -9.46101791e-05,
                        1,
                        0.000201274408,
                        -0.197843641,
                        0.000178580623,
                        -0.98023355 },
                    { 1584.52734, 310.368347, 2424.62939, -0.985874474, -0.000150099106, 0.167486086,
                        -0.000111843961,
                        1.00000012,
                        0.000237823871,
                        -0.167486101,
                        0.000215745182,
                        -0.985874414 },
                    { 1600.4845, 312.908997, 2401.4458, -0.991501451, -0.000141804761, 0.130096346,
                        -0.000111807531,
                        1.00000012,
                        0.000237829066,
                        -0.130096391,
                        0.000221280527,
                        -0.991501272 },
                    { 1615.84155, 315.569611, 2377.18726, -0.995799482, -0.000124915969, 0.0915612057,
                        -0.000104920095,
                        1,
                        0.000223195355,
                        -0.0915612131,
                        0.000212643092,
                        -0.995799482 },
                    { 1627.87036, 317.830353, 2356.6394, -0.998350799, -0.000138131567, 0.0574088842,
                        -0.000123259364,
                        1.00000012,
                        0.00026237889,
                        -0.0574090406,
                        0.000254888611,
                        -0.998350739 },
                    { 1640.72107, 320.483429, 2332.63257, -0.999833524, -0.000141122, 0.0182452276,
                        -0.000135874172,
                        1,
                        0.000289164134,
                        -0.0182451569,
                        0.000286623079,
                        -0.999833584 },
                    { 1651.73767, 322.983643, 2310.17358, -0.999759495, -0.000125470004, -0.0219354238,
                        -0.00013163613,
                        1,
                        0.000280222739,
                        0.0219352618,
                        0.000283062429,
                        -0.999759316 },
                    { 1661.17151, 325.388702, 2288.74316, -0.998315334, -0.000124685917, -0.0580233298,
                        -0.000142521792,
                        1.00000012,
                        0.000303427281,
                        0.0580231845,
                        0.000311218231,
                        -0.998315156 },
                    { 1671.66309, 328.396332, 2262.16382, -0.994310379, -0.000126027633, -0.10652256,
                        -0.000164203622,
                        1,
                        0.000349666632,
                        0.106522463,
                        0.000365179207,
                        -0.99431026 },
                    { 1680.67529, 331.479156, 2235.31348, -0.988326192, -0.000106859618, -0.15235348,
                        -0.000160894546,
                        1.00000012,
                        0.000342430722,
                        0.152353391,
                        0.000362964376,
                        -0.988326073 },
                    { 1689.40295, 335.077515, 2204.37183, -0.977733552, -7.01238096e-05, -0.209850088,
                        -0.000132100715,
                        1,
                        0.00028133273,
                        0.209850073,
                        0.00030280705,
                        -0.977733552 },
                    { 1694.94104, 337.968323, 2179.9104, -0.966917753, -6.32100637e-05, -0.255088925,
                        -0.00014918673,
                        1.00000012,
                        0.000317718805,
                        0.255088866,
                        0.000345294044,
                        -0.966917634 },
                    { 1700.19238, 341.588318, 2149.75854, -0.950483382, -2.32575621e-05, -0.310775876,
                        -8.08133336e-05,
                        1,
                        0.000172339947,
                        0.310775727,
                        0.00018894668,
                        -0.950483143 },
                    { 1702.79578, 344.14624, 2128.79565, -0.941930473, 8.94511345e-07, -0.335808665,
                        3.9203801e-06,
                        1.00000024,
                        -8.31707257e-06,
                        0.335808575,
                        -9.1036527e-06,
                        -0.941930234 },
                    { 1705.18616, 347.36145, 2102.47363, -0.934779108, -0.00126091647, -0.355227679,
                        -0.00111097761,
                        0.999999285,
                        -0.000626064546,
                        0.355228126,
                        -0.000190551946,
                        -0.934779525 },
                    { 1706.96667, 350.385376, 2077.604, -0.9277578, -0.000974675117, -0.373181492,
                        -0.000842302048,
                        0.999999583,
                        -0.000517768669,
                        0.37318182,
                        -0.000166033686,
                        -0.927758217 },
                    { 1708.37671, 353.739838, 2049.73413, -0.920212507, -0.000945600041, -0.391417801,
                        -0.000804134354,
                        0.999999702,
                        -0.000525335956,
                        0.391418189,
                        -0.000168660496,
                        -0.920212984 },
                    { 1709.1189, 356.798401, 2024.04248, -0.913925171, -0.000647676585, -0.40588218,
                        -0.000546390191,
                        0.999999762,
                        -0.000365419663,
                        0.405882329,
                        -0.000112194175,
                        -0.91392529 },
                    { 1709.47192, 359.946808, 1997.40002, -0.906318784, -0.000707928964, -0.42259416,
                        -0.000589165196,
                        0.999999702,
                        -0.000411638379,
                        0.422594279,
                        -0.000124083192,
                        -0.906318903 },
                    { 1709.33667, 363.012878, 1971.21533, -0.89874059, -0.000615149562, -0.438480556,
                        -0.00050445646,
                        0.99999994,
                        -0.000368964858,
                        0.438480675,
                        -0.000110373527,
                        -0.898740649 },
                    { 1708.59839, 366.274963, 1943.08862, -0.891471267, -0.000617192069, -0.453077078,
                        -0.000505641918,
                        0.99999994,
                        -0.000367329805,
                        0.453077167,
                        -9.83477003e-05,
                        -0.891471207 },
                    { 1707.46155, 369.453949, 1915.67627, -0.882932723, -0.000551771955, -0.46949929,
                        -0.000442633667,
                        0.999999762,
                        -0.00034283282,
                        0.46949935,
                        -9.49040259e-05,
                        -0.882932782 },
                    { 1705.92322, 372.432098, 1889.62756, -0.874621868, -0.00041989109, -0.484805822,
                        -0.00032669105,
                        1.00000012,
                        -0.00027673709,
                        0.484805882,
                        -8.36478648e-05,
                        -0.874621868 },
                    { 1703.63489, 375.67627, 1861.00537, -0.866696894, -0.000451607251, -0.498835117,
                        -0.000355704979,
                        1.00000012,
                        -0.000287306204,
                        0.498835176,
                        -7.15493079e-05,
                        -0.866696954 },
                    { 1700.49402, 378.921753, 1832.32373, -0.863524795, -0.000991874491, -0.504305482,
                        -0.000826448901,
                        0.999999642,
                        -0.000551684585,
                        0.50430584,
                        -5.95844249e-05,
                        -0.863525212 },
                    { 1697.56738, 381.958984, 1805.224, -0.851081133, -0.000662213773, -0.525033891,
                        -0.000532796548,
                        0.999999881,
                        -0.000397641241,
                        0.52503401,
                        -5.86576789e-05,
                        -0.851081192 },
                    { 1694.68311, 384.550537, 1782.03442, -0.840677679, -0.000407071639, -0.541535974,
                        -0.000305052468,
                        1,
                        -0.0002781394,
                        0.541535974,
                        -6.85979976e-05,
                        -0.8406775 },
                    { 1690.45483, 388.158508, 1753.02075, -0.82991147, -0.000281031826, -0.557895303,
                        -0.000200929833,
                        1,
                        -0.000204831071,
                        0.557895243,
                        -5.78740583e-05,
                        -0.829911232 },
                    { 1685.86804, 391.645721, 1725.25146, -0.820187569, -0.000275838189, -0.572094917,
                        -0.000199670525,
                        1.00000012,
                        -0.000195894201,
                        0.572094917,
                        -4.6406516e-05,
                        -0.820187509 },
                    { 1680.9021, 394.398865, 1697.54028, -0.809161186, -0.000196831199, -0.587586701,
                        -0.000127579857,
                        1.00000012,
                        -0.000159324409,
                        0.58758682,
                        -5.39540015e-05,
                        -0.809161186 },
                    { 1675.08276, 397.027802, 1668.00256, -0.797385693, -0.000143890531, -0.603470266,
                        -7.55784931e-05,
                        1,
                        -0.000138565112,
                        0.603470206,
                        -6.48630376e-05,
                        -0.797385514 },
                    { 1665.87244, 399.991791, 1636.62012, 0.303910136, -0.000166597572, 0.952700734,
                        -2.78168955e-06,
                        1.00000012,
                        0.000175765075,
                        -0.952700794,
                        -5.6034758e-05,
                        0.303910077 },
                    { 1658.37854, 403.87796, 1600.8407, 0.982436657, -0.000108065047, 0.186596915, 9.5133204e-05,
                        1,
                        7.82991556e-05,
                        -0.18659696,
                        -5.91696589e-05,
                        0.982436478 },
                    { 1651.08167, 407.563995, 1568.65332, 0.998510301, -0.000142530334, 0.0545659438,
                        0.000140799733,
                        1.00000012,
                        3.58254219e-05,
                        -0.0545660295,
                        -2.80523727e-05,
                        0.998510122 },
                    { 1643.25049, 411.381622, 1536.41504, 0.99877888, -8.78135543e-05, 0.0494051948,
                        8.54825339e-05,
                        1,
                        4.93700354e-05,
                        -0.0494052283,
                        -4.50699808e-05,
                        0.99877888 },
                    { 1632.33606, 414.834839, 1505.50232, 0.846037209, -0.000106751453, 0.53312403, 7.4513795e-05,
                        1.00000036,
                        8.19888519e-05,
                        -0.53312403,
                        -2.96051803e-05,
                        0.846037269 },
                    { 1623.68372, 418.427521, 1474.82288, 0.98629272, -7.81240815e-05, 0.165005073, 7.0804992e-05,
                        1.00000012,
                        5.02167823e-05,
                        -0.165005028,
                        -3.78138648e-05,
                        0.98629266 },
                    { 1613.91541, 422.012421, 1442.3761, 0.993910968, -4.64088334e-05, 0.11018569, 4.08291307e-05,
                        1.00000024,
                        5.28529017e-05,
                        -0.110185653,
                        -4.80046147e-05,
                        0.993911147 },
                    { 1603.49182, 425.661682, 1410.15955, 0.993568957, -0.000120846686, 0.113229409,
                        0.000119410754,
                        1,
                        1.95725042e-05,
                        -0.113229476,
                        -5.90257469e-06,
                        0.993568718 },
                    { 1594.43628, 428.391968, 1385.50525, 0.994046152, 0.0159684699, 0.107783265, -0.0176584627,
                        0.999735355,
                        0.0147432052,
                        -0.107519217,
                        -0.0165587291,
                        0.994065106 },
                    { 1579.17883, 431.313049, 1353.44629, 0.692276716, -8.13961815e-05, 0.721632302,
                        4.16023613e-05,
                        1.00000012,
                        7.29105741e-05,
                        -0.721632421,
                        -2.0415031e-05,
                        0.692276537 },
                    { 1563.17896, 434.798737, 1321.75342, 0.597827137, -9.36920842e-05, 0.801625252, 5.3628446e-05,
                        1,
                        7.68904865e-05,
                        -0.801625133,
                        -2.95654377e-06,
                        0.597826898 },
                    { 1547.26367, 438.559631, 1287.87244, 0.878079474, -1.70621734e-05, 0.478515118,
                        2.19737831e-06,
                        1.00000024,
                        3.16193073e-05,
                        -0.478515029,
                        -2.66866446e-05,
                        0.878079414 },
                    { 1531.83459, 442.527863, 1251.45715, 0.971386433, -4.47386992e-06, 0.237505168,
                        -1.6704455e-06,
                        1.00000024,
                        2.57359407e-05,
                        -0.237505168,
                        -2.53549442e-05,
                        0.971386313 },
                    { 1521.58472, 445.062897, 1228.32983, 0.975145102, -3.15657007e-06, 0.221567228,
                        -2.47877347e-06,
                        1.00000012,
                        2.52023838e-05,
                        -0.221567377,
                        -2.51331403e-05,
                        0.975145102 },
                    { 1507.1698, 448.484375, 1197.14636, 0.973124802, 8.33415834e-06, 0.230279043,
                        -1.31762899e-05,
                        1.00000012,
                        1.94703207e-05,
                        -0.230279103,
                        -2.19479007e-05,
                        0.973124564 },
                    { 1493.58752, 452.175354, 1166.52588, 0.958690107, -3.77168399e-05, -0.284452766,
                        3.37385136e-05,
                        1.00000024,
                        -1.89240272e-05,
                        0.284452796,
                        8.55980215e-06,
                        0.958690166 },
                    { 1478.0094, 457.003601, 1138.48633, -0.739656687, -6.57134879e-05, -0.672984302,
                        -6.8174435e-05,
                        1.00000012,
                        -2.27352248e-05,
                        0.672984302,
                        2.90880489e-05,
                        -0.739656687 },
                    { 1456.2179, 458.714966, 1108.17126, 0.0468399934, -4.05618957e-05, 0.9989025, 2.75876628e-05,
                        0.99999994,
                        3.93229093e-05,
                        -0.99890238,
                        2.57214379e-05,
                        0.0468398109 },
                    { 1435.70312, 462.588348, 1075.24609, 0.564556539, -3.45197368e-05, 0.825394332,
                        4.38763891e-05,
                        1.00000012,
                        1.18180787e-05,
                        -0.825394452,
                        2.95210612e-05,
                        0.564556599 },
                    { 1417.5918, 465.976105, 1046.3396, 0.819462061, -0.000100828787, 0.573133528,
                        0.000127543768,
                        1.00000024,
                        -6.44588363e-06,
                        -0.573133469,
                        7.8390447e-05,
                        0.819462121 },
                    { 1399.25256, 469.426239, 1017.18311, 0.910522699, -0.000105493862, 0.413459092,
                        0.000135145005,
                        1.00000012,
                        -4.24357277e-05,
                        -0.413459212,
                        9.4520823e-05,
                        0.910522759 },
                    { 1376.83167, 473.396057, 984.577026, 0.676991522, 2.09454083e-05, 0.735990822,
                        -3.90859896e-06,
                        1.00000012,
                        -2.48325996e-05,
                        -0.735991001,
                        1.39549102e-05,
                        0.676991343 },
                    { 1349.79089, 478.071594, 946.93457, 0.994231105, -3.0928346e-05, 0.107259519,
                        3.80377023e-05,
                        1.00000024,
                        -6.41533261e-05,
                        -0.107259519,
                        6.78746728e-05,
                        0.994231105 },
                    { 1332.29883, 481.40976, 919.375122, 0.977956414, 4.52213999e-06, -0.208809227,
                        -1.4631094e-05,
                        1.00000012,
                        -4.6928606e-05,
                        0.208809152,
                        4.89639388e-05,
                        0.977956355 },
                    { 1311.19409, 484.782379, 892.283875, 0.729318678, 1.972059e-05, 0.684174418,
                        1.13682854e-05,
                        1.00000012,
                        -4.09193999e-05,
                        -0.684174478,
                        3.76539392e-05,
                        0.72931838 },
                    { 1285.42078, 488.798401, 862.442444, 0.545292258, -4.51622918e-06, 0.838246167,
                        6.65611151e-05,
                        1,
                        -3.78963377e-05,
                        -0.838246107,
                        7.64762954e-05,
                        0.545292079 },
                    { 1262.86401, 492.305664, 836.82782, 0.457087904, 1.2045055e-05, 0.889421582,
                        5.69712829e-05,
                        1,
                        -4.27986161e-05,
                        -0.889421523,
                        7.02446414e-05,
                        0.457087874 },
                    { 1228.72791, 497.821594, 795.872375, 0.958051324, -5.59007185e-06, 0.286596417,
                        3.50276387e-05,
                        0.999999881,
                        -9.76075098e-05,
                        -0.286596417,
                        0.000103551778,
                        0.958051324 },
                    { 1213.69995, 500.308197, 778.136597, 0.882950366, -7.07148138e-05, 0.469466507,
                        0.000139835625,
                        1.00000012,
                        -0.000112323833,
                        -0.469466716,
                        0.000164849509,
                        0.882950306 },
                    { 1186.13684, 504.118073, 751.368286, 0.71792227, -5.57598687e-05, 0.696123302,
                        0.000155123547,
                        1.00000012,
                        -7.98608235e-05,
                        -0.696123242,
                        0.000165324178,
                        0.71792227 },
                    { 1160.14661, 507.794495, 727.583313, 0.379995644, -0.000346006593, 0.924988389,
                        0.000487834535,
                        1.00000012,
                        0.000173680906,
                        -0.924988329,
                        0.000385262625,
                        0.379995704 },
                    { 1139.45618, 510.74054, 708.85022, 0.341937661, -0.000409797911, 0.939722478,
                        0.000545118353,
                        0.99999994,
                        0.000237740896,
                        -0.939722598,
                        0.000430979766,
                        0.34193787 },
                    { 1117.6554, 513.731995, 690.049744, 0.311284542, -0.000482951524, 0.950316548,
                        0.000637001416,
                        0.999999881,
                        0.000299550826,
                        -0.950316489,
                        0.0005121227,
                        0.311284661 },
                    { 1097.02136, 516.646057, 672.053284, 0.717086315, -0.000579233747, 0.696984172,
                        0.000848573749,
                        0.999999762,
                        -4.19959251e-05,
                        -0.696983874,
                        0.000621560495,
                        0.717086613 },
                    { 1070.87354, 520.163757, 650.852112, 0.745195329, -0.000355211028, 0.666846275,
                        0.000508688041,
                        1,
                        -3.57805839e-05,
                        -0.666846216,
                        0.000365906453,
                        0.745195329 },
                    { 1043.948, 523.314392, 633.936401, 0.219824448, -0.000295151316, 0.975539386,
                        0.000345831941,
                        1.00000012,
                        0.000224637406,
                        -0.975539505,
                        0.000288039097,
                        0.219824523 },
                    { 1016.34662, 526.728943, 615.859863, 0.54693687, -0.000213547726, 0.83717376, 0.000244372262,
                        1.00000012,
                        9.5468029e-05,
                        -0.837174118,
                        0.000152374283,
                        0.54693687 },
                    { 990.744507, 529.762878, 599.741272, 0.586903036, -0.000283316913, 0.809657037,
                        0.000384088809,
                        1,
                        7.15329516e-05,
                        -0.809657156,
                        0.000269019976,
                        0.586903155 },
                    { 961.265137, 533.091492, 582.7052, 0.535726249, -0.00023421993, 0.844391763,
                        0.000289968739,
                        1.00000012,
                        9.34491327e-05,
                        -0.844391704,
                        0.00019479086,
                        0.53572619 },
                    { 930.976929, 536.669006, 565.474182, 0.610335886, -0.000274028687, 0.792142689,
                        0.000378834142,
                        0.99999994,
                        5.40469191e-05,
                        -0.79214257,
                        0.000267117313,
                        0.610335886 },
                    { 896.961609, 540.707825, 545.161133, 0.97163403, -0.000200502298, 0.236489564,
                        0.000219547554,
                        1.00000012,
                        -5.40905239e-05,
                        -0.236489668,
                        0.00010448035,
                        0.97163415 },
                    { 864.880432, 544.571655, 529.324951, -0.393361181, -0.000182042597, -0.919384181,
                        -8.76574268e-05,
                        1.00000012,
                        -0.000160515759,
                        0.919384122,
                        1.7454975e-05,
                        -0.393361092 },
                    { 827.110718, 547.802246, 516.802002, -0.783801377, -0.000104601568, 0.621011555,
                        -0.000145533966,
                        1.00000012,
                        -1.52406719e-05,
                        -0.621011555,
                        -0.000102298407,
                        -0.783801496 },
                    { 794.922729, 551.182617, 503.141174, -0.565116107, 2.10086e-05, 0.825011313,
                        -0.000295485283,
                        1,
                        -0.000227831071,
                        -0.825011253,
                        -0.000372540671,
                        -0.565116405 },
                    { 757.660706, 555.215576, 485.332916, 0.688464105, 7.09164524e-05, 0.725270331,
                        -0.000389727997,
                        0.99999994,
                        0.000272195815,
                        -0.725270391,
                        -0.00047003635,
                        0.688464165 },
                    { 726.415588, 558.353516, 473.587982, 0.677319765, 4.19590833e-05, 0.735688865,
                        -0.000375182077,
                        0.99999994,
                        0.000288398267,
                        -0.735688686,
                        -0.000471370789,
                        0.677319705 },
                    { 696.212891, 561.323181, 462.706177, 0.664411008, 8.11602004e-05, 0.747367322,
                        -0.00044734127,
                        0.999999881,
                        0.000289108255,
                        -0.747367382,
                        -0.000526428747,
                        0.664410949 },
                    { 634.220703, 567.258789, 442.715698, -0.0866643563, 6.59891666e-05, 0.996237576,
                        -0.000522864168,
                        1,
                        -0.00011170232,
                        -0.996237576,
                        -0.00053058943,
                        -0.0866643488 },
                    { 599.249084, 570.633362, 431.326813, 0.283148229, 5.39191606e-05, 0.959076166,
                        -0.00050755305,
                        1,
                        9.36420329e-05,
                        -0.959076047,
                        -0.000513270847,
                        0.283148229 },
                    { 564.458801, 573.80658, 422.500946, -0.12723425, 2.70247019e-05, 0.991872728,
                        -0.000469356513,
                        1.00000012,
                        -8.74365796e-05,
                        -0.991872728,
                        -0.000476660731,
                        -0.127234221 },
                    { 528.390747, 577.154358, 412.039001, 0.0380231366, 7.4097974e-05, 0.999276876,
                        -0.000542449707,
                        0.999999881,
                        -5.34866194e-05,
                        -0.999276817,
                        -0.000539999572,
                        0.0380231626 },
                    { 486.301727, 580.984375, 400.195801, 0.0966061801, 7.65296718e-05, 0.995322764,
                        -0.000546982221,
                        1.00000012,
                        -2.37750282e-05,
                        -0.995322764,
                        -0.000542118156,
                        0.0966061503 },
                    { 454.351715, 583.937134, 391.103912, 0.263189316, 9.68394088e-05, 0.964744151,
                        -0.000605386624,
                        0.999999881,
                        6.47898487e-05,
                        -0.964744151,
                        -0.00060108857,
                        0.263189346 },
                    { 414.828735, 587.48468, 380.003693, 0.302354246, 0.000115918148, 0.953195691,
                        -0.00068350893,
                        0.999999762,
                        9.52027985e-05,
                        -0.953195333,
                        -0.000680309488,
                        0.302354246 },
                    { 385.514557, 590.109863, 372.315887, 0.297546893, 0.000136391274, 0.954707146,
                        -0.000781866547,
                        0.999999702,
                        0.00010084817,
                        -0.954706967,
                        -0.000776460918,
                        0.297546953 },
                    { 344.908386, 593.769897, 360.952515, 0.429725051, 0.000135133785, 0.902959704,
                        -0.000748350169,
                        0.999999762,
                        0.000206487806,
                        -0.902959406,
                        -0.000764458557,
                        0.429725081 },
                    { 309.105835, 596.932007, 352.218506, 0.164579093, 0.000122672587, 0.986363947,
                        -0.000677977107,
                        0.999999881,
                        -1.12205162e-05,
                        -0.986363709,
                        -0.000666870154,
                        0.164579093 },
                    { 271.57074, 600.2229, 343.804535, 0.0210351292, 0.000117345415, 0.999778748,
                        -0.000675312709,
                        0.999999702,
                        -0.000103171893,
                        -0.999778509,
                        -0.000672989758,
                        0.021035172 },
                    { 233.048492, 603.599426, 336.459351, -0.224919766, 0.000100389865, 0.974377334,
                        -0.00050196232,
                        0.99999994,
                        -0.000218901943,
                        -0.974377215,
                        -0.000538338732,
                        -0.224919736 },
                    { 194.931915, 606.944641, 326.992004, 0.279151201, 0.000126730927, 0.960247099,
                        -0.000644981978,
                        0.999999642,
                        5.55211955e-05,
                        -0.960246861,
                        -0.000634841621,
                        0.279151201 },
                    { 159.499069, 610.030823, 316.471924, 0.615623057, 9.13088079e-05, 0.788040698,
                        -0.000406856474,
                        0.99999994,
                        0.000201973264,
                        -0.788040757,
                        -0.00044495266,
                        0.615623116 },
                    { 123.764824, 613.040039, 305.603912, 0.832146943, 7.59415125e-05, 0.554554999,
                        -0.000277922605,
                        1,
                        0.000280156033,
                        -0.554555118,
                        -0.000387237757,
                        0.832146943 },
                    { 89.8891296, 615.974121, 296.860931, 0.834346294, 5.06429642e-05, 0.551240981,
                        -0.000180725896,
                        1.00000024,
                        0.000181711774,
                        -0.551240861,
                        -0.000251225661,
                        0.834346175 },
                    { 50.7176704, 619.398804, 286.171204, 0.598496497, 2.78640182e-05, 0.801125348,
                        -0.000128632411,
                        1,
                        6.13260418e-05,
                        -0.801125526,
                        -0.000139761556,
                        0.598496497 },
                    { -20.6864548, 625.6297, 268.925079, -0.0699932575, -9.30120763e-08, 0.997547507,
                        3.05572303e-06,
                        1.00000012,
                        3.25448184e-07,
                        -0.997547746,
                        3.08054359e-06,
                        -0.0699933916 },
                    { -51.4404068, 628.295776, 259.929779, 0.125420257, -1.4659412e-05, 0.992103755, 7.1125025e-05,
                        1.00000024,
                        5.81482391e-06,
                        -0.992103815,
                        6.98378863e-05,
                        0.125420243 },
                    { -84.1943893, 631.138428, 251.123734, -0.0253250543, -5.20558497e-05, 0.999679327,
                        0.000208682119,
                        1.00000012,
                        5.73713041e-05,
                        -0.999679208,
                        0.000210077924,
                        -0.0253250487 },
                    { -114.439842, 633.746521, 239.776474, 0.716207206, -6.53803945e-05, 0.697887778,
                        0.000226416596,
                        1.00000012,
                        -0.000138667645,
                        -0.697887838,
                        0.000257326989,
                        0.716207266 },
                    { -151.143082, 636.997314, 227.178223, 0.603038251, -0.000101310325, 0.797712386,
                        0.000364504638,
                        0.99999994,
                        -0.000148563355,
                        -0.797712147,
                        0.000380360609,
                        0.603038251 },
                    { -192.922562, 640.596497, 212.194458, 0.387741506, -8.77627244e-05, 0.921768248,
                        0.000336479919,
                        0.99999994,
                        -4.63292017e-05,
                        -0.921768069,
                        0.000328120543,
                        0.387741506 },
                    { -232.949905, 644.224426, 198.678925, 0.395140588, -0.000129598324, 0.918620706,
                        0.000439105381,
                        1,
                        -4.77990834e-05,
                        -0.918620527,
                        0.000422257319,
                        0.395140588 },
                    { -271.045105, 647.648682, 186.221451, -0.0373768583, -0.000173058201, 0.999301255,
                        0.000524335774,
                        1.00000012,
                        0.000192822146,
                        -0.999301255,
                        0.000531177328,
                        -0.037376821 },
                    { -303.770874, 650.709167, 173.198456, 0.302316904, -0.000201498406, 0.953207374,
                        0.000571132579,
                        0.999999762,
                        3.02451663e-05,
                        -0.953207254,
                        0.000535268278,
                        0.302317023 },
                    { -327.920837, 652.90271, 159.809204, 0.896447718, -0.00020694088, 0.443149537,
                        0.000425469043,
                        0.99999994,
                        -0.000393700233,
                        -0.443149388,
                        0.00054147013,
                        0.896447718 },
                    { -355.638397, 655.677612, 146.253265, 0.955643415, -0.00025251531, 0.29452613, 0.000420249562,
                        0.999999881,
                        -0.0005061056,
                        -0.29452616,
                        0.000607448106,
                        0.955643415 },
                    { -388.896454, 659.184387, 128.977219, 0.582537949, -0.000321660424, 0.812803447,
                        0.000781224458,
                        0.999999821,
                        -0.000164138473,
                        -0.812803388,
                        0.000730613945,
                        0.582537889 },
                    { -420.22168, 661.814087, 114.102493, 0.25372535, -0.000497416942, 0.967276096, 0.0010899175,
                        0.999999404,
                        0.000228356439,
                        -0.967275739,
                        0.000996318297,
                        0.253725678 },
                    { -448.629883, 664.418152, 100.292122, 0.0649873465, -0.00041714852, 0.997886002,
                        0.000791441533,
                        0.999999702,
                        0.000366485299,
                        -0.997885883,
                        0.000765959325,
                        0.0649874955 },
                    { -483.702698, 667.863403, 81.5859985, 0.0372219011, -0.000480763614, 0.999307036,
                        0.000799431582,
                        0.999999642,
                        0.00045132704,
                        -0.999306738,
                        0.000782092684,
                        0.0372221805 },
                    { -508.653839, 670.413452, 64.9868774, 0.585820198, -0.000520795467, 0.810440838,
                        0.000926259032,
                        0.999999762,
                        -2.69169104e-05,
                        -0.81044054,
                        0.000766473881,
                        0.585820436 },
                    { -532.27063, 672.870178, 48.6560974, 0.564304769, -0.000550385739, 0.825566471,
                        0.000918919744,
                        0.999999583,
                        3.85603053e-05,
                        -0.825565994,
                        0.000736872433,
                        0.564304948 },
                    { -555.36438, 675.350037, 30.933897, 0.70645684, -0.000719130447, 0.707755804, 0.00113554113,
                        0.999999583,
                        -0.00011735977,
                        -0.707755148,
                        0.000886597845,
                        0.706457317 },
                    { -583.223999, 678.405396, 7.87678528, 0.695934713, -0.00083143235, 0.718104422, 0.00123468949,
                        0.999999225,
                        -3.87366163e-05,
                        -0.718104064,
                        0.000913601601,
                        0.695935071 },
                    { -604.813049, 680.918823, -11.5021067, 0.77651, -0.000868631003, 0.630104423, 0.00120122405,
                        0.999999344,
                        -0.00010178407,
                        -0.630103886,
                        0.000835948973,
                        0.776510417 },
                    { -628.335144, 683.66626, -34.4337502, 0.769348741, -0.000769409293, 0.638828635, 0.00100106304,
                        0.999999464,
                        -1.1731172e-06,
                        -0.638828337,
                        0.000640406972,
                        0.769349098 },
                    { -649.778198, 686.283813, -56.8538704, 0.750899792, -0.000766557408, 0.660415709, 0.00094750803,
                        0.999999702,
                        8.34023813e-05,
                        -0.66041559,
                        0.000563118723,
                        0.750900149 },
                    { -672.725769, 689.408875, -85.6478729, 0.930745959, -0.000939009013, 0.365665287, 0.00107806874,
                        0.999999583,
                        -0.000176119618,
                        -0.36566484,
                        0.000558132015,
                        0.930746377 },
                    { -695.915222, 692.621582, -116.767311, 0.905239165, -0.000986851403, 0.424901396, 0.00110641657,
                        0.999999523,
                        -3.45621083e-05,
                        -0.424901277,
                        0.00050142192,
                        0.905239582 },
                    { -716.495117, 695.374634, -146.153625, 0.714911342, -0.00106386596, 0.699214399, 0.00105873216,
                        0.999999344,
                        0.000439001073,
                        -0.699214339,
                        0.00042645348,
                        0.714911938 },
                    { -739.044678, 698.468201, -181.615112, 0.56885922, -0.00101310911, 0.822434425,
                        0.000787492259,
                        0.999999404,
                        0.000687183579,
                        -0.822434545,
                        0.000256734958,
                        0.568859518 },
                    { -756.385132, 701.131531, -213.783371, 0.706479669, -0.000707309926, 0.707733035,
                        0.000550677651,
                        0.99999994,
                        0.000449675543,
                        -0.707733095,
                        7.20479293e-05,
                        0.706480026 },
                    { -772.149902, 704.573181, -255.285797, 0.999037325, -3.96206451e-05, -0.0438665226,
                        5.51194971e-05,
                        0.99999994,
                        0.000352235511,
                        0.0438664779,
                        -0.00035429647,
                        0.999037325 },
                    { -783.95636, 706.955261, -286.630829, 0.99720329, 0.00116377545, -0.0747281462,
                        -0.00111156586,
                        0.999999046,
                        0.000740411459,
                        0.0747289658,
                        -0.000655269891,
                        0.997203648 },
                    { -796.736389, 709.657227, -323.629852, 0.995744109, 0.000966993452, -0.0921583623,
                        -0.000913683325,
                        0.999999464,
                        0.000620392151,
                        0.092158705,
                        -0.000533518963,
                        0.995744169 },
                    { -807.235535, 711.925232, -355.516937, 0.994169295, 0.00128216995, -0.10782481,
                        -0.00120603957,
                        0.999999046,
                        0.000771320192,
                        0.107825629,
                        -0.000636765093,
                        0.994169593 },
                    { -817.40332, 714.169922, -388.063995, 0.992566407, 0.0012104885, -0.121698543,
                        -0.00113081269,
                        0.999999225,
                        0.000723727164,
                        0.12169937,
                        -0.000580710534,
                        0.992566884 },
                    { -827.854126, 716.529907, -423.400452, 0.990831316, 0.00107120455, -0.135099858,
                        -0.000988833606,
                        0.999999285,
                        0.000676885888,
                        0.135100603,
                        -0.000537078187,
                        0.990831673 },
                    { -839.048645, 719.124329, -463.710999, 0.988960505, 0.000565253838, -0.148179576,
                        -0.000506333308,
                        0.999999821,
                        0.000435233989,
                        0.14817968,
                        -0.000355388212,
                        0.988960326 },
                    { -849.308228, 721.560486, -502.564728, 0.98608458, 0.000875025638, -0.16624248,
                        -0.000790778955,
                        0.999999523,
                        0.000572924502,
                        0.166242823,
                        -0.000433482928,
                        0.986084759 },
                    { -857.977173, 723.688477, -537.699158, 0.983568668, 0.000760784606, -0.180534109,
                        -0.000684706611,
                        0.999999642,
                        0.000483658718,
                        0.180534199,
                        -0.000352084549,
                        0.983568549 },
                    { -866.256897, 725.78833, -573.497375, 0.980991662, 0.000692078262, -0.194049031,
                        -0.000616900972,
                        0.999999762,
                        0.000447799626,
                        0.194049209,
                        -0.000319558283,
                        0.980991781 },
                    { -875.552795, 728.237366, -616.747681, 0.977796912, 0.000669729256, -0.209553719,
                        -0.000586050795,
                        0.999999702,
                        0.000461455813,
                        0.209553927,
                        -0.000328395516,
                        0.977797031 },
                    { -883.018494, 730.291199, -654.248413, 0.974775791, 0.000457748771, -0.223185703,
                        -0.000395315001,
                        1,
                        0.000324405235,
                        0.223185822,
                        -0.000227992612,
                        0.97477591 },
                    { -889.457336, 732.137451, -689.008728, 0.971783459, 0.000586544513, -0.235873818,
                        -0.000502878334,
                        0.999999762,
                        0.000414893555,
                        0.235874057,
                        -0.000284584181,
                        0.971783638 },
                    { -896.116089, 734.143616, -727.990784, 0.968403757, 0.000519487599, -0.249386743,
                        -0.000437891664,
                        0.999999881,
                        0.000382682716,
                        0.249386817,
                        -0.000261370791,
                        0.968403816 },
                    { -901.733887, 735.927063, -763.696899, 0.964986205, 0.000510374084, -0.262300283,
                        -0.000430136046,
                        0.999999762,
                        0.000363314175,
                        0.262300313,
                        -0.000237759377,
                        0.964986086 },
                    { -907.974365, 737.746033, -801.437378, -0.291653126, 0.000389567722, 0.956524193,
                        -0.000105516927,
                        0.999999881,
                        -0.000439444411,
                        -0.956524074,
                        -0.000229098019,
                        -0.291653007 },
                    { -913.047607, 739.543152, -839.767883, -0.340274155, 0.000366437656, 0.940326154,
                        -7.7965291e-05,
                        0.999999881,
                        -0.000417903007,
                        -0.940326333,
                        -0.000215517532,
                        -0.340274125 },
                    { -917.022949, 741.084656, -873.506653, -0.328568667, 0.000408043794, 0.944480181,
                        -5.57124877e-05,
                        1.00000012,
                        -0.000451413071,
                        -0.944480062,
                        -0.000200927752,
                        -0.328568548 },
                    { -920.831482, 742.691406, -909.700256, -0.316594511, 0.000403787941, 0.948561072,
                        -4.49248473e-05,
                        1,
                        -0.000440684205,
                        -0.948560894,
                        -0.000182128948,
                        -0.316594422 },
                    { -924.19574, 744.256897, -946.03363, -0.305017859, 0.000384245242, 0.952346623,
                        -4.57209026e-05,
                        0.999999762,
                        -0.000418108364,
                        -0.952346504,
                        -0.000171073392,
                        -0.305017769 },
                    { -927.094666, 745.769165, -982.216431, -0.294111758, 0.00033078526, 0.955771208,
                        -6.01206048e-05,
                        1.00000012,
                        -0.000364583771,
                        -0.955771029,
                        -0.000164679848,
                        -0.294111699 },
                    { -929.625488, 747.269165, -1019.1004, -0.282425016, 0.000368599925, 0.959289253,
                        -5.98966435e-05,
                        1.00000012,
                        -0.000401894387,
                        -0.959289432,
                        -0.000170961401,
                        -0.282425016 },
                    { -933.496521, 750.278625, -1096.48315, -0.258824348, 0.000285475893, 0.965924561,
                        -5.14329295e-05,
                        1.00000012,
                        -0.000309336523,
                        -0.965924323,
                        -0.000129728956,
                        -0.258824259 },
                    { -934.748535, 751.751709, -1136.09583, -0.246940956, 0.000267454685, 0.96903044,
                        -5.03149931e-05,
                        0.99999994,
                        -0.000288819982,
                        -0.96903044,
                        -0.000120078184,
                        -0.246940941 },
                    { -935.471252, 753.162537, -1175.31836, -0.236873776, 0.000134908682, 0.971540511,
                        -8.0442609e-05,
                        1.00000024,
                        -0.000158476993,
                        -0.971540451,
                        -0.000115677212,
                        -0.236873776 },
                    { -935.774048, 754.539734, -1214.62476, -0.225356728, 0.000135488153, 0.974276364,
                        -7.55949004e-05,
                        1,
                        -0.000156542796,
                        -0.974276304,
                        -0.000108922184,
                        -0.225356698 },
                    { -935.598999, 755.993774, -1257.30591, -0.212308094, 0.000197535599, 0.977202713,
                        -6.19910134e-05,
                        1,
                        -0.00021562395,
                        -0.977202833,
                        -0.000106358806,
                        -0.212308109 },
                    { -934.909851, 757.334229, -1297.8866, -0.200944722, 0.000179483555, 0.979602635,
                        -6.43431704e-05,
                        1.00000012,
                        -0.000196419132,
                        -0.979602516,
                        -0.000102499078,
                        -0.200944677 },
                    { -933.902466, 758.491699, -1334.01221, -0.190713659, 0.000140583346, 0.981645644,
                        -4.79773807e-05,
                        0.99999994,
                        -0.000152530498,
                        -0.981645763,
                        -7.61882693e-05,
                        -0.190713689 },
                    { -932.525635, 759.61615, -1369.71338, -0.18127276, 0.000111016045, 0.983432889,
                        -5.70034099e-05,
                        1.00000012,
                        -0.00012341117,
                        -0.983432889,
                        -7.84203512e-05,
                        -0.18127276 },
                    { -931.027649, 760.589111, -1401.37573, -0.172130093, 0.000164115903, 0.985074282,
                        -5.58154861e-05,
                        1,
                        -0.00017635517,
                        -0.985074282,
                        -8.53402453e-05,
                        -0.172130093 },
                    { -928.619385, 761.84259, -1443.14563, -0.160347596, 0.00020945385, 0.987060606,
                        -4.79965493e-05,
                        1.00000012,
                        -0.000219994952,
                        -0.987060666,
                        -8.26509204e-05,
                        -0.160347596 },
                    { -925.356018, 763.199402, -1489.66614, -0.147989213, 0.00016859216, 0.988989115,
                        -4.14605202e-05,
                        1.00000024,
                        -0.000176679707,
                        -0.988989055,
                        -6.71426969e-05,
                        -0.147989199 },
                    { -922.506958, 764.186218, -1524.4342, -0.139852554, 7.44673816e-05, 0.990172446,
                        -5.29114404e-05,
                        1.00000012,
                        -8.26867399e-05,
                        -0.990172327,
                        -6.395128e-05,
                        -0.139852509 },
                    { -919.9776, 764.974548, -1552.70801, -0.132406995, 8.37427433e-05, 0.9911955, -5.45581788e-05,
                        1.00000012,
                        -9.17726429e-05,
                        -0.99119544,
                        -6.62214807e-05,
                        -0.13240698 },
                    { -916.008484, 766.073364, -1592.82153, -0.122549027, 5.98313854e-05, 0.992462575,
                        -6.91266177e-05,
                        1.00000012,
                        -6.88190485e-05,
                        -0.992462516,
                        -7.70349361e-05,
                        -0.122549005 },
                    { -911.406372, 767.210388, -1635.17029, -0.110528462, 0.000123667633, 0.993872941,
                        -3.24147768e-05,
                        1.00000012,
                        -0.000128032407,
                        -0.993873,
                        -4.63628312e-05,
                        -0.110528462 },
                    { -906.424927, 768.299866, -1676.65759, -0.0995493904, 0.000162368902, 0.995032668,
                        -2.23190473e-05,
                        1.00000024,
                        -0.000165417398,
                        -0.995032549,
                        -3.86647953e-05,
                        -0.0995493308 },
                    { -900.61792, 769.432129, -1720.73486, -0.0890735239, 9.06128771e-05, 0.996025205,
                        -2.47284297e-05,
                        1.00000012,
                        -9.31851901e-05,
                        -0.996025026,
                        -3.29197901e-05,
                        -0.0890734643 },
                    { -895.779785, 770.299072, -1755.04504, -0.0801659897, 0.000141876852, 0.996781528,
                        -1.95121338e-05,
                        1,
                        -0.000143905141,
                        -0.996781528,
                        -3.09860334e-05,
                        -0.0801659524 },
                    { -890.736633, 771.137451, -1788.71655, -0.0717216283, 0.00014651689, 0.997424603,
                        -1.30053104e-05,
                        1.00000012,
                        -0.000147836152,
                        -0.997424781,
                        -2.35720872e-05,
                        -0.0717217028 },
                    { -884.721497, 772.067017, -1826.57141, -0.0625604913, 0.000124021186, 0.998041332,
                        -9.41518465e-06,
                        1.00000012,
                        -0.000124858387,
                        -0.998041093,
                        -1.71984575e-05,
                        -0.0625604317 },
                    { -878.03009, 773.029602, -1866.30408, -0.0528856702, 0.000144268823, 0.998600543,
                        -4.99000998e-06,
                        1,
                        -0.00014473575,
                        -0.998600543,
                        -1.26353279e-05,
                        -0.0528856404 },
                    { -870.600952, 774.020264, -1907.7887, -0.043925181, 6.27807676e-05, 0.999034822,
                        -1.61879889e-05,
                        1,
                        -6.35563483e-05,
                        -0.999034703,
                        -1.89625753e-05,
                        -0.0439251438 },
                    { -862.703064, 775.00116, -1949.41296, -0.0359535329, -3.6350626e-05, 0.999353468,
                        -4.30241344e-05,
                        1.00000012,
                        3.48244212e-05,
                        -0.999353528,
                        -4.17401097e-05,
                        -0.0359535217 },
                    { -856.205994, 775.774963, -1982.48535, -0.0270106029, 4.3258653e-05, 0.99963522,
                        -1.80455372e-05,
                        1.00000012,
                        -4.37675444e-05,
                        -0.99963522,
                        -1.92174921e-05,
                        -0.0270106178 },
                    { -849.226807, 776.566284, -2016.52136, -0.018384438, 0.000102164187, 0.999831021,
                        -1.42038709e-06,
                        1.00000012,
                        -0.00010221103,
                        -0.99983108,
                        -3.2946848e-06,
                        -0.018384425 },
                    { -841.612183, 777.387512, -2052.10254, -0.0101856068, 0.00010117756, 0.999948263,
                        2.99534804e-06,
                        1.00000012,
                        -0.000101155187,
                        -0.999948084,
                        1.97104509e-06,
                        -0.0101854857 },
                    { -834.081177, 778.161987, -2085.98975, -0.00236883201, 0.00010416779, 0.999997377,
                        8.12585131e-06,
                        1.00000012,
                        -0.00010415096,
                        -0.999997139,
                        7.88718989e-06,
                        -0.00236874237 },
                    { -825.337524, 779.032288, -2123.83032, 0.00579968188, 7.88640536e-05, 0.999983191,
                        5.84668305e-06,
                        1.00000012,
                        -7.89025507e-05,
                        -0.999983072,
                        6.30878321e-06,
                        0.00579975545 },
                    { -816.531677, 779.87561, -2160.62427, 0.0143715721, 8.84618421e-05, 0.999896765,
                        1.36754179e-05,
                        0.99999994,
                        -8.86728303e-05,
                        -0.999896705,
                        1.49499092e-05,
                        0.0143716009 },
                    { -808.322449, 780.632751, -2193.76123, 0.0218351595, 0.000105186547, 0.99976176, 2.0381176e-05,
                        1.00000012,
                        -0.000105655803,
                        -0.999761641,
                        2.26859556e-05,
                        0.0218351856 },
                    { -799.842651, 781.391357, -2226.93848, 0.0291464292, 0.000101272133, 0.999575317,
                        2.30980477e-05,
                        1,
                        -0.000101989681,
                        -0.999575138,
                        2.60627567e-05,
                        0.0291465279 },
                    { -790.466492, 782.206482, -2262.51172, 0.0369590409, 0.000100402081, 0.999316812,
                        2.67826963e-05,
                        1.00000012,
                        -0.000101462108,
                        -0.999316812,
                        3.0516554e-05,
                        0.0369590707 },
                    { -779.515564, 783.128235, -2302.58447, 0.0444088317, 1.22860538e-05, 0.999013424,
                        1.11096215e-05,
                        1,
                        -1.27877911e-05,
                        -0.999013484,
                        1.16690353e-05,
                        0.0444087759 },
                    { -766.238892, 784.216614, -2349.6084, 0.0545917861, 2.12692721e-05, 0.998508692,
                        1.78613645e-05,
                        1.00000012,
                        -2.22838898e-05,
                        -0.998508751,
                        1.90525425e-05,
                        0.0545918196 },
                    { -755.221558, 785.097107, -2387.35327, 0.0630929619, 5.4972581e-05, 0.998007655,
                        3.09677198e-05,
                        1.00000012,
                        -5.70420561e-05,
                        -0.998007715,
                        3.45095177e-05,
                        0.0630929992 },
                    { -744.814209, 785.911682, -2421.92847, 0.0699123666, 2.09080335e-05, 0.99755317, 2.87914518e-05,
                        1,
                        -2.29823672e-05,
                        -0.997553051,
                        3.03311426e-05,
                        0.0699123889 },
                    { -732.987915, 786.822021, -2460.23462, 0.0782905146, 3.59106016e-05, 0.996930778,
                        3.27002053e-05,
                        1.00000024,
                        -3.85953063e-05,
                        -0.996930659,
                        3.56275777e-05,
                        0.0782905668 },
                    { -724.244812, 787.48645, -2487.82153, 0.0837152898, 1.35167083e-05, 0.996489882,
                        3.17077902e-05,
                        1.00000024,
                        -1.62337146e-05,
                        -0.996489823,
                        3.29639915e-05,
                        0.0837152824 },
                    { -712.161499, 788.394348, -2525.15112, 0.0919170603, 4.50069056e-05, 0.99576664, 4.53056782e-05,
                        1.00000012,
                        -4.93811749e-05,
                        -0.995766819,
                        4.96513603e-05,
                        0.0919169635 },
                    { -700.63208, 789.250793, -2559.84766, 0.0991658941, 4.67970822e-05, 0.995070994,
                        5.00114438e-05,
                        1,
                        -5.20129761e-05,
                        -0.995070815,
                        5.49264441e-05,
                        0.0991659313 },
                    { -688.507202, 790.143372, -2595.4458, 0.106309213, 2.48521101e-05, 0.994333267, 4.1593019e-05,
                        1.00000012,
                        -2.94435104e-05,
                        -0.994333088,
                        4.4494016e-05,
                        0.106309257 },
                    { -677.716064, 790.932129, -2626.41504, 0.112301089, 4.06624258e-06, 0.993674338,
                        4.67181198e-05,
                        1.00000024,
                        -9.37385266e-06,
                        -0.993674278,
                        4.74819099e-05,
                        0.112301171 },
                    { -661.147766, 792.136353, -2672.76196, 0.121046558, -3.87684668e-05, 0.992646873,
                        4.66298443e-05,
                        1.00000024,
                        3.33710705e-05,
                        -0.992646933,
                        4.22485864e-05,
                        0.121046536 },
                    { -650.299255, 792.917236, -2702.4187, 0.127043292, -3.91624853e-05, 0.991897285,
                        5.11141807e-05,
                        1,
                        3.29355462e-05,
                        -0.991897047,
                        4.6520574e-05,
                        0.127043441 },
                    { -636.953857, 793.888062, -2738.20703, 0.134950444, 2.4976373e-06, 0.990852475,
                        5.92887154e-05,
                        1.00000012,
                        -1.05919062e-05,
                        -0.990852296,
                        6.01819484e-05,
                        0.134950519 },
                    { -625.80304, 794.694641, -2767.47656, 0.140918359, 2.34357708e-06, 0.990021169,
                        5.81572131e-05,
                        0.99999994,
                        -1.06441694e-05,
                        -0.99002111,
                        5.90751079e-05,
                        0.140918419 },
                    { -609.934875, 795.843689, -2808.24683, 0.149121091, -9.81008839e-07, 0.988818884,
                        7.69114849e-05,
                        1,
                        -1.06148382e-05,
                        -0.988818824,
                        7.76360612e-05,
                        0.149121165 },
                    { -596.520813, 796.818298, -2841.9397, 0.155711398, -1.56925016e-05, 0.987802565,
                        7.38024901e-05,
                        0.99999994,
                        4.24971495e-06,
                        -0.987802565,
                        7.22448895e-05,
                        0.155711398 },
                    { -581.16156, 797.938538, -2879.76562, 0.163714364, 8.46831244e-06, 0.986507773,
                        7.73600623e-05,
                        1.00000012,
                        -2.14256579e-05,
                        -0.986507893,
                        7.98279216e-05,
                        0.163714305 },
                    { -564.555969, 799.157471, -2919.69702, 0.171455994, -1.19820106e-05, 0.985191762,
                        6.99368466e-05,
                        0.99999994,
                        -9.71886038e-09,
                        -0.985191762,
                        6.89039953e-05,
                        0.171456054 },
                    { -549.835022, 800.245544, -2954.38867, 0.17863299, -2.20377638e-06, 0.983915627,
                        8.49410208e-05,
                        0.999999881,
                        -1.31808592e-05,
                        -0.983915687,
                        8.59268621e-05,
                        0.178633019 },
                    { -534.518799, 801.387268, -2989.75854, 0.185672954, -8.13554652e-06, 0.982611597,
                        8.97931241e-05,
                        1,
                        -8.68852294e-06,
                        -0.982611597,
                        8.98461076e-05,
                        0.185672984 },
                    { -517.875793, 802.640747, -3027.36377, 0.192298442, -5.95318779e-05, 0.981336534,
                        7.74198124e-05,
                        1.00000024,
                        4.54882975e-05,
                        -0.981336534,
                        6.72351016e-05,
                        0.192298442 },
                    { -505.16095, 803.606201, -3055.65942, 0.198414952, -3.87157379e-05, 0.980118036,
                        8.99969746e-05,
                        0.99999994,
                        2.12753075e-05,
                        -0.980118036,
                        8.39866043e-05,
                        0.198415026 },
                    { -489.37854, 804.817322, -3090.17065, 0.205657825, -2.55237974e-05, 0.978624046,
                        0.000103473212,
                        0.99999994,
                        4.33818786e-06,
                        -0.978623867,
                        0.000100370453,
                        0.205657929 },
                    { -472.174042, 806.154358, -3127.06177, 0.213247016, -1.79233721e-05, 0.976998448,
                        0.000108139218,
                        1.00000024,
                        -5.2673804e-06,
                        -0.976998448,
                        0.000106785999,
                        0.213247195 },
                    { -459.689178, 807.135559, -3153.38403, 0.218661129, -1.45432277e-05, 0.975800872,
                        0.000109349909,
                        1.00000012,
                        -9.60163652e-06,
                        -0.975800812,
                        0.000108804794,
                        0.218661129 },
                    { -443.6586, 808.412964, -3186.61035, 0.22487022, -5.370488e-05, 0.974388719,
                        0.000117799427,
                        1.00000024,
                        2.79276755e-05,
                        -0.974388719,
                        0.000108505192,
                        0.224870175 },
                    { -425.801788, 809.854675, -3223.00391, 0.232495636, -3.71742171e-05, 0.97259742, 0.000110223002,
                        1.00000012,
                        1.1870743e-05,
                        -0.97259748,
                        0.00010444966,
                        0.232495651 },
                    { -410.629547, 811.0979, -3253.37866, 0.238726884, -4.12646332e-05, 0.97108674, 0.000123883307,
                        1.00000012,
                        1.20338354e-05,
                        -0.97108674,
                        0.000117431977,
                        0.238726884 },
                    { -395.182648, 812.381836, -3283.81689, 0.244959667, -4.29833417e-05, 0.969533384,
                        0.000127933206,
                        1.00000012,
                        1.20103614e-05,
                        -0.969533205,
                        0.000121097954,
                        0.244959742 },
                    { -378.481567, 813.790344, -3316.19873, 0.251696676, -4.81715688e-05, 0.96780628, 0.000148038424,
                        1.00000012,
                        1.12761973e-05,
                        -0.96780616,
                        0.000140442018,
                        0.251696795 },
                    { -358.262756, 815.525085, -3354.62305, 0.258706838, -0.000117022908, 0.965955794,
                        0.000151448185,
                        0.99999994,
                        8.05871969e-05,
                        -0.965955734,
                        0.000125443417,
                        0.258706838 },
                    { -338.429718, 817.258545, -3391.5166, 0.27235806, -0.000901855819, 0.962195694,
                        -9.70294641e-05,
                        0.999999523,
                        0.000964742852,
                        -0.962195933,
                        -0.000356119854,
                        0.272357851 },
                    { -317.501556, 819.029785, -3427.94385, 0.306131631, -0.0014615379, 0.95198822,
                        -0.000259936467,
                        0.999998808,
                        0.00161883258,
                        -0.951989293,
                        -0.000743023586,
                        0.306131035 },
                    { -305.820618, 819.984253, -3446.96753, 0.328709871, -0.00140626484, 0.944429815,
                        -0.000264829607,
                        0.999998748,
                        0.00158118387,
                        -0.944430947,
                        -0.00076986436,
                        0.328709126 },
                    { -284.882996, 821.632629, -3478.7063, 0.367610931, -0.0012593196, 0.929978907,
                        -0.000251039339,
                        0.999998927,
                        0.00145336287,
                        -0.929979622,
                        -0.000767729944,
                        0.367610276 },
                    { -264.885071, 823.139038, -3506.479, 0.399955958, -0.00111077691, 0.916533709,
                        -0.000232006947,
                        0.999999166,
                        0.00131316355,
                        -0.916534185,
                        -0.000737839495,
                        0.399955481 },
                    { -240.095764, 824.934692, -3538.53467, 0.443673611, -0.000849947042, 0.896188021,
                        -0.00017821099,
                        0.999999464,
                        0.00103662023,
                        -0.896188378,
                        -0.000619616534,
                        0.443673313 },
                    { -217.340912, 826.527832, -3565.56299, 0.477634788, -0.000560081855, 0.878558218,
                        -0.000116804789,
                        0.999999762,
                        0.000700995501,
                        -0.878558517,
                        -0.000437448442,
                        0.477634549 },
                    { -193.863785, 828.119934, -3591.54004, 0.5096035, -0.000313808501, 0.860409319,
                        -6.0380371e-05,
                        1,
                        0.000400481425,
                        -0.860409439,
                        -0.000256035768,
                        0.5096035 },
                    { -171.514648, 829.588989, -3614.58081, 0.534283042, -0.00027834432, 0.845305622,
                        -5.81310451e-05,
                        1,
                        0.00036601632,
                        -0.845305562,
                        -0.000244672061,
                        0.534283102 },
                    { -149.306305, 831.015747, -3636.0249, 0.553144276, -0.00047124605, 0.833085537,
                        -0.000121651887,
                        1.00000012,
                        0.000646414817,
                        -0.833085537,
                        -0.000458892318,
                        0.553144217 },
                    { -128.293793, 832.334717, -3655.59229, 0.576264858, -0.000213612686, 0.817263067,
                        -5.27034354e-05,
                        1,
                        0.000298529427,
                        -0.817262948,
                        -0.00021510075,
                        0.576264858 },
                    { -104.295341, 833.818665, -3676.7229, 0.598525047, -8.47236224e-05, 0.801104069,
                        -1.87712467e-05,
                        1.00000012,
                        0.000119765828,
                        -0.80110395,
                        -8.67170747e-05,
                        0.598525286 },
                    { -77.7172089, 835.421814, -3698.83228, 0.619683921, -2.82795336e-05, 0.784851611,
                        -6.22904008e-06,
                        1.00000012,
                        4.09479544e-05,
                        -0.784851611,
                        -3.02672543e-05,
                        0.619683623 },
                    { -53.2294655, 836.872803, -3718.22876, 0.638408005, 6.59141588e-05, 0.769698203,
                        2.19948506e-05,
                        1,
                        -0.00010387972,
                        -0.769698143,
                        8.32476799e-05,
                        0.638408065 },
                    { -24.58564, 838.536316, -3739.69263, 0.655678272, 1.08106433e-05, 0.755040348,
                        -1.10980636e-06,
                        1,
                        -1.33705325e-05,
                        -0.755040407,
                        7.91165803e-06,
                        0.655678213 },
                    { 0.0821428299, 839.948669, -3757.46753, 0.672143817, 0.000143942365, 0.74042058, 4.47447746e-05,
                        1,
                        -0.000235021929,
                        -0.740420461,
                        0.00019110796,
                        0.672143936 },
                    { 30.2753525, 841.647034, -3778.14746, 0.688182652, 0.000153234592, 0.725537598,
                        4.60293668e-05,
                        1,
                        -0.000254874467,
                        -0.725537419,
                        0.000208790007,
                        0.688182831 },
                    { 59.2187233, 843.249573, -3797.08862, 0.702141106, 0.000162185592, 0.712037802,
                        4.81334646e-05,
                        0.99999994,
                        -0.00027525,
                        -0.712037861,
                        0.000227520592,
                        0.702141047 },
                    { 95.6203156, 845.233826, -3819.84375, 0.718505681, 0.000207259975, 0.695521057,
                        6.69114306e-05,
                        1,
                        -0.000367127068,
                        -0.695520997,
                        0.00031031511,
                        0.718505681 },
                    { 126.23526, 846.875732, -3838.07959, 0.729631543, 0.000139254189, 0.683840573, 4.138433e-05,
                        1,
                        -0.000247803546,
                        -0.683840513,
                        0.000209107035,
                        0.729631603 },
                    { 183.250412, 849.883667, -3870.37695, 0.749617577, 0.000237765285, 0.661871135,
                        8.40098946e-05,
                        1,
                        -0.000454365334,
                        -0.661871195,
                        0.000396200427,
                        0.749617636 },
                    { 216.44696, 851.607056, -3888.24072, 0.75948137, 0.000259291875, 0.650529087,
                        9.69829707e-05,
                        1.00000012,
                        -0.000511815655,
                        -0.650529087,
                        0.000451796746,
                        0.759481251 },
                    { 241.318527, 852.885803, -3901.22021, 0.765988171, 0.000260567176, 0.64285475, 9.97522438e-05,
                        1.00000012,
                        -0.000524226751,
                        -0.64285475,
                        0.000465690711,
                        0.765988231 },
                    { 279.134552, 854.810181, -3920.35498, 0.774396777, 0.00019798358, 0.632700205,
                        7.52918859e-05,
                        1,
                        -0.000405066938,
                        -0.632700264,
                        0.000361330691,
                        0.774396658 },
                    { 305.67395, 856.143555, -3933.41162, 0.77961725, 0.000205518343, 0.626256347, 7.7880366e-05,
                        0.99999994,
                        -0.000425134203,
                        -0.626256347,
                        0.0003802274,
                        0.779617131 },
                    { 336.926392, 857.711548, -3948.46094, 0.785763562, 0.000241989866, 0.618526876,
                        9.75958392e-05,
                        0.99999994,
                        -0.00051523163,
                        -0.618526876,
                        0.000465228251,
                        0.785763621 },
                    { 371.789856, 859.442017, -3964.82788, 0.791469336, 0.000238189838, 0.611208975,
                        9.86764935e-05,
                        1.00000012,
                        -0.000517503242,
                        -0.611208975,
                        0.000469915743,
                        0.791469395 },
                    { 406.049286, 861.129211, -3980.54541, 0.796328604, 0.000205321237, 0.604864359,
                        8.71293742e-05,
                        1.00000024,
                        -0.000454161549,
                        -0.604864359,
                        0.000414362963,
                        0.796328545 },
                    { 440.792633, 862.827271, -3996.16284, 0.80052799, 0.00022758283, 0.599295378,
                        9.85518127e-05,
                        0.99999994,
                        -0.000511422812,
                        -0.599295378,
                        0.000468469982,
                        0.800527811 },
                    { 471.891541, 864.335876, -4009.88867, 0.803265452, 0.000235938249, 0.595621288, 9.626869e-05,
                        1.00000012,
                        -0.000525976939,
                        -0.595621288,
                        0.000479851849,
                        0.803265631 },
                    { 509.188477, 866.136475, -4026.13696, 0.806698442, 0.000189417697, 0.590963244,
                        8.21572467e-05,
                        1,
                        -0.000432677218,
                        -0.590963304,
                        0.000397592987,
                        0.806698322 },
                    { 545.69458, 867.888062, -4041.81494, 0.809182227, 0.000210337457, 0.587557852,
                        9.24921842e-05,
                        1.00000012,
                        -0.000485370227,
                        -0.587557852,
                        0.000447105966,
                        0.809182167 },
                    { 577.881165, 869.423462, -4055.49585, 0.810799718, 0.000186702659, 0.585323632,
                        8.17241526e-05,
                        1,
                        -0.000432197266,
                        -0.585323572,
                        0.000398263306,
                        0.810799718 },
                    { 611.44989, 871.020813, -4069.66553, 0.812131464, 0.00016629757, 0.583474398,
                        7.47324812e-05,
                        1,
                        -0.000389051915,
                        -0.583474338,
                        0.0003595741,
                        0.812131584 },
                    { 649.299744, 872.812134, -4085.5542, 0.812964141, 0.000185676894, 0.582313776,
                        8.40218418e-05,
                        1,
                        -0.00043616473,
                        -0.582313836,
                        0.000403515354,
                        0.812964082 },
                    { 699.567078, 875.183533, -4106.59424, 0.813190699, 0.000178415212, 0.581997275,
                        8.22598304e-05,
                        1,
                        -0.000421508274,
                        -0.581997275,
                        0.000390650966,
                        0.813190818 },
                    { 719.096252, 876.100891, -4114.77051, 0.812969387, 0.000156523267, 0.582306385,
                        7.06505161e-05,
                        1,
                        -0.000367447268,
                        -0.582306385,
                        0.000339856779,
                        0.812969267 },
                    { 751.010071, 877.595886, -4128.16113, 0.812233388, 0.000128958825, 0.583332896,
                        5.58614556e-05,
                        1.00000012,
                        -0.000298869214,
                        -0.583332837,
                        0.000275340542,
                        0.81223321 },
                    { 788.886597, 879.371826, -4144.13965, 0.810843587, 0.000107630542, 0.585262775,
                        4.10819848e-05,
                        1.00000012,
                        -0.000240848865,
                        -0.585262775,
                        0.000219337671,
                        0.810843885 },
                    { 854.981018, 882.45813, -4172.396, 0.807007492, 4.21361328e-05, 0.590541124,
                        5.05293428e-06,
                        1.00000012,
                        -7.82837233e-05,
                        -0.590541065,
                        6.61580489e-05,
                        0.807007611 },
                    { 887.385559, 883.969543, -4186.4707, 0.804078817, 2.60513079e-05, 0.594522774,
                        -1.80649477e-06,
                        1,
                        -4.13688176e-05,
                        -0.594522715,
                        3.21904772e-05,
                        0.804078877 },
                    { 919.153931, 885.451782, -4200.46973, 0.800829053, 5.456905e-06, 0.598893046,
                        -1.13437518e-05,
                        1.00000012,
                        6.0490479e-06,
                        -0.598892987,
                        -1.16365254e-05,
                        0.800829113 },
                    { 947.852417, 886.790649, -4213.31006, 0.797412932, -1.11551162e-05, 0.603434086,
                        -2.31838167e-05,
                        1,
                        4.91261126e-05,
                        -0.603434026,
                        -5.31622172e-05,
                        0.797412932 },
                    { 976.390686, 888.12262, -4226.30566, 0.793812335, -4.17319934e-05, 0.608163059,
                        -4.04772327e-05,
                        1.00000024,
                        0.000121429541,
                        -0.608163118,
                        -0.000121006866,
                        0.793812215 },
                    { 1006.36371, 889.523438, -4240.19922, 0.789271593, -5.7399433e-05, 0.614044249,
                        -4.66765268e-05,
                        1.00000012,
                        0.000153455854,
                        -0.614044249,
                        -0.000149775587,
                        0.789271772 },
                    { 1042.95825, 891.236816, -4257.54834, 0.782536745, -7.18655574e-05, 0.622604489,
                        -5.42255439e-05,
                        1.00000012,
                        0.000183581476,
                        -0.622604549,
                        -0.000177422582,
                        0.782536685 },
                    { 1077.89587, 892.876404, -4274.58643, 0.775190175, -7.00268283e-05, 0.631727815,
                        -4.97322362e-05,
                        1,
                        0.000171869469,
                        -0.631727755,
                        -0.000164643003,
                        0.775190413 },
                    { 1108.41699, 894.313782, -4289.92432, 0.76843524, -0.000101160367, 0.639927745,
                        -6.59673678e-05,
                        1.00000024,
                        0.000237282264,
                        -0.639927745,
                        -0.000224542382,
                        0.768435299 },
                    { 1141.82812, 895.8927, -4307.26074, 0.760596514, -0.000136873306, 0.649224877,
                        -8.25459501e-05,
                        1,
                        0.000307525159,
                        -0.649224818,
                        -0.000287496485,
                        0.760596573 },
                    { 1169.59058, 897.209412, -4322.10449, 0.752772033, -0.000171720181, 0.658281326,
                        -0.000100257981,
                        1.00000012,
                        0.000375482225,
                        -0.658281267,
                        -0.000348644593,
                        0.752772033 },
                    { 1200.04858, 898.659912, -4338.86816, 0.742017984, -0.000161890523, 0.670380056,
                        -9.50622925e-05,
                        1.00000024,
                        0.000346695626,
                        -0.670380116,
                        -0.000320978026,
                        0.742017925 },
                    { 1233.36389, 900.256165, -4357.95557, 0.729775846, -0.000172494212, 0.683686376,
                        -9.8771372e-05,
                        1,
                        0.000357727811,
                        -0.683686435,
                        -0.000328592811,
                        0.729775786 },
                    { 1264.87695, 901.776978, -4376.81396, 0.717482209, -0.000178943112, 0.696576953,
                        -9.78527532e-05,
                        1.00000012,
                        0.000357683835,
                        -0.696577013,
                        -0.000324794819,
                        0.717481911 },
                    { 1288.06042, 902.902649, -4391.2085, 0.707072258, -0.000207795951, 0.70714128,
                        -0.000111767898,
                        1,
                        0.000405610219,
                        -0.70714128,
                        -0.000365825952,
                        0.707072258 },
                    { 1308.60449, 903.905396, -4404.3584, 0.696650863, -0.000199123358, 0.717410386,
                        -0.000107096581,
                        0.999999881,
                        0.000381550868,
                        -0.717410445,
                        -0.000342645595,
                        0.696650624 },
                    { 1337.19482, 905.311768, -4423.3999, 0.681374073, -0.000247864577, 0.731935441,
                        -0.000130545552,
                        1,
                        0.000460171665,
                        -0.731935501,
                        -0.000409096188,
                        0.681373954 },
                    { 1365.53333, 906.718689, -4443.19189, 0.664763749, -0.000245678326, 0.747053683,
                        -0.000126352286,
                        0.99999994,
                        0.000441286422,
                        -0.747053623,
                        -0.000387745822,
                        0.664763629 },
                    { 1392.85974, 908.090454, -4463.29736, 0.64812386, -0.000320499617, 0.761534691,
                        -0.000156475115,
                        0.999999762,
                        0.00055404607,
                        -0.76153475,
                        -0.000478246831,
                        0.64812392 },
                    { 1415.17139, 909.220337, -4480.45801, 0.632089317, -0.000398701901, 0.774895549,
                        -0.000192218897,
                        0.99999994,
                        0.000671311631,
                        -0.774895549,
                        -0.000573265483,
                        0.632089198 },
                    { 1444.77722, 910.737854, -4504.37842, 0.6067909, -0.000332979922, 0.794861436,
                        -0.000165675039,
                        1.00000012,
                        0.000545380171,
                        -0.794861615,
                        -0.00046262148,
                        0.606790662 },
                    { 1469.52258, 912.02478, -4525.57764, 0.583190918, -0.000243213421, 0.812335074,
                        -0.000127393054,
                        0.99999994,
                        0.000390870176,
                        -0.812335074,
                        -0.000331442454,
                        0.583190918 },
                    { 1497.49341, 913.505005, -4551.13184, 0.554777324, -0.000249795499, 0.831998944,
                        -0.000131867855,
                        1.00000012,
                        0.000388158311,
                        -0.831998885,
                        -0.000325049099,
                        0.554777265 },
                    { 1523.61023, 914.914734, -4576.8042, 0.527259886, -0.000415868039, 0.849703908,
                        -0.000200156777,
                        0.999999821,
                        0.000613623473,
                        -0.849703968,
                        -0.000493613654,
                        0.527259827 },
                    { 1548.33667, 916.273804, -4602.74512, 0.494894385, -0.000300740474, 0.868953168,
                        -0.000154954876,
                        1,
                        0.000434334041,
                        -0.868953228,
                        -0.000349596929,
                        0.494894266 },
                    { 1573.35168, 917.684875, -4631.10742, 0.459373176, -0.000289246353, 0.888243377,
                        -0.000153964706,
                        1,
                        0.0004052601,
                        -0.888243318,
                        -0.000322918087,
                        0.459373116 },
                    { 1592.46289, 918.789307, -4654.47168, 0.430029184, -0.000317154132, 0.902815044,
                        -0.000166704238,
                        1,
                        0.000430692045,
                        -0.902814984,
                        -0.000335702673,
                        0.430029064 },
                    { 1608.43945, 919.735901, -4675.46777, 0.40640527, -0.000462957949, 0.913692951,
                        -0.000213533116,
                        0.999999881,
                        0.000601658714,
                        -0.913692772,
                        -0.000439610652,
                        0.4064053 },
                    { 1627.29834, 920.875854, -4701.86719, 0.372174025, -0.000507800723, 0.928162873,
                        -0.000237750995,
                        0.999999821,
                        0.000642426196,
                        -0.928162813,
                        -0.000459762465,
                        0.372173876 },
                    { 1643.53064, 921.886536, -4726.22412, 0.336801052, -0.00036632843, 0.941575825,
                        -0.000204924858,
                        0.999999821,
                        0.000462368014,
                        -0.941575766,
                        -0.000348671747,
                        0.336801052 },
                    { 1659.54993, 922.918823, -4752.28613, 0.300092578, -0.000228332327, 0.953910172,
                        -0.00016299577,
                        1.00000012,
                        0.000290643657,
                        -0.953910053,
                        -0.00024269821,
                        0.300092578 },
                    { 1670.69653, 923.660583, -4771.82666, 0.273203135, -0.000177243375, 0.961956501,
                        -0.000151849381,
                        1.00000036,
                        0.000227364129,
                        -0.961956322,
                        -0.000208159108,
                        0.273203194 },
                    { 1684.21985, 924.587219, -4797.47266, 0.239791125, -0.000209957056, 0.97082454,
                        -0.000166282844,
                        1.00000012,
                        0.00025734157,
                        -0.970824659,
                        -0.000223136478,
                        0.239790976 },
                    { 1696.64294, 925.483826, -4823.20654, 0.206656411, -0.00023621133, 0.978413582,
                        -0.000178646267,
                        0.999999881,
                        0.00027914744,
                        -0.978413522,
                        -0.000232480001,
                        0.206656396 },
                    { 1708.2561, 926.353821, -4849.44434, 0.171428099, -0.00017172136, 0.98519659,
                        -0.000178410293,
                        1,
                        0.000205341494,
                        -0.985196531,
                        -0.000210968283,
                        0.171428025 },
                    { 1718.53809, 927.160095, -4874.68457, 0.1361489, 0.000357693032, 0.990688264,
                        6.14457094e-05,
                        1,
                        -0.000369496032,
                        -0.990688384,
                        0.000111182417,
                        0.136148855 },
                    { 1727.29822, 927.900757, -4898.40869, 0.112426504, 0.000487556681, 0.993659973,
                        0.000130643821,
                        1.00000012,
                        -0.000505454314,
                        -0.993660092,
                        0.000186644786,
                        0.112426452 },
                    { 1735.00952, 928.599731, -4920.89453, 0.093263939, 0.000503508258, 0.995641291, 0.00014187528,
                        0.99999994,
                        -0.000518999354,
                        -0.99564141,
                        0.00018965987,
                        0.0932639465 },
                    { 1741.98169, 929.278442, -4942.82422, 0.0787576213, 0.000369781716, 0.996893823,
                        0.000116828094,
                        1.00000012,
                        -0.000380175392,
                        -0.996893823,
                        0.000146406353,
                        0.0787575394 },
                    { 1749.62378, 930.060974, -4968.03516, 0.0593522638, 0.000477211201, 0.998237073,
                        0.000134838861,
                        0.99999994,
                        -0.000486067613,
                        -0.998237133,
                        0.000163454053,
                        0.0593521744 },

                }

                local sucess, porta = pcall(function()
                    return game:GetService("Workspace").Plane.BottomDoor.Door.Root
                end)

                if not sucess then
                    return false
                end

                for i, v in pairs(cargo_poses) do
                    if (Vector3.new(unpack(v)) - porta.Position).Magnitude < 25 then
                        return true
                    end
                end
            end

            tab_Auto:CreateButton("Auto Cargo Plane", function() --Sim+
                if not main.getCar() then carro() end
                if cargo_plane_pode() and (main.is_opened("Cargo plane") == "aberto" or main.is_opened("Cargo plane") == "roubando") then else
                    notificar("MACRO X", "Cargo Plane Not Map!", 3, 3)
                    return
                end

                notificar("MACRO X", "Auto Cargo Plane Enabled!", 1, 3)
                status_auto("Teleporting Cargo Plane...")
                main.Tp3(
                    function()
                        return game:GetService("Workspace").Plane.BottomDoor.Door.Root.Position
                    end,
                    true
                )

                for i = 1, 3 do ROBBERIES_ALREADY['Cargo Plane'] = true end
                main.noclip(true)

                local sucess, Root = pcall(function()
                    return game:GetService("Workspace").Plane.BottomDoor.Door.Root
                end)
                if sucess then
                    repeat
                        for i, v in pairs(main.specs("Inspect Crate")) do
                            v.Duration = 0
                            v:Callback(true)
                        end
                        speaker.Character:PivotTo(CFrame.new(Root.Position + Vector3.new(0, 2.5, 0)))
                        task.wait()
                    until main.bag() or main.is_opened("cargo plane") == "fechado" or getHumanoid().Health == 0
                    if getHumanoid().Health == 0 then
                        status_cooldown("Your dead, Countdown...", 5)
                        return
                    end
                else
                    return
                end

                ROBBERIES_ALREADY['Cargo Plane'] = true

                status_auto("Teleporting Sell Cargo Plane...")
                main.Tp2(Vector3.new(-341.9916687011719, 22.63744354248047, 2053.140869140625))
                main.noclip(false)
                wait(1)

                status_auto("")
            end, "cargo plane auto")

            function trem_teto(root) --sexo
                local poses = {
                    { 2178.6167, 24.9572773, -3450.35229, -0.837484539, 4.52282839e-05, -0.546460986, -0.0213529132,
                        0.999233544,
                        0.0328073353,
                        0.546043634,
                        0.0391441695,
                        -0.836841702 },
                    { 2186.59546, 24.732193, -3438.09253, -0.837831199, 0.000571462151, -0.545929074,
                        -0.00033528544,
                        0.999998748,
                        0.00156132749,
                        0.545929253,
                        0.00149117096,
                        -0.837829947 },
                    { 2195.79785, 25.0881443, -3424.12817, -0.839030027, -0.0856733397, -0.537297547, -0.116648182,
                        0.992887199,
                        0.0238366351,
                        0.531433702,
                        0.0826744363,
                        -0.843055844 },
                    { 2200.11279, 24.9406872, -3417.39502, -0.84330231, -0.0299618524, -0.536603689, -0.0488586351,
                        0.99858433,
                        0.021026995,
                        0.535214007,
                        0.043949835,
                        -0.843572378 },
                    { 2205.58984, 24.9797878, -3408.6377, -0.843022346, -0.0427658334, -0.536175728, -0.0617462844,
                        0.997938693,
                        0.017486468,
                        0.534322619,
                        0.0478483401,
                        -0.843925238 },
                    { 2212.18726, 24.9165211, -3398.6582, -0.837477982, 0.105294481, -0.536231041, 0.12526992,
                        0.992122352,
                        -0.000831328274,
                        0.531919241,
                        -0.0678698346,
                        -0.844070852 },
                    { 2220.17822, 24.6147804, -3386.51831, -0.828064919, 0.160916194, -0.53704232, 0.190277711,
                        0.981729984,
                        0.000770811574,
                        0.527354598,
                        -0.101548903,
                        -0.843554914 },
                    { 2226.09839, 24.3788605, -3377.53613, -0.839149714, -0.0258463304, -0.543286085, -0.0256082397,
                        0.999640048,
                        -0.00800292939,
                        0.54329735,
                        0.00719694421,
                        -0.839509487 },
                    { 2232.38525, 25.3189144, -3367.54517, -0.835265398, -0.0901517794, -0.542406023, -0.109665938,
                        0.993961692,
                        0.00367390877,
                        0.538799644,
                        0.0625521541,
                        -0.840108454 },
                    { 2239.93823, 24.6440582, -3355.97559, -0.839240313, -0.0043111383, -0.543743551, -0.0144765768,
                        0.999791265,
                        0.0144168856,
                        0.543567896,
                        0.0199707765,
                        -0.8391276 },
                    { 2248.66748, 24.7289162, -3342.70337, -0.838335812, -0.00806337688, -0.54509455, -0.00810871273,
                        0.999964416,
                        -0.00232118531,
                        0.545093894,
                        0.00247408263,
                        -0.838371336 },
                    { 2257.76001, 25.402441, -3328.29395, -0.821000516, -0.168354973, -0.54554081, -0.193546817,
                        0.981023967,
                        -0.0114716059,
                        0.537119865,
                        0.0961694866,
                        -0.838005781 },
                    { 2266.87329, 24.4370327, -3314.32788, -0.811212122, 0.182931721, -0.555401564, 0.257677466,
                        0.964446127,
                        -0.058702182,
                        0.52491641,
                        -0.190734401,
                        -0.829507768 },
                    { 2277.72681, 24.7909126, -3298.07568, -0.823173165, 0.13288343, -0.552021623, 0.161108032,
                        0.986933172,
                        -0.0026679216,
                        0.544453919,
                        -0.0911312774,
                        -0.833825529 },
                    { 2286.77319, 25.3495216, -3284.14014, -0.826612473, -0.115130104, -0.550869226, -0.130422309,
                        0.991391957,
                        -0.0114915716,
                        0.547450304,
                        0.0623465516,
                        -0.834512472 },
                    { 2296.04224, 25.2701797, -3269.79883, -0.821479082, -0.146910027, -0.550989628, -0.176103517,
                        0.984371662,
                        9.31040486e-05,
                        0.542364895,
                        0.097107701,
                        -0.834512055 },
                    { 2304.021, 25.1265507, -3257.63306, -0.827568233, -0.131136283, -0.545833409, -0.128839955,
                        0.990746319,
                        -0.0426850505,
                        0.546379983,
                        0.0350003652,
                        -0.836805761 },
                    { 2314.45483, 25.0317116, -3241.75317, -0.817201436, -0.117476054, -0.564252794, -0.148439631,
                        0.988879561,
                        0.00910124276,
                        0.556908906,
                        0.0911950171,
                        -0.825551927 },
                    { 2323.85083, 24.8862896, -3227.59863, -0.818616033, -0.10656368, -0.564368606, -0.13483426,
                        0.990831792,
                        0.00848879851,
                        0.558289766,
                        0.0830452964,
                        -0.825479269 },
                    { 2331.65601, 24.887434, -3215.94214, -0.822084904, -0.077017121, -0.564131916, -0.0996790975,
                        0.99497503,
                        0.00942078792,
                        0.560571611,
                        0.0639768466,
                        -0.825630963 },
                    { 2344.10815, 24.438345, -3197.54321, -0.825753987, -0.0255167931, -0.563453019, -0.0434768125,
                        0.998883486,
                        0.0184804201,
                        0.562352359,
                        0.0397574194,
                        -0.825941384 },
                    { 2354.83203, 24.2091312, -3181.47461, -0.824280739, -0.0492422394, -0.564035833, -0.0732612833,
                        0.997111976,
                        0.0200126301,
                        0.561421454,
                        0.0578180179,
                        -0.82550776 },
                    { 2365.59131, 23.5339108, -3165.66821, -0.825950444, -0.0177574903, -0.563463032, -0.0343748368,
                        0.999230325,
                        0.01889758,
                        0.562693775,
                        0.0349774137,
                        -0.825925112 },
                    { 2377.52124, 23.0981731, -3148.03613, -0.850458443, 0.0227174144, -0.525551438, 0.0154746892,
                        0.99971509,
                        0.018172076,
                        0.525814533,
                        0.00732185133,
                        -0.850567758 },
                    { 2387.49292, 22.7399635, -3131.85474, -0.858042598, 0.0114025921, -0.513451874, 0.00210270588,
                        0.999823093,
                        0.0186898988,
                        0.513574183,
                        0.0149570918,
                        -0.857914805 },
                    { 2401.86499, 22.2893696, -3107.81641, -0.855782628, 0.0275947656, -0.516599059, 0.0487446673,
                        0.998434901,
                        -0.0274163559,
                        0.51503402,
                        -0.0486438908,
                        -0.85578835 },
                    { 2414.49414, 21.8100891, -3087.26099, -0.831929147, -0.0262146275, -0.55426228, -0.0454726852,
                        0.998744488,
                        0.0210159346,
                        0.553015471,
                        0.0426875614,
                        -0.832076728 },
                    { 2428.12134, 21.6867161, -3067.20728, -0.809094429, -0.063209787, -0.584269345, -0.0733978078,
                        0.997283161,
                        -0.00625103991,
                        0.583077133,
                        0.0378264114,
                        -0.811535716 },
                    { 2441.59717, 20.8079453, -3048.61133, -0.807181597, 0.0243728496, -0.589799762, -0.0073233135,
                        0.998656929,
                        0.0512908958,
                        0.590257764,
                        0.0457203574,
                        -0.805918992 },
                    { 2457.22729, 20.3086262, -3026.06885, -0.862062454, 0.0658183843, -0.502510011, 0.0646871328,
                        0.997710943,
                        0.0197078232,
                        0.502656877,
                        -0.0155165559,
                        -0.864346743 },
                    { 2467.99048, 19.8739586, -3007.55518, -0.873746753, 0.0494159348, -0.483864307, 0.0716515481,
                        0.997048914,
                        -0.0275597963,
                        0.481074482,
                        -0.0587499067,
                        -0.874708951 },
                    { 2478.80371, 20.203537, -2987.85718, -0.877544045, -0.0479711443, -0.477090389, -0.0638107061,
                        0.997816503,
                        0.0170414392,
                        0.475231171,
                        0.04539809,
                        -0.878688991 },
                    { 2491.10742, 19.5061798, -2965.28418, -0.878791332, 0.0355572402, -0.475879639, 0.0319682769,
                        0.999366581,
                        0.01563688,
                        0.476134211,
                        -0.00147149677,
                        -0.879371405 },
                    { 2500.37988, 20.0237617, -2952.98657, -0.65186727, 0.368319929, -0.662879705, 0.487131953,
                        0.873306394,
                        0.0062013776,
                        0.581181169,
                        -0.318867415,
                        -0.748700202 },
                    { 2514.56104, 20.4976788, -2938.08325, -0.754649758, -0.0713914931, -0.652232349, -0.0166686065,
                        0.995828032,
                        -0.0897144899,
                        0.655916095,
                        -0.0568312109,
                        -0.752691388 },
                    { 2527.27393, 21.0199165, -2914.65674, -0.856214941, -0.252566159, -0.450673163, -0.308891863,
                        0.94952172,
                        0.0547198802,
                        0.414103568,
                        0.186061248,
                        -0.891010344 },
                    { 2535.37671, 20.5898743, -2894.36938, -0.976517677, -0.147234485, -0.157274455, -0.154706731,
                        0.987293065,
                        0.0363076665,
                        0.149930239,
                        0.0597864948,
                        -0.986887276 },
                    { 2540.56055, 20.4958248, -2868.47314, -0.975354791, -0.203016266, -0.0864141583, -0.210903823,
                        0.972899556,
                        0.0947948769,
                        0.06482739,
                        0.110683717,
                        -0.991739154 },
                    { 2542.8689, 19.823019, -2846.63306, -0.987156332, -0.0797548965, -0.138424963, -0.0763778687,
                        0.99664104,
                        -0.0295474175,
                        0.140316546,
                        -0.0185953174,
                        -0.98993206 },
                    { 2545.26636, 19.7699871, -2826.21045, -0.985671639, 0.0725636408, -0.152269468, 0.0736604929,
                        0.997282147,
                        -0.00156717631,
                        0.151741907,
                        -0.0127609661,
                        -0.988337755 },
                    { 2549.73315, 19.5753174, -2796.82471, -0.995401919, 0.0469971672, -0.0834645703, 0.0496735461,
                        0.998306274,
                        -0.0302831996,
                        0.0818999782,
                        -0.0342899337,
                        -0.996050477 },
                    { 2552.11353, 20.0313129, -2769.54126, -0.994587362, -0.10163115, 0.021613257, -0.101757392,
                        0.994797587,
                        -0.00482090237,
                        -0.0210108627,
                        -0.00699411705,
                        -0.999754786 },
                    { 2551.48413, 19.9637222, -2746.7832, -0.98747772, -0.114875138, 0.108127192, -0.115308404,
                        0.9933272,
                        0.00225771032,
                        -0.107665032,
                        -0.0102385357,
                        -0.994134486 },
                    { 2548.27515, 19.6105747, -2716.46411, -0.988855302, 0.0969863981, 0.11295487, 0.09716703,
                        0.995260358,
                        -0.00391825475,
                        -0.112799525,
                        0.00710090203,
                        -0.993592381 },
                    { 2545.65747, 19.9280224, -2690.49805, -0.990300834, -0.0794094279, 0.114010617, -0.0814839751,
                        0.996581256,
                        -0.0136451963,
                        -0.112537287,
                        -0.0228028875,
                        -0.993385792 },
                    { 2542.55396, 19.9490108, -2664.87256, -0.985963643, -0.107132733, 0.128055885, -0.107889667,
                        0.994162321,
                        0.0010311373,
                        -0.127418816,
                        -0.0127992434,
                        -0.991766393 },
                    { 2539.18286, 19.95187, -2641.63696, -0.983443975, -0.117128268, 0.138271168, -0.118191421,
                        0.992990673,
                        0.000525347074,
                        -0.137363508,
                        -0.0158258155,
                        -0.990394294 },
                    { 2535.83691, 19.6492443, -2615.16211, -0.990234613, 0.12854144, 0.0539681688, 0.12906386,
                        0.991616309,
                        0.00629460951,
                        -0.0527065992,
                        0.01319848,
                        -0.998522818 },
                    { 2534.48242, 20.0231285, -2591.59985, -0.993857443, -0.0999011472, 0.0476140454, -0.100093298,
                        0.99497664,
                        -0.00166252151,
                        -0.0472087748,
                        -0.00641815644,
                        -0.998864412 },
                    { 2532.52344, 19.4002247, -2564.15576, -0.992863059, -0.00271755341, 0.119229056, -0.00266389991,
                        0.999996245,
                        0.000609377166,
                        -0.11923027,
                        0.000287413772,
                        -0.992866576 },
                    { 2529.03516, 19.3871727, -2535.8877, -0.992261112, 0.0082616657, 0.123893522, 0.0083610015,
                        0.999965012,
                        0.000281851942,
                        -0.123886861,
                        0.00131554459,
                        -0.992295504 },
                    { 2525.06665, 19.4055271, -2503.53003, -0.992219388, 0.00796744693, 0.124246486, 0.00806840882,
                        0.999967396,
                        0.000309423398,
                        -0.124239966,
                        0.00130948727,
                        -0.992251337 },
                    { 2521.23608, 19.4011326, -2472.77246, -0.992249787, 0.000124489176, 0.124259144, 0.000141185417,
                        1,
                        0.000125560415,
                        -0.124259122,
                        0.000142130884,
                        -0.992249787 },
                    { 2517.32568, 19.4013844, -2441.52759, -0.992249668, 0.000339055725, 0.124259882, 0.00033495258,
                        0.99999994,
                        -5.39123866e-05,
                        -0.124259889,
                        -1.18733797e-05,
                        -0.992249727 },
                    { 2513.10303, 19.4046936, -2407.80981, -0.99224925, 0.00104060688, 0.124259025, 0.000991133158,
                        0.999999404,
                        -0.000459967821,
                        -0.124259427,
                        -0.000333245494,
                        -0.992249727 },
                    { 2509.51782, 19.4059296, -2379.17505, -0.992249727, 0.000260291039, 0.124259397, 0.00020573895,
                        0.999999881,
                        -0.000451849832,
                        -0.124259502,
                        -0.000422782876,
                        -0.992249668 },
                    { 2505.02832, 19.4155388, -2344.50537, -0.981104076, 0.00116709655, 0.193477064, 0.00083933241,
                        0.999998093,
                        -0.00177603413,
                        -0.193478763,
                        -0.00158008281,
                        -0.981103182 },
                    { 2500.98438, 19.9520817, -2325.0874, -0.970464587, -0.0660634711, 0.232021809, -0.0748691112,
                        0.99676156,
                        -0.0293433517,
                        -0.229331896,
                        -0.0458479524,
                        -0.972267866 },
                    { 2496.54419, 19.9599819, -2306.44141, -0.972889245, 0.0149863753, 0.230785385, 0.0232207906,
                        0.999185383,
                        0.0330050811,
                        -0.230102763,
                        0.0374693051,
                        -0.972444713 },
                    { 2491.56177, 19.7253113, -2286.41455, -0.978183448, -0.0175177362, 0.207002938, -0.0157877542,
                        0.999825299,
                        0.0100064026,
                        -0.20714207,
                        0.00651998632,
                        -0.978289127 },
                    { 2488.0022, 19.7115879, -2260.27319, -0.997756779, 0.0119011402, 0.0658765286, 0.0112985102,
                        0.999890924,
                        -0.00951289944,
                        -0.0659825578,
                        -0.00874725357,
                        -0.997782409 },
                    { 601.648376, 18.3145618, 993.934082, -0.994039893, 0.0807351321, -0.073256202, 0.0786185563,
                        0.996412158,
                        0.031334959,
                        0.0755231977,
                        0.0253889021,
                        -0.996820748 },
                    { 603.084534, 18.8590508, 1014.8728, -0.981360316, -0.152120113, -0.117436849, -0.152518168,
                        0.988284528,
                        -0.00564292632,
                        0.116919428,
                        0.0123735089,
                        -0.993064344 },
                    { 605.45813, 18.3179417, 1037.09741, -0.980555773, 0.153705135, -0.122004576, 0.15525277,
                        0.987869501,
                        -0.00322437729,
                        0.120029002,
                        -0.0221032295,
                        -0.992524326 },
                    { 608.886108, 18.7572498, 1055.30603, -0.975267708, 0.00145881553, -0.221022189, 0.0191951003,
                        0.996759176,
                        -0.0781200901,
                        0.220191926,
                        -0.0804305449,
                        -0.972135007 },
                    { 612.744873, 18.1147079, 1073.86304, -0.976724148, -0.0112449089, -0.214204431, -0.014139005,
                        0.999828219,
                        0.0119835539,
                        0.214032874,
                        0.0147332633,
                        -0.976715326 },
                    { 616.046997, 18.0007019, 1090.72534, -0.988510013, -0.0323628224, -0.147650197, -0.0311741065,
                        0.99946028,
                        -0.0103585357,
                        0.147905737,
                        -0.0056366534,
                        -0.988985419 },
                    { 619.233826, 18.1636848, 1113.13843, -0.989383996, -0.00287878537, -0.14529635, -0.00554777682,
                        0.999823153,
                        0.0179674532,
                        0.145218939,
                        0.0185827818,
                        -0.98922503 },
                    { 675.835449, 18.8747292, 1684.88281, -0.854425609, -0.0262052137, 0.518912494, -0.0476860926,
                        0.998467147,
                        -0.0280956291,
                        -0.517380834,
                        -0.0487505347,
                        -0.854365528 },
                    { 671.167236, 18.2653313, 1692.61255, -0.826891422, 0.133908287, 0.54618597, 0.159195349,
                        0.987246573,
                        -0.00103120971,
                        -0.539358318,
                        0.0860975683,
                        -0.837663293 },
                    { 664.464844, 18.2351837, 1703.58374, -0.765275121, 0.0880014747, 0.63765955, 0.0851014555,
                        0.995747209,
                        -0.0352871716,
                        -0.63805306,
                        0.0272613596,
                        -0.769509673 },
                    { 657.070129, 18.2481117, 1713.38171, -0.75858587, 0.124046624, 0.639656126, 0.161370605,
                        0.986893892,
                        -1.1556609e-05,
                        -0.631274164,
                        0.10321293,
                        -0.768661201 },
                    { 650.382324, 18.2514095, 1722.11877, -0.718540192, 0.119169168, 0.685199738, 0.161506221,
                        0.986869097,
                        -0.00227036956,
                        -0.676473022,
                        0.109032676,
                        -0.728351653 },
                    { 642.662537, 18.3014107, 1731.04761, -0.695627511, 0.108523622, 0.710158408, 0.145802349,
                        0.989278436,
                        -0.00835863687,
                        -0.703451514,
                        0.0977282673,
                        -0.703992307 },
                    { 634.930603, 18.2728729, 1739.02722, -0.668255866, 0.00385437114, 0.743921518, 0.0660540834,
                        0.996344388,
                        0.0541733839,
                        -0.740993202,
                        0.0853407308,
                        -0.666067541 },
                    { 625.623352, 18.1352291, 1747.49939, -0.639924288, -0.000133774025, 0.768437922, 0.0208310224,
                        0.999629438,
                        0.0175212622,
                        -0.768155575,
                        0.0272196308,
                        -0.639684439 },
                    { 617.421509, 18.0606251, 1754.24377, -0.657491028, -0.0203614645, 0.75318718, -0.0351343527,
                        0.999375939,
                        -0.00365349278,
                        -0.752642751,
                        -0.0288648829,
                        -0.657796085 },
                    { 383.577179, 19.1097469, 1802.09973, 0.18331176, -0.103270404, 0.977615476, 0.0343992934,
                        0.994531691,
                        0.0986071676,
                        -0.98245281,
                        0.0155534297,
                        0.185861781 },
                    { 377.623871, 18.8574047, 1800.97546, 0.229185656, -0.0991847068, 0.968316257, -0.0176613368,
                        0.994207442,
                        0.106016919,
                        -0.973222494,
                        -0.041399315,
                        0.226106346 },
                    { 368.563263, 18.1806126, 1798.87903, 0.233838499, -0.0107822716, 0.972215652, 0.0376684628,
                        0.999288261,
                        0.00202245312,
                        -0.971545517,
                        0.036148943,
                        0.234078214 },
                    { 358.762604, 18.2143936, 1796.43726, 0.234368727, 0.0168632511, 0.972001493, -0.0211175531,
                        0.999701917,
                        -0.0122519676,
                        -0.971918404,
                        -0.0176548138,
                        0.234654978 },
                    { 348.319061, 18.7938671, 1793.54053, 0.233836368, 0.0361450873, 0.97160387, -0.124916852,
                        0.992143571,
                        -0.00684539787,
                        -0.964217961,
                        -0.119768992,
                        0.23651439 },
                    { 337.700592, 18.2977791, 1790.56726, 0.212564752, -0.00127601332, 0.977146149, -0.0503719002,
                        0.99865526,
                        0.0122618172,
                        -0.975847781,
                        -0.0518271364,
                        0.212214634 },
                    { 325.054077, 18.201952, 1787.78906, 0.220947176, -0.00972196739, 0.97523731, -0.0192880202,
                        0.999711156,
                        0.0143357851,
                        -0.975095034,
                        -0.0219778493,
                        0.220695853 },
                    { 310.767395, 18.1512051, 1784.56726, 0.224796623, 0.016143797, 0.974271953, 0.0421952121,
                        0.998763561,
                        -0.026285449,
                        -0.973491669,
                        0.0470184907,
                        0.22383748 },
                    { 297.464539, 18.15485, 1781.77124, 0.192908913, -0.0404187366, 0.980383813, 0.0661318675,
                        0.997414887,
                        0.0281082019,
                        -0.978985548,
                        0.0594122894,
                        0.195083186 },
                    { 286.458282, 18.3304234, 1779.53931, 0.190166131, 0.0481161587, 0.980572104, -0.0648419932,
                        0.997232974,
                        -0.0363586396,
                        -0.979608297,
                        -0.0566680729,
                        0.192759871 },
                    { 272.64328, 18.6441975, 1776.599, 0.189113081, 0.0620637685, 0.979992032, -0.0801044703,
                        0.995649397,
                        -0.0475972779,
                        -0.978682518,
                        -0.0695004761,
                        0.193261907 },
                    { 260.924011, 18.6505852, 1774.10547, 0.189158693, 0.061473351, 0.980020404, -0.0812458321,
                        0.99559623,
                        -0.0467686988,
                        -0.97857964,
                        -0.0707758665,
                        0.19332014 },
                    { 245.579117, 18.6533737, 1770.85132, 0.189146757, 0.0616073087, 0.980014324, -0.0807692483,
                        0.995624125,
                        -0.0469998047,
                        -0.978621364,
                        -0.070265159,
                        0.193295047 },
                    { 230.345383, 18.6707878, 1767.62927, 0.189167619, 0.0613375939, 0.980027199, -0.081518501,
                        0.995582938,
                        -0.0465762615,
                        -0.978555262,
                        -0.0710796267,
                        0.193332195 },
                    { 212.644409, 18.6969318, 1763.91675, 0.189194232, 0.0609931983, 0.98004353, -0.0823625028,
                        0.995537579,
                        -0.0460576601,
                        -0.978479385,
                        -0.0720049962,
                        0.193373531 },
                    { 195.351288, 18.7519455, 1760.28101, 0.189820513, 0.0540961958, 0.980327368, -0.0992880017,
                        0.994419932,
                        -0.0356487408,
                        -0.9767856,
                        -0.0905678794,
                        0.194132403 },
                    { 177.769592, 18.6972198, 1756.51343, 0.191326961, 0.044594124, 0.980512798, -0.111931682,
                        0.993441761,
                        -0.0233409647,
                        -0.975123227,
                        -0.105284691,
                        0.19506368 },
                    { 158.818665, 18.7410469, 1752.51343, 0.190467581, 0.0529948324, 0.980262041, -0.0987638831,
                        0.994510055,
                        -0.0345750153,
                        -0.976712763,
                        -0.0902290642,
                        0.194655895 },
                    { 144.135666, 18.5883636, 1749.40662, 0.19009839, 0.0582659729, 0.98003453, -0.0862980559,
                        0.995365083,
                        -0.0424380898,
                        -0.977964878,
                        -0.0765076652,
                        0.194245532 },
                    { 124.284943, 18.7997417, 1745.14563, 0.192433774, 0.0401286334, 0.980489135, -0.133051887,
                        0.991003811,
                        -0.0144458031,
                        -0.972248137,
                        -0.127676055,
                        0.196041793 },
                    { 101.000778, 18.7861443, 1740.21655, 0.192820221, 0.0472109169, 0.980097711, -0.118024051,
                        0.992706001,
                        -0.0245987084,
                        -0.974110186,
                        -0.11093197,
                        0.196985811 },
                    { 81.2900772, 19.013073, 1735.97571, 0.197641507, 0.0247319639, 0.979962349, -0.170838013,
                        0.98525244,
                        0.00958960783,
                        -0.965273142,
                        -0.169310123,
                        0.19895193 },
                    { 60.6186142, 18.7748451, 1731.58105, 0.198052242, 0.0249055773, 0.979875028, -0.145348057,
                        0.989371538,
                        0.00423078379,
                        -0.969355047,
                        -0.143260852,
                        0.199567229 },
                    { 42.8300171, 18.8156357, 1727.80005, 0.203442439, 0.0142913032, 0.978982627, -0.132119194,
                        0.99114877,
                        0.0129867913,
                        -0.970131814,
                        -0.131984457,
                        0.203529879 },
                    { 22.2862873, 19.3274918, 1723.2085, 0.197610512, 0.0525676496, 0.978870153, -0.259676516,
                        0.9656955,
                        0.000562349975,
                        -0.945260882,
                        -0.254300714,
                        0.204482168 },
                    { -0.0455145985, 18.0511303, 1718.57251, 0.203500882, -0.00169190881, 0.979073286, 0.00397979654,
                        0.999991655,
                        0.000900854473,
                        -0.97906667,
                        0.00371318799,
                        0.203505918 },
                    { -20.4615707, 18.115799, 1714.30115, 0.203462824, 0.00381249283, 0.979075253, -0.0203452948,
                        0.999792933,
                        0.000334813667,
                        -0.978871286,
                        -0.0199876968,
                        0.203498259 },
                    { -41.1815834, 18.349575, 1709.83472, 0.204874977, 0.0190798286, 0.978602171, -0.0140463365,
                        0.999764323,
                        -0.016551761,
                        -0.978687346,
                        -0.010354734,
                        0.205094695 },
                    { -66.4679947, 18.1002979, 1704.53137, 0.205017522, 0.0029960114, 0.978753746,
                        -0.000374098396,
                        0.99999547,
                        -0.00298267161,
                        -0.978758216,
                        0.000245349744,
                        0.205017716 },
                    { -82.9795685, 18.3420868, 1701.02649, 0.203373134, 0.0503293127, 0.977806926, -0.0640189871,
                        0.997224391,
                        -0.0380135179,
                        -0.977006137,
                        -0.0548672825,
                        0.206030682 },
                    { -100.019806, 18.0898705, 1697.43237, 0.205136254, 0.000703462807, 0.978733182,
                        -0.000950497109,
                        0.999999404,
                        -0.000519529742,
                        -0.978732944,
                        -0.000823708659,
                        0.205136806 },
                    { -115.126312, 18.2069931, 1694.18689, 0.205093235, 0.00906209555, 0.978700459, -0.0138137406,
                        0.999884307,
                        -0.00636348175,
                        -0.978644967,
                        -0.0122144073,
                        0.205194697 },
                    { -130.719406, 18.0828209, 1690.91467, 0.205153406, 0.000197565416, 0.978729784, 0.000149863758,
                        0.99999994,
                        -0.000233272222,
                        -0.978729844,
                        0.000194532724,
                        0.205153376 },
                    { -146.540833, 18.120739, 1687.50342, 0.205191195, 0.00455031963, 0.978711307, -0.0130234184,
                        0.999913335,
                        -0.00191847642,
                        -0.978635252,
                        -0.0123525122,
                        0.20523268 },
                    { -158.697845, 18.0827465, 1684.95251, 0.205219746, 0.000193238287, 0.978715897, 9.03634354e-05,
                        1,
                        -0.000216388275,
                        -0.978715897,
                        0.000132847272,
                        0.205219731 },
                    { -175.22345, 18.1155262, 1681.4043, 0.205127418, 0.00277782511, 0.978731334, -0.00370108592,
                        0.999991,
                        -0.00206247205,
                        -0.978728294,
                        -0.0031992991,
                        0.205135852 },
                    { -192.215561, 18.8482819, 1677.71619, 0.205819398, 0.0384618491, 0.977833867, -0.0230605658,
                        0.999140501,
                        -0.0344460122,
                        -0.978318214,
                        -0.0154597443,
                        0.206529438 },
                    { 1332.71387, 53.7328415, 1395.97705, 0.735102117, 0.0421810634, -0.676642895, -0.0219750777,
                        0.999020636,
                        0.0384040512,
                        0.677600145,
                        -0.0133616198,
                        0.735309124 },
                    { 1326.4054, 54.3737488, 1402.76331, 0.744313538, 0.0190197807, -0.667559445, 0.0393941924,
                        0.99660331,
                        0.0723183677,
                        0.666667402,
                        -0.0801255032,
                        0.741036057 },
                    { 1346.15552, 52.8076248, 1381.93787, 0.706321657, 0.10960073, -0.699355006, -0.0623405688,
                        0.993733764,
                        0.0927732736,
                        0.70514071,
                        -0.0219295863,
                        0.708728254 },
                    { 1357.71423, 52.1025505, 1370.06604, 0.704840839, 0.148010045, -0.693752408, -0.106105879,
                        0.988985479,
                        0.103195354,
                        0.701385021,
                        0.000874914869,
                        0.712782085 },
                    { 1371.89001, 50.6525536, 1355.2699, 0.713416874, 0.0669484735, -0.697534442, -0.0417185463,
                        0.997717857,
                        0.0530912466,
                        0.699496925,
                        -0.00877606962,
                        0.714581728 },
                    { 1384.84363, 51.0204582, 1341.65198, 0.530467153, -0.404451907, -0.744998813, 0.669646859,
                        0.738809347,
                        0.0757219717,
                        0.519786239,
                        -0.539054155,
                        0.662754059 },
                    { 1399.02014, 48.7897339, 1325.7478, 0.753940344, -0.0474836528, -0.655224621, 0.0542849563,
                        0.998476446,
                        -0.00989537127,
                        0.654696226,
                        -0.0281083193,
                        0.755369306 },
                    { 1412.84399, 47.3968086, 1308.80933, 0.765011668, -0.18831709, -0.61586839, 0.278198272,
                        0.959098756,
                        0.0523005016,
                        0.580829501,
                        -0.211344004,
                        0.786111176 },
                    { 1427.41895, 46.7515144, 1289.39734, 0.794038057, 0.0866055265, -0.601666868, -0.109913148,
                        0.993939221,
                        -0.00198547635,
                        0.597848356,
                        0.0677076504,
                        0.798744619 },
                    { 1444.06763, 45.9301872, 1268.29419, 0.83644551, 0.0271012858, -0.547379613,
                        0.000160800104,
                        0.998764396,
                        0.0496954955,
                        0.548050046,
                        -0.0416555926,
                        0.835407615 },
                    { 1458.51819, 44.0808296, 1245.23816, 0.859535575, 0.0152247595, -0.510849118, -0.013908321,
                        0.999882817,
                        0.00639773859,
                        0.51088661,
                        0.00160596916,
                        0.859646618 },
                    { 1472.23401, 42.2838783, 1222.83557, 0.861114562, 0.0686176419, -0.503759205, -0.0407988094,
                        0.996981263,
                        0.0660594478,
                        0.506771326,
                        -0.0363319777,
                        0.861314595 },
                    { 1487.32654, 41.0302277, 1198.5636, 0.853777409, 0.0646272749, -0.516611516, -0.0645151883,
                        0.997750819,
                        0.0181960799,
                        0.516625524,
                        0.0177938901,
                        0.85602653 },
                    { 1500.09192, 39.365963, 1176.13391, 0.890829206, -0.0391967483, -0.452644378, 0.123471372,
                        0.979662597,
                        0.158164605,
                        0.4372392,
                        -0.196786284,
                        0.877551734 },
                    { 1513.54431, 38.0813599, 1149.22424, 0.917578101, 0.116392456, -0.380135804, -0.0869711488,
                        0.991790652,
                        0.0937405378,
                        0.387925833,
                        -0.0529534146,
                        0.920168161 },
                    { 1524.36926, 38.2049942, 1123.36694, 0.913434982, 0.109794468, -0.391894996, -0.0984753743,
                        0.993935525,
                        0.0489359871,
                        0.394891262,
                        -0.00610783882,
                        0.91870755 },
                    { 1536.51697, 35.3293991, 1096.02515, 0.915335715, 0.152640313, -0.372641146, -0.155927807,
                        0.987534463,
                        0.0214986093,
                        0.371277541,
                        0.0384266712,
                        0.927726448 },
                    { 1546.77686, 33.544632, 1068.89478, 0.95252651, -0.0498975813, -0.300338954, 0.0785264894,
                        0.993365824,
                        0.0840117931,
                        0.294154465,
                        -0.103608027,
                        0.950125515 },
                    { 1555.81543, 32.3288307, 1041.65869, 0.956038594, 0.0165838506, -0.292771637,
                        -0.00121702941,
                        0.998615384,
                        0.0525917076,
                        0.293238431,
                        -0.0499233902,
                        0.954734981 },
                    { 1563.88098, 31.2774925, 1015.05023, 0.966637313, -0.0202420577, -0.255347967, 0.0328299403,
                        0.998441458,
                        0.0451311022,
                        0.254036456,
                        -0.0520084687,
                        0.965795338 },
                    { 1569.25854, 29.9707985, 993.391968, 0.967038989, -0.104017787, -0.232413083, 0.146469712,
                        0.973866701,
                        0.173580855,
                        0.208283857,
                        -0.201900944,
                        0.957002521 },
                    { 1573.85217, 28.5549145, 975.067383, 0.975405455, -0.00422506779, -0.220377684, 0.0139428601,
                        0.998996675,
                        0.0425592698,
                        0.219976753,
                        -0.0445852391,
                        0.974485695 },
                    { 1578.40527, 27.8474922, 957.600403, 0.980033219, -0.0586559884, -0.18998526, 0.0770311505,
                        0.992883623,
                        0.090820305,
                        0.183306083,
                        -0.103641696,
                        0.977577269 },
                    { 1582.53308, 26.978796, 940.962952, 0.978800714, -0.0645697862, -0.194370657, 0.084922947,
                        0.99153024,
                        0.0982645378,
                        0.186379462,
                        -0.112687923,
                        0.975993931 },
                    { 1586.51001, 26.2062645, 924.813354, 0.97817868, -0.062624082, -0.198102713, 0.083097443,
                        0.991831243,
                        0.0967762023,
                        0.190423936,
                        -0.111126252,
                        0.975392044 },
                    { 1590.24475, 25.4510117, 909.714844, 0.977419019, -0.0627767965, -0.201770023, 0.0841150954,
                        0.991528153,
                        0.0989777073,
                        0.193847165,
                        -0.113714598,
                        0.974418938 },
                    { 1593.27502, 24.847393, 897.441711, 0.976769924, -0.0630844906, -0.204794571, 0.085057877,
                        0.991312504,
                        0.100322649,
                        0.196686625,
                        -0.115411542,
                        0.973650098 },
                    { 1596.36731, 24.3402214, 882.724915, 0.97999382, -0.0946731791, -0.175068825, 0.095182538,
                        0.995444596,
                        -0.00550417043,
                        0.174792424,
                        -0.0112694418,
                        0.98454082 },
                    { 1599.11035, 23.3375301, 865.79718, 0.976464033, -0.146236494, -0.158533692, 0.156341627,
                        0.986269474,
                        0.0531961322,
                        0.14857772,
                        -0.0767295212,
                        0.985919476 },
                    { 1601.60315, 23.1034126, 848.282532, 0.979274809, 0.162183106, -0.121315569, -0.145812422,
                        0.980267167,
                        0.13347289,
                        0.140568718,
                        -0.113017321,
                        0.983599246 },
                    { 1604.2865, 22.5139961, 831.801575, 0.969994307, 0.215533927, -0.11249961, -0.195361406,
                        0.966400325,
                        0.16704601,
                        0.144723743,
                        -0.140055597,
                        0.97950983 },
                    { 1606.26123, 21.1388321, 817.987976, 0.99313575, 0.0107456343, -0.116472714,
                        -0.00964234304,
                        0.999903202,
                        0.0100318603,
                        0.116569236,
                        -0.00883992948,
                        0.993143201 },
                    { 1607.60547, 21.0947723, 803.48938, 0.976039529, -0.181694835, -0.119723886, 0.199319392,
                        0.967279673,
                        0.156976953,
                        0.0872845799,
                        -0.177079007,
                        0.980318546 },
                    { 1608.77698, 20.6144314, 788.405884, 0.973341465, -0.224659085, -0.0462032482, 0.226803198,
                        0.972756386,
                        0.0480139218,
                        0.0341577418,
                        -0.0572129823,
                        0.997777462 },
                    { 1609.26904, 21.3234825, 771.139099, 0.982551336, -0.184011355, -0.0270689968, 0.184689656,
                        0.9824754,
                        0.0251367912,
                        0.0219691675,
                        -0.0296975505,
                        0.999317467 },
                    { 1609.88208, 19.844059, 757.482178, 0.986982822, 0.160539448, 0.00959009677, -0.160347044,
                        0.986891508,
                        -0.0182742048,
                        -0.0123981163,
                        0.0164985824,
                        0.999787033 },
                    { 1610.07312, 20.1350632, 744.557129, 0.980658948, 0.192046925, 0.037762668, -0.192040682,
                        0.981379509,
                        -0.00382674066,
                        -0.0377944224,
                        -0.00349924085,
                        0.99927938 },
                    { 1609.69543, 19.3675728, 727.352051, 0.988360345, 0.146540865, 0.0408612303, -0.14960818,
                        0.984966218,
                        0.0863652825,
                        -0.0275908895,
                        -0.091473192,
                        0.995425224 },
                    { 1608.86963, 19.1841564, 714.847717, 0.991857171, 0.107664071, 0.0680281669, -0.111887187,
                        0.991806448,
                        0.0616536625,
                        -0.0608328879,
                        -0.0687631071,
                        0.995776594 },
                    { 1608.21155, 18.6422482, 703.837158, 0.997393429, 0.0287009478, 0.0662013739, -0.0291991234,
                        0.999552011,
                        0.00656969566,
                        -0.0659831613,
                        -0.0084855929,
                        0.997784674 },
                    { 1607.39148, 18.2406158, 692.138916, 0.997794807, -0.000611454307, 0.0663710162,
                        -0.00058940606,
                        0.999836504,
                        0.0180720557,
                        -0.0663712174,
                        -0.0180713218,
                        0.997631311 },
                    { 1605.91687, 18.3569298, 679.471924, 0.985657632, 0.00376523868, 0.168715358, 0.0042413394,
                        0.998882532,
                        -0.0470706373,
                        -0.168704063,
                        0.0471111126,
                        0.984540224 },
                    { 1604.94763, 18.9270859, 672.030029, 0.960885525, 0.208080828, 0.182760507, -0.218902498,
                        0.974886835,
                        0.0409551002,
                        -0.169648856,
                        -0.0793598965,
                        0.982304037 },
                    { 1603.60095, 18.5472527, 663.249756, 0.971147299, 0.154469013, 0.181692585, -0.161184788,
                        0.986663043,
                        0.0227048714,
                        -0.175762162,
                        -0.0513358563,
                        0.983093202 },
                    { 1601.89111, 18.2980137, 651.70752, 0.993525088, 0.0587152131, 0.0972645357, -0.0608308688,
                        0.997968614,
                        0.0189283714,
                        -0.095955573,
                        -0.0247224998,
                        0.995078564 },
                    { 1601.18921, 18.0007744, 644.698975, 0.997147858, -0.0336749516, 0.0675435811, 0.0346710049,
                        0.999305844,
                        -0.0136288898,
                        -0.0670377463,
                        0.0159318224,
                        0.997623205 },
                    { 1600.57007, 17.9594784, 636.792297, 0.996995866, -0.0423218906, 0.0648696423, 0.0428412259,
                        0.999059856,
                        -0.00663520209,
                        -0.0645278394,
                        0.00939436443,
                        0.997871697 },
                    { 1600.1427, 18.1313362, 630.520142, 0.997945249, 0.00274643023, 0.0640138239,
                        -0.000773694483,
                        0.999524593,
                        -0.0308217797,
                        -0.0640680417,
                        0.0307089202,
                        0.997472942 },
                    { 1599.36047, 18.2708302, 618.235229, 0.997485936, 0.0280226581, 0.0650889054, -0.0297158025,
                        0.999240875,
                        0.0251918547,
                        -0.0643335506,
                        -0.027062688,
                        0.997561455 },
                    { 1598.54297, 17.9556065, 606.843384, 0.996873677, -0.0456567295, 0.0644851029, 0.0462988354,
                        0.998891473,
                        -0.00849766564,
                        -0.0640256479,
                        0.0114566842,
                        0.997882485 },

                }

                for i, v in pairs(poses) do
                    if (root.Position - Vector3.new(unpack(v))).Magnitude < 30 then
                        return true
                    end
                end
                return false
            end

            tab_Auto:CreateButton("Auto Train", function(isfarm) --Sim+
                if main.is_opened("cargo train") ~= "fechado" then else
                    notificar('MACRO X', "Train is not in map!", 3, 5)
                    return
                end
                notificar("MACRO X", "Auto Train Enabled!", 1, 3)
                if not main.getCar() then carro() end
                ROBBERIES_ALREADY['cargo train'] = true
                local function getGold()
                    for i, v in pairs(game:GetService("Workspace").Trains:GetDescendants()) do
                        if v.Name == "Gold" then
                            return v
                        end
                    end
                end
                local function getRoofDoor()
                    for i, v in pairs(game:GetService("Workspace").Trains:GetDescendants()) do
                        if v.Name == "RoofDoor" then
                            return v
                        end
                    end
                end

                local Gold = getGold()
                local RoofDoor = getRoofDoor()
                local function BreachVault()
                    local name = "Breach Vault"
                    for i, v in next, require(game:GetService("ReplicatedStorage").Module.UI).CircleAction.Specs do
                        if v.Name == name then
                            v:Callback(true)
                        end
                    end
                end
                local function OpenDoor()
                    local name = "Open Door"
                    for i, v in next, require(game:GetService("ReplicatedStorage").Module.UI).CircleAction.Specs do
                        if v.Name == name then
                            v:Callback(true)
                        end
                    end
                end
                status_auto("Teleporting to train...")
                main.Tp3(function()
                    return getGold().Position
                end, true, function()
                    if trem_teto(getGold()) then
                        return false
                    end
                    return true
                end)
                status_auto("Open door")
                for i = 1, 10 do
                    OpenDoor()
                end
                status_auto("Teleporting to roof")

                BreachVault()
                ExitCar()
                main.instant(Gold.Position + Vector3.new(0, 3, 0))
                spawn(function()
                    for i = 1, 10 do
                        BreachVault()
                        wait()
                    end
                end)
                if getHumanoid().Health == 0 then
                    status_auto("Your dead...")
                    status_cooldown("Countdown", 5)
                    main.noclip(false)
                    return
                end
                spawn(function()
                    repeat
                        Gold = getGold()
                        wait(2)
                    until (main.is_opened("cargo train") == "fechado" or main.bag() or (getGold().Position - Vector3.new(-1227, 27, 448)).Magnitude < 200 or getHumanoid().Health == 0) and trem_teto(Gold) == false
                end)
                main.noclip(true)
                local started_ = tick()
                for i = 1, 3 do ROBBERIES_ALREADY['cargo Train'] = true end


                repeat
                    status_auto("Robbing [" .. main.bag2() .. "]")

                    main.instant(Gold.Position + Vector3.new(0, 3, 0))
                    task.wait()
                until (tick() - started_ >= 15 or main.is_opened("cargo train") == "fechado" or main.bag() or getHumanoid().Health == 0) and trem_teto(Gold) == false
                if isfarm then
                    print("train = true")
                else
                    status_auto("Sucess Train!")
                    repeat
                        task.wait()
                        main.instant(Vector3.new(0, 20, 3))
                    until not main.bag()
                    getHumanoid().Health = 0
                end

                status_auto("")
            end, "train auto")

            tab_Auto:CreateButton("Auto Donut Store", function() --Sim+
                if main.is_opened("donut store") == "aberto" then else
                    notificar('MACRO X', "Donut Store Closed!", 3, 4)
                    return
                end
                notificar("MACRO X", "Auto Donut Store Enabled!", 1, 3)
                status_auto("Teleporting Donut Store...")
                main.Tp2(Vector3.new(105.21797180175781, 33.26239013671875, -1534.832275390625))
                wait(1)
                ExitCar()
                status_auto("Entering...")
                main.Tp1(Vector3.new(90, 30, -1514), nil, 60)
                ___(true)
                wait(0.2)
                for i = 1, 6 do
                    main.instant(Vector3.new(96.66537475585938, 19.515846252441406, -1528.657958984375))
                    task.wait()
                end
                wait(0.1)
                main.noclip(true)
                flags("noclip", true)
                main.Tp1(Vector3.new(99.35599517822266, 19.715871810913086, -1536.43798828125), nil, 50)
                main.Tp1(Vector3.new(111.64977264404297, 19.715871810913086, -1578.5653076171875))
                main.Tp1(Vector3.new(77.77365112304688, 19.715871810913086, -1590.0621337890625))
                wait(0.1)
                main.Tp1(Vector3.new(72, 26, -1589))
                main.Tp1(Vector3.new(77, 24, -1595), nil, 55)
                instant(Vector3.new(77, 24, -1595))
                status_auto("Rob Donut Store, Wait...")
                ___(false)
                wait(0.3)
                workspace.CurrentCamera.CFrame = game:GetService("Workspace").TouchTrigger.Donut.CFrame
                game:GetService("VirtualInputManager"):SendKeyEvent(true, 'E', false, game)
                wait(10.5)
                status_auto("Sucess!")
                instant(Vector3.new(76, 20, -1590))
                wait(0.2)
                main.Tp1(Vector3.new(77.77365112304688, 19.715871810913086, -1590.0621337890625))
                main.Tp1(Vector3.new(111.64977264404297, 19.715871810913086, -1578.5653076171875))
                main.Tp1(Vector3.new(93.4583969116211, 19.215852737426758, -1520.963623046875), nil, 50)
                wait(0.2)
                flags("noclip", false)
                main.Tp2(Vector3.new(105.21797180175781, 36.26239013671875, -1534.832275390625))

                ROBBERIES_ALREADY['Donut Store'] = true

                plat()
                if tostring(speaker.Team) == "Prisoner" then
                    getHumanoid().Health = 0
                    return "stop"
                end
                unplat()

                status_auto("")
            end, "donut store auto")

            tab_Auto:CreateButton("Auto Gas Station", function() --Sim+
                if main.is_opened("gas station") == "aberto" then else
                    notificar('MACRO X', "Gas Station Closed!", 3, 3)
                    return
                end
                status_auto("Teleporting Gas Station...")
                notificar("MACRO X", "Auto Gas Station Enabled!", 1, 3)
                main.Tp2(Vector3.new(-1602.6942138671875, 47.64346694946289, 694.2086181640625))
                wait(1)
                ExitCar()
                status_auto("Entering...")
                main.Tp1(Vector3.new(-1630, 51, 692), nil, 60) --indo
                ___(true)
                main.noclip(true)
                flags("noclip", true)
                wait(0.1)

                for i = 1, 6 do
                    main.instant(Vector3.new(-1625, 18, 691))
                    task.wait()
                end

                wait(0.1)

                main.Tp1(Vector3.new(-1618, 20, 691))          --indo
                main.Tp1(Vector3.new(-1610, 20, 690), nil, 50) --indo
                main.Tp1(Vector3.new(-1600, 18, 688))
                wait(0.1)
                main.Tp1(Vector3.new(-1601, 23, 686), nil, 55)
                wait(0.1)
                for i = 1, 10 do instant(Vector3.new(-1598, 23, 681)) end
                wait(0.4)
                status_auto("Rob Gas Station, Wait...")
                ___(false)
                wait(0.4)
                local loja = workspace:FindFirstChild("SmallStores")

                if loja then
                    workspace.CurrentCamera.CFrame = game:GetService("Workspace").TouchTrigger.Energy.CFrame
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 'E', false, game)
                    wait(10.5)
                end

                ROBBERIES_ALREADY['Gas Station'] = true


                status_auto("Success!")

                main.Tp1(Vector3.new(-1602.4930419921875, 18.49614143371582, 687.3925170898438))
                main.Tp1(Vector3.new(-1608.262451171875, 18.496139526367188, 690.5849609375))
                main.Tp1(Vector3.new(-1621.239990234375, 18.01364517211914, 692.4659423828125), 50)
                wait(0.2)
                main.noclip(false)
                status_auto("")
                plat()
                if tostring(speaker.Team) == "Prisoner" then
                    getHumanoid().Health = 0
                    return "stop"
                end
                unplat()
                flags("noclip", false)
            end, "gas station auto")





            tab_Others:CreateLabel("Museum Options")


            tab_Others:CreateToggle("Museum Auto Fill Bag", function(bool)
                AutoFillBag_Museum = bool

                spawn(function()
                    pcall(function()
                        while AutoFillBag_Museum do
                            local all = {}

                            for i, v in next, require(game:GetService('ReplicatedStorage').Module.UI).CircleAction.Specs do
                                if v.Name == "Grab Picture" or v.Name == "Grab Mask" or v.Name == "Grab Relic" or v.Name ==
                                    "Grab Bone" then
                                    all[#all + 1] = v
                                end
                            end

                            for i, v in pairs(all) do
                                spawn(function()
                                    pcall(function()
                                        v.Duration = 0
                                        v:Callback(true)
                                    end)
                                end)
                            end
                            task.wait(0.3)
                        end
                    end)
                end)
            end, "museum bag")

            tab_Auto:CreateLabel("Auto sell")

            tab_Auto:CreateButton("Sell Vulcano", function()
                status_auto("Teleporting to vulcano...")
                main.Tp2(
                    Vector3.new(2196.81738, 80.3229523, -2574.17334, 0.998987377, 0.0157844182, -0.0421315022,
                        -0.0241765175,
                        0.978080392, -0.206819251, 0.0379434787, 0.207628414, 0.97747159), nil, nil)

                status_auto("Teleporting Sell Vulcano...")
                main.Tp1(
                    Vector3.new(2252.45825, 79.8702011, -2594.56201, -0.980209172, -0.0795713812, -0.181268826,
                        -0.0316089056,
                        0.966823876, -0.253480792, 0.19542484, -0.242734492, -0.95020479), 50, 100)
                main.Tp1(
                    Vector3.new(2283.09863, 66.0230484, -2593.68579, -0.990305662, -0.0430770405, -0.132056966,
                        -0.0118500739,
                        0.973432004, -0.228669316, 0.138398886, -0.224887624, -0.964505732), 50, 100)
                main.Tp1(
                    Vector3.new(2290.47632, 38.3570099, -2595.01807, -0.996950448, -0.0514437668, -0.0586803444,
                        -0.0360182822, 0.970401406, -0.238796517, 0.0692280829, -0.235954732, -0.969295025), 50, 100)
                local _num = 0
                repeat
                    _num = _num + 0.1
                    main.instant(Vector3.new(2290.47632, 38.3570099, -2595.01807, -0.996950448, -0.0514437668,
                        -0.0586803444, -0.0360182822, 0.970401406, -0.238796517, 0.0692280829, -0.235954732, -0.969295025))
                    getRoot().Velocity = Vector3.new(0, 0, 0)
                    if main.getCar() then
                        for i, v in pairs(main.getCar().Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                v.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                    end
                    task.wait()
                until game:GetService('Players').LocalPlayer.PlayerGui.RobberyMoneyGui.Enabled == false and _num >= 3
                main.Tp1(
                    Vector3.new(2290.47632, 38.3570099, -2595.01807, -0.996950448, -0.0514437668, -0.0586803444,
                        -0.0360182822, 0.970401406, -0.238796517, 0.0692280829, -0.235954732, -0.969295025), 50, 100)
                main.Tp1(
                    Vector3.new(2283.09863, 66.0230484, -2593.68579, -0.990305662, -0.0430770405, -0.132056966,
                        -0.0118500739,
                        0.973432004, -0.228669316, 0.138398886, -0.224887624, -0.964505732), 50, 100)
                main.Tp1(
                    Vector3.new(2252.45825, 79.8702011, -2594.56201, -0.980209172, -0.0795713812, -0.181268826,
                        -0.0316089056,
                        0.966823876, -0.253480792, 0.19542484, -0.242734492, -0.95020479), 50, 100)
                main.Tp1(
                    Vector3.new(2196.81738, 80.3229523, -2574.17334, 0.998987377, 0.0157844182, -0.0421315022,
                        -0.0241765175,
                        0.978080392, -0.206819251, 0.0379434787, 0.207628414, 0.97747159), 50, 100)
                main.Tp2(Vector3.new(1800.567138671875, 111.19849395751953, -2653.16845703125))
                main.usecar = true
                task.wait(0.2)
                local vehicle, spec = main.getCamaro()
                if vehicle then
                    spec:Callback(true)
                end
                for i = 1, 6 do
                    instant(Vector3.new(1800.567138671875, 111.19849395751953, -2653.16845703125))
                end
                status_auto("")
            end, "vulcano sell")

            tab_Auto:CreateButton("Sell City Base", function()
                main.Tp2(Vector3.new(-173.86717224121094, 223.7541046142578, 1465.10546875))
                wait()
                status_auto("Teleporting...")
                main.Tp2(Vector3.new(-246.013916015625, 17.881628036499023, 1616.1649169921875))
                wait(2)
                status_auto("")
            end, "city sell")

            tab_Robberys:CreateLabel("Robberies Status")

            for i, v in pairs(Robberys) do
                pcall(function()
                    local LabelA = tab_Robberys:CreateLabel(v)

                    spawn(function()
                        while true do
                            pcall(function()
                                LabelA:Refresh(v ..
                                    " (" ..
                                    ((main.is_opened(v) == "aberto" and "Opened") or (main.is_opened(v) == "roubando" and "Robbing") or (main.is_opened(v) == "fechado" and "Closed")) ..
                                    ")")
                            end
                            )
                            wait(0.1)
                        end
                    end)
                end)
            end


            tab_Credits:CreateLabel("MACRO X Devs:")

            function Creditos(text)
                notificar('MACRO X', "Sucess ClipBoard!", 1, 3)
                setclipboard(text)
            end

            tab_Credits:CreateButton("(Creator/Scripter) By Japa [ãƒ˜ãƒ³ãƒªã‚±#0101]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
            tab_Credits:CreateButton("(Sub_Creator/Scripter) By Sammu [ã‚µãƒŸãƒ¥ã‚¨ãƒ«#7670]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
            tab_Credits:CreateButton("(Scripter) By Jaca [Jaca#8416]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
            tab_Credits:CreateButton("(Designer) By Color [collorem#9470]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
        end

        if game.PlaceId == Jogos["Slayers Map1"] then
            local tab_Farm = moretti:CreateTab('Farm')
            local tab_tp = moretti:CreateTab('Teleports Map')
            local tab_Others = moretti:CreateTab('Others')



            local FLYSPEED = 50
            local normal_speed = 100
            local fast_speed = 400
            game:GetService("UserInputService").InputBegan:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = fast_speed
                end
            end)

            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.LeftShift then
                    FLYSPEED = normal_speed
                end
            end)

            tab_Others:CreateLabel("Others:")

            tab_Others:CreateToggle("No Fog", function(bool)
                if bool then
                    game:GetService("Lighting").Atmosphere.Density = 0
                else
                    game:GetService("Lighting").Atmosphere.Density = 0.444
                end
            end)

            tab_Others:CreateToggle("No Rays", function(bool)
                game:GetService("Lighting").SunRays.Enabled = not bool
            end)




            local time_alived = 0

            spawn(function()
                pcall(function()
                    while true do
                        local started_character = game.Players.LocalPlayer.Character
                        repeat
                            time_alived = time_alived + 1
                            wait(1)
                        until speaker.Health.Value == 0 or (started_character ~= (speaker.Character or speaker.CharacterAdded:wait()))
                        time_alived = 0

                        if (started_character ~= (speaker.Character or speaker.CharacterAdded:wait())) then
                        else
                            speaker.CharacterAdded:wait():WaitForChild("HumanoidRootPart")
                        end
                    end
                end)
            end)
            local reached_tp = false
            function transformar(vector)
                return Vector3.new(vector.X, -150, vector.Z)
            end

            function npc_click()
                pcall(function()
                    speaker.PlayerGui.Npc_Dialogue.Button_Clicked:Fire(true)
                end)
            end

            function change_tp_velo(value)
                getgenv().tp_velo = value
            end

            change_tp_velo(300)

            local debounce = false
            function anti_kick(bool)
                if bool then
                    getRoot().Name = "AntiKick"
                else
                    getRoot().Name = "HumanoidRootPart"
                end
            end

            function tp(vector)
                if debounce then
                    repeat task.wait() until debounce == false
                end
                if debounce == false then
                    debounce = true
                end
                local func
                if typeof(vector) == "function" then
                    func = vector
                    vector = func()
                end

                local reached_tp = false
                local root = getRoot()
                local humanoidRootPart = getRoot()


                local bodyPosition = Instance.new("BodyPosition")
                bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyPosition.D = 500
                bodyPosition.P = 150000


                bodyPosition.Position = humanoidRootPart.Position
                bodyPosition.Parent = humanoidRootPart


                bodyPosition.Name = ""
                noclip(true)

                local last_diff = 9e9
                local travou = false

                pcall(function()
                    while true and task.wait(0.01) do
                        if travou == true then
                            bodyPosition.Position = getRoot().Position
                        else
                            if func and typeof(func()) ~= "Vector3" then
                                reached_tp = true
                                break
                            end
                            local diff = (getRoot().Position - ((func and func()) or vector))
                            if diff.Magnitude > last_diff and ((diff.Magnitude - last_diff) > 5) then
                                bodyPosition.Position = getRoot().Position
                                local old_tp = getgenv().tp_velo
                                travou = true
                                last_diff = diff.Magnitude
                                notificar("Security Detected", "Waiting 5 Seconds...", 2, 3)
                                delay(5, function()
                                    travou = false
                                end)
                            else
                                last_diff = diff.Magnitude
                            end


                            bodyPosition.Position = getRoot().Position -
                                diff.Unit * math.min(0.01 * getgenv().tp_velo, diff.Magnitude)
                            getRoot().Velocity = Vector3.new(0, 0, 0)
                            if diff.Magnitude < 1 then
                                reached_tp = true
                                break
                            end
                        end
                    end
                end)

                bodyPosition:Destroy()
                debounce = false
                while reached_tp == false and task.wait() and speaker:FindFirstChild("Health").Value ~= 0 do end
                noclip(false)
            end

            local old = tp
            local old = tp
            Tp1 = function(vector)
                old(vector)
            end
            Tp2 = function(vector)
                if debounce == true then
                    repeat task.wait() until debounce == false
                end
                getRoot().CFrame = CFrame.new(transformar(getRoot().Position))
                old(transformar(vector))
                getRoot().CFrame = CFrame.new((typeof(vector) == "function" and vector()) or vector)
            end


            --// Farm \\--
            local Mobs = {}
            for i, v in pairs(Workspace.Mobs:GetDescendants()) do
                if v:IsA("Model") and not table.find(Mobs, v.Name) and not (v.Name:find("Shoe") or v.Name:find("Pants") or v.Name:find("Shirt")) then
                    table.insert(Mobs, v.Name)
                end
            end

            local Mobs = dropdown(Mobs)
            local mobs, menu = Mobs()

            local function getNearestMob(minhalista)
                local TargetDistance = math.huge
                local Target
                for i, v in pairs(game:GetService("Workspace").Mobs:GetChildren()) do
                    for i, v in pairs(v:GetChildren()) do
                        for i, v in pairs(v:GetChildren()) do
                            for i, v in pairs(v:GetChildren()) do
                                if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Head") and table.find(minhalista, v.Name) then
                                    local Mag = (v:GetModelCFrame().Position - getRoot().Position).Magnitude
                                    if Mag < TargetDistance then
                                        TargetDistance = Mag
                                        Target = v
                                    end
                                end
                            end
                        end
                    end
                end
                return Target
            end

            local farm_label = tab_Farm:CreateLabel("AutoFarm Status: ")
            function attfarm(text, bool)
                farm_label:Refresh("AutoFarm Status: " .. text, bool)
            end

            local _vezes = 0
            local _seleciona_o_mob_porra = 0

            tab_Farm:CreateToggle("AutoFarm", function(bool)
                farm_ = bool

                while farm_ and task.wait() do
                    local mobs_selecteds = Mobs()
                    local mob = getNearestMob(mobs_selecteds)

                    if mob then
                        if (mob:GetModelCFrame().p - getRoot().Position).Magnitude > 15 then
                            for i, v in pairs(workspace:GetChildren()) do
                                if v.Name == "Soul" then
                                    for i, v in pairs(v) do
                                        if v:IsA("Part") and v.Name ~= "Handle" then
                                            if (v.Position - getRoot().Position).Magnitude < 30 then
                                                attfarm("Getting Soul ðŸ©¸...")
                                                tp(function()
                                                    return v.Position
                                                end)
                                            end
                                        end
                                    end
                                end
                            end
                            desequipar_soco()
                            attfarm("Teleporting to " .. tostring(mob), true)
                            wait(0.6)
                            tp(function()
                                pcall(function()
                                    spawn(function()
                                        attfarm(string.format("Teleporting... [%sm]",
                                            math.floor((getRoot().Position - mob:GetModelCFrame().p).Magnitude)))
                                    end)
                                end)
                                return mob:GetModelCFrame().p
                            end)
                        else
                            equipar_soco()
                            _vezes = _vezes + 1
                            attfarm(string.format("Hitting %q", string.sub(tostring(mob), 1, 20)))
                            print(tostring(getRoot().Velocity))
                            function pegar_posicao_para_ir(humanoidrootpart_do_npc)
                                local posicao = humanoidrootpart_do_npc.Position
                                local direcao = humanoidrootpart_do_npc.CFrame.LookVector
                                local velocity = humanoidrootpart_do_npc.Velocity
                                if velocity.X > 3 or velocity.Y > 3 or velocity.Z > 3 then
                                    local deslocamento = direcao * 7

                                    posicao = posicao + deslocamento
                                end

                                return posicao
                            end

                            if _vezes <= 10 then
                                getRoot().CFrame = CFrame.new(pegar_posicao_para_ir(mob.HumanoidRootPart) +
                                        Vector3.new(0, (mob_distance or 7) + math.random(1, 3), 0)) *
                                    CFrame.Angles(-90, 0, 0)
                            elseif _vezes <= 20 then
                                getRoot().CFrame = CFrame.new(pegar_posicao_para_ir(mob.HumanoidRootPart) +
                                        Vector3.new(0, ((mob_distance or 7) * -1) + (math.random(1, 3) * -1), 0)) *
                                    CFrame.Angles(90, 0, 0)
                            elseif _vezes > 20 then
                                _vezes = 0
                            end

                            spawn(function()
                                socar()
                            end)
                        end
                    else
                        if #mobs_selecteds == 0 then
                            _seleciona_o_mob_porra = _seleciona_o_mob_porra + 1

                            local num = _seleciona_o_mob_porra
                            local item = ""
                            if num == 1 then
                                item = "/"
                            elseif num == 2 then
                                item = "-"
                            elseif num == 3 then
                                item = "\\"
                            elseif num == 4 then
                                item = "|"
                            elseif num == 5 then
                                _seleciona_o_mob_porra = 0
                            end
                            attfarm(string.format("Please select any mob [%s]", item))
                            wait(0.1)
                        else
                            attfarm("ðŸ‡ºðŸ‡¸: The mob was not found, please wait...", true)
                            wait(2.5)
                            attfarm("ðŸ‡§ðŸ‡·: O Mob nÃ£o foi encontrado, aguarde...", true)
                            wait(2.5)
                        end
                    end
                end
                attfarm("Offline")
            end)

            tab_Farm:CreateToggle("Select Mobs", function(bool)
                menu.Enabled = bool
            end)

            tab_Farm:CreateSlider("AutoFarm Player Distance", 0, 10, function(value)
                mob_distance = value
            end)

            tab_Farm:CreateToggle("Rice Farm", function(bool)
                rice_ = bool

                while rice_ and task.wait() do
                    local rice_selected
                    local dist = math.huge

                    for i, v in pairs(workspace.StarterVillage_RiceStrings:GetChildren()) do
                        if v:IsA("BasePart") then
                            local mag = (v.Position - getRoot().Position).Magnitude

                            if mag < dist then
                                dist = mag
                                rice_selected = v
                            end
                        end
                    end

                    if not speaker.PlayerGui.Menu.Quest.Excess.Visible and get_rice_quest == true then
                        tp(Vector3.new(-109, 282, -1697))
                        KeyEvent("E", true)
                        wait(2)
                        npc_click()
                        KeyEvent("E", false)
                    elseif speaker.PlayerGui.Menu.Quest.Excess.Visible then
                        if rice_selected then
                            local proximity = rice_selected:FindFirstChildWhichIsA("ProximityPrompt")
                            proximity.HoldDuration = 0
                            tp(function()
                                local mag = (rice_selected.Position - getRoot().Position).Magnitude

                                if mag > 15 then
                                    return rice_selected.Position
                                else
                                    return nil
                                end
                            end)
                            getRoot().CFrame = CFrame.new(rice_selected.Position)
                            fireproximityprompt(proximity)
                        else
                            tp(Vector3.new(-115, 283, -1690))
                        end
                    end
                end
            end)

            tab_Farm:CreateToggle("Wagon Farm", function(bool)
                wagon_ = bool

                while wagon_ do
                    if not speaker.PlayerGui.Menu.Quest.Excess.Visible then
                        tp(CFrame.new(223, 283, -1605).p)
                        KeyEvent("E", true)
                        wait(2)
                        npc_click()
                        KeyEvent("E", false)
                        wait(1)
                    else
                        local old_velo = getgenv().tp_velo
                        change_tp_velo(5000)
                        tp(workspace.Wagon_Deposit_Part.Position)
                        wait(1)
                        tp(CFrame.new(223, 283, -1605).p)
                        change_tp_velo(old_velo)
                    end
                end
            end)
            get_rice_quest = true

            --// Teleports \\--
            tab_tp:CreateLabel("Config:")
            tab_tp:CreateSlider("Teleport Velo", 0, 5000, function(value)
                change_tp_velo(value)
            end)

            tab_tp:CreateLabel("Teleports Map:")

            tab_tp:CreateButton("TP Village Kiribating", function()
                Tp2(Vector3.new(120, 282, -1726))
            end)

            tab_tp:CreateButton("TP Village Kabiwaru", function()
                Tp2(Vector3.new(2030, 316, -2960))
            end)

            tab_tp:CreateButton("TP Village Ushumaru", function()
                Tp2(Vector3.new(228, 289, -3259))
            end)

            tab_tp:CreateButton("TP Desert ", function()
                Tp2(Vector3.new(126, 282, -2034))
            end)

            tab_tp:CreateButton("TP Dungeon ", function()
                Tp2(Vector3.new(-1118, 283, -1581))
            end)

            tab_tp:CreateButton("TP Home Jinger", function()
                Tp2(Vector3.new(1799, 334, -3479))
            end)

            tab_tp:CreateButton("TP Ouwbayashi Home", function()
                Tp2(Vector3.new(1540, 316, -4605))
            end)


            function equipar_soco()
                local lp = game.Players.LocalPlayer

                if lp.Backpack:FindFirstChild("Combat") then
                    if lp.Character then
                        lp.Backpack:FindFirstChild("Combat").Parent = lp.Character
                    end
                end
            end

            function desequipar_soco()
                local lp = game.Players.LocalPlayer
                if lp.Character and lp.Character:FindFirstChild("Combat") then
                    lp.Character:FindFirstChild("Combat").Parent = lp.Backpack
                end
            end

            function pegar_combat(nome)
                local lp = game.Players.LocalPlayer
                if lp.Character and lp.Character:FindFirstChild("Combat") then
                    local sc = lp.Character:FindFirstChild("Combat").Normal_Combat

                    local test = getsenv(sc)

                    return test[nome]
                end
            end

            function socar()
                local letra = ""
                local numero = math.random(1, 2)
                letra = numero == 1 and "L" or numero == 2 and "R"
                pcall(function() pegar_combat("do_punch")(letra) end)
            end

            function combo()
                local tab = pegar_combat("do_air_combo")

                tab()
            end

            tab_Others:CreateToggle("Auto Equip Punch", function(bool)
                auto_equip_soco = bool

                if bool then
                    while auto_equip_soco == true and wait() do
                        equipar_soco()
                    end
                    desequipar_soco()
                end
            end)

            tab_Others:CreateToggle("Auto Punch", function(bool)
                auto_punch = bool
                while auto_punch == true and task.wait() do
                    socar()
                end
            end)

            tab_Others:CreateToggle("Auto Combo", function(bool)
                auto_combo = bool

                while auto_combo and task.wait(0.1) do combo() end
            end)

            tab_Others:CreateButton("Infinite Stamina", function()
                notificar("Infinite Stamina", "working", 4)
                getrenv()._G:AddStamina(9e9)
            end)

            tab_Others:CreateButton("Infinite Breath", function()
                notificar("Infinite Breath", "working", 4)
                getrenv()._G:AddBreath(9e9)
            end)

            tab_Others:CreateLabel("Fly Config:")

            tab_Others:CreateButton("Fly [X]", function()
                local mouse = game.Players.LocalPlayer:GetMouse()
                local plr = game.Players.LocalPlayer
                local torso = plr.Character.Head
                local flying = false
                local ctrl = {
                    f = 0,
                    b = 0,
                    l = 0,
                    r = 0
                }
                local maxspeed = 100

                function Fly()
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    local plr = game.Players.LocalPlayer
                    local torso = plr.Character.Head
                    local bg = Instance.new('BodyGyro', torso)
                    bg.P = 10000
                    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    bg.cframe = torso.CFrame
                    local bv = Instance.new('BodyVelocity', torso)
                    bv.velocity = Vector3.new(0, 0.1, 0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

                    flying = true
                    while flying do
                        wait()

                        if ctrl.f + ctrl.b ~= 0 or ctrl.l + ctrl.r ~= 0 then
                            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) +
                                ((game.Workspace.CurrentCamera.CoordinateFrame *
                                        CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0).p) -
                                    game.Workspace.CurrentCamera.CoordinateFrame.p)) * FLYSPEED
                        else
                            bv.velocity = Vector3.new(0, 0.1, 0)
                        end

                        bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                            CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * FLYSPEED / maxspeed), 0, 0)
                    end

                    bg:Destroy()
                    bv:Destroy()
                    plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                end

                mouse.KeyDown:connect(function(key)
                    if key:lower() == 'x' then
                        if flying then
                            flying = false
                        else
                            flying = true
                            Fly()
                        end
                    elseif key:lower() == 'w' then
                        ctrl.f = 1
                    elseif key:lower() == 's' then
                        ctrl.b = -1
                    elseif key:lower() == 'a' then
                        ctrl.l = -1
                    elseif key:lower() == 'd' then
                        ctrl.r = 1
                    end
                end)

                mouse.KeyUp:connect(function(key)
                    if key:lower() == 'w' then
                        ctrl.f = 0
                    elseif key:lower() == 's' then
                        ctrl.b = 0
                    elseif key:lower() == 'a' then
                        ctrl.l = 0
                    elseif key:lower() == 'd' then
                        ctrl.r = 0
                    end
                end)
            end)

            tab_Others:CreateSlider("Fly Normal Speed", 10, 1000, function(v)
                normal_speed = v
            end)

            tab_Others:CreateSlider("Fly Fast Speed [Shift]", 10, 5000, function(v)
                fast_speed = v
            end)
        end

        if game.PlaceId == Jogos["Prison Life"] then
            --// Functions \\--
            getCharacter = function(plr)
                plr = plr or speaker
                local sucess, char = pcall(function()
                    return plr.Character
                end)

                if sucess then
                    return char
                end
                return false
            end
            local time_alived = 0

            spawn(function()
                pcall(function()
                    while true do
                        local started_character = game.Players.LocalPlayer.Character
                        repeat
                            time_alived = time_alived + 1
                            wait(1)
                        until speaker.Health.Value == 0 or (started_character ~= (speaker.Character or speaker.CharacterAdded:wait()))
                        time_alived = 0

                        if (started_character ~= (speaker.Character or speaker.CharacterAdded:wait())) then
                        else
                            speaker.CharacterAdded:wait():WaitForChild("HumanoidRootPart")
                        end
                    end
                end)
            end)
            function get_pistol()
                if FindTool(nil, "M9") then
                    gun_debounce = false
                    return
                end
                local old = getRoot().CFrame
                while not FindTool(nil, "M9") and task.wait() do
                    getRoot().CFrame = CFrame.new(823, 105, 2256)
                    workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(workspace:WaitForChild(
                        "Prison_ITEMS"):WaitForChild("giver"):WaitForChild("M9"):WaitForChild("ITEMPICKUP"))
                end
                getRoot().CFrame = old
            end

            local gun_debounce = false
            function get_gun(gunName)
                while gun_debounce == true do task.wait() end

                local sucess = pcall(function()
                    if gun_debounce == false then
                        gun_debounce = true
                    end
                    if gunName == "M9" then
                        get_pistol()
                    elseif gunName == "Remington 870" then
                        if FindTool(nil, "Remington 870") then
                            gun_debounce = false
                            return
                        end
                        local old = getRoot().CFrame
                        while not FindTool(nil, "Remington 870") and task.wait() do
                            getRoot().CFrame = CFrame.new(823, 105, 2256)
                            workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(workspace
                                :WaitForChild("Prison_ITEMS"):WaitForChild("giver"):WaitForChild("Remington 870")
                                :WaitForChild("ITEMPICKUP"))
                        end
                        getRoot().CFrame = old
                    elseif gunName == "AK-47" then
                        if FindTool(nil, "AK-47") then
                            gun_debounce = false
                            return
                        end
                        local old = getRoot().CFrame
                        while not FindTool(nil, "AK-47") and task.wait() do
                            getRoot().CFrame = CFrame.new(-938, 97, 2056)
                            workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(workspace
                                :WaitForChild("Prison_ITEMS"):WaitForChild("giver"):WaitForChild("AK-47"):WaitForChild(
                                    "ITEMPICKUP"))
                        end
                        getRoot().CFrame = old
                    end
                end)
                gun_debounce = false
            end

            function kill(tab, vezes)
                get_pistol()

                vezes = vezes or 15
                get_pistol()
                if typeof(tab) == "Instance" then
                    tab = { tab }
                end
                local A_2 = FindTool(nil, "M9")
                local Event = game:GetService("ReplicatedStorage").ShootEvent
                local A_1 = {}

                for i, v in pairs(tab) do
                    if getHumanoid(v) and getHumanoid(v).Health > 0 and getRoot(v).Parent:FindFirstChild("Head") then
                        for i = 1, vezes do
                            A_1[#A_1 + 1] = {
                                ["RayObject"] = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 0, 0)),
                                ["Distance"] = 0,
                                ["Cframe"] = CFrame.new(0, 0, 0),
                                ["Hit"] = getRoot(v).Parent:FindFirstChild("Head")
                            }
                        end
                    end
                end

                Event:FireServer(A_1, A_2)
                reload_pistol()
            end

            function bring(tab)
                if typeof(tab) ~= "table" then
                    tab = { tab }
                end

                for _, target in pairs(tab) do
                    get_pistol()
                    local old = getRoot().CFrame

                    local Pistol = FindTool(nil, "M9")

                    undo_humanoid()
                    local start_ = tick()
                    delay(1, function()
                        Pistol.Parent = getRoot().Parent
                    end)
                    repeat
                        getRoot(target).CFrame = getRoot().CFrame
                        task.wait()
                    until tick() - start_ > 6 or Pistol.Parent == getRoot(target).Parent
                end
            end

            function reload_pistol()
                game:GetService("ReplicatedStorage").ReloadEvent:FireServer(FindTool(nil, "M9"))
            end

            local debounce_team = true
            function change_team(team)
                repeat task.wait() until debounce_team
                debounce_team = false
                if team == "Criminal" or team == "Really red" then
                    local old = workspace["Criminals Spawn"]:GetChildren()[1]
                    local old_cf = old.CFrame
                    while task.wait() and tostring(speaker.TeamColor) ~= "Really red" do
                        old.CFrame = getRoot().CFrame
                        old.CanTouch = true
                        old.Transparency = 1
                        old.CanCollide = false
                    end
                    old.CFrame = old_cf
                    old.CanTouch = false
                    debounce_team = true
                    return
                end
                local Event = game:GetService("Workspace").Remote.TeamEvent
                local A_1 = team
                if team == "Bright blue" then
                    local guards = {}

                    for i, v in pairs(game.Players:GetChildren()) do
                        if tostring(v.TeamColor) == "Bright blue" then
                            guards[#guards + 1] = v
                        end
                    end

                    if #guards < 8 then
                    else
                        notificar("Guards Team", "is full", 1, 3)
                        debounce_team = true
                        return
                    end
                end
                local old_cf = getRoot().CFrame
                spawn(function()
                    local oldChar = speaker.Character
                    repeat wait() until oldChar ~= (speaker.Character)
                    while true and task.wait() do
                        local sucess = pcall(function()
                            getRoot().CFrame = old_cf
                        end)

                        if sucess then
                            break
                        end
                    end
                    debounce_team = true
                end)
                Event:FireServer(A_1)
            end

            function undo_humanoid()
                pcall(function()
                    for i, v in pairs(getRoot(speaker).Parent:GetChildren()) do if v:IsA('Accessory') then v:Destroy() end end
                    getHumanoid().Name = 1
                    local clone = game.Players.LocalPlayer.Character["1"]:Clone()
                    game.Players.LocalPlayer.Character["1"]:Destroy()
                    game.Players.LocalPlayer.Character.Animate.Disabled = true
                    wait()
                    clone.Parent = game.Players.LocalPlayer.Character
                    clone.Name = "Humanoid"
                end)
            end

            function hasBaconHair(player)
                local humanoid = player.Character and player.Character
                if humanoid then
                    local baconHair = humanoid:FindFirstChild("Pal Hair")
                    if baconHair then
                        return true
                    end
                end
                return false
            end

            --// Tab Creator \\--

            local Main_ = moretti:CreateTab("Main")
            local Teleports_ = moretti:CreateTab("Teleports")
            local Target_ = moretti:CreateTab("Freatures")
            local Combat_ = moretti:CreateTab("Combat")
            local Team_ = moretti:CreateTab("Team")

            local fly_config = {
                Normal = 20,
                Fast = 80
            }

            --// Main \\--

            Main_:CreateButton('Fly',
                function()
                    notificar("Fly is active", "Press [x] to start/stop", 1, 3)
                    FLYSPEED = fly_config.Normal
                    game:GetService('UserInputService').InputBegan:Connect(function(a, b)
                        if b then return end
                        if a.KeyCode == Enum.KeyCode.LeftShift then FLYSPEED = fly_config.Fast end
                    end)
                    game:GetService('UserInputService').InputEnded:Connect(function(a, b)
                        if b then return end
                        if a.KeyCode == Enum.KeyCode.LeftShift then FLYSPEED = fly_config.Normal end
                    end)
                    repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild('Head') and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    repeat wait() until mouse
                    local plr = game.Players.LocalPlayer
                    local torso = plr.Character.Head
                    local flying = false
                    local deb = true
                    local ctrl = { f = 0, b = 0, l = 0, r = 0 }
                    local lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                    local maxspeed = 5000
                    local speed = 5000
                    function Fly()
                        local bg = Instance.new('BodyGyro', torso)
                        bg.P = 10000
                        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                        bg.cframe = torso.CFrame
                        local bv = Instance.new('BodyVelocity', torso)
                        bv.velocity = Vector3.new(0, 0.1, 0)
                        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
                        repeat
                            wait()
                            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                            if ctrl.l + ctrl.r ~= 100000 or ctrl.f + ctrl.b ~= 10000 then
                                speed = speed + .0 + (speed / maxspeed)
                                if speed > maxspeed then speed = maxspeed end
                            elseif not (ctrl.l + ctrl.r ~= 5 or ctrl.f + ctrl.b ~= 5) and speed ~= 5 then
                                speed = speed - 5
                                if speed > 5 then speed = -2 end
                            end
                            if (ctrl.l + ctrl.r) ~= 5 or (ctrl.f + ctrl.b) ~= 5 then
                                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                    speed
                                lastctrl = { f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r }
                            elseif (ctrl.l + ctrl.r) == 5 and (ctrl.f + ctrl.b) == 5 and speed ~= 5 then
                                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                    speed
                            else
                                bv.velocity = Vector3.new(0, 0.1, 0)
                            end
                            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                                CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
                        until not flying
                        ctrl = { f = 0, b = 0, l = 0, r = 0 }
                        lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                        speed = 5
                        bg:Destroy()
                        bv:Destroy()
                        plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                    end

                    mouse.KeyDown:connect(function(key)
                        if key:lower() == 'x' then
                            if flying then
                                flying = false
                            else
                                flying = true
                                if true then Fly() end
                            end
                        elseif key:lower() == 'w' then
                            ctrl.f = FLYSPEED
                        elseif key:lower() == 's' then
                            ctrl.b = -
                                FLYSPEED
                        elseif key:lower() == 'a' then
                            ctrl.l = -FLYSPEED
                        elseif key:lower() == 'd' then
                            ctrl.r =
                                FLYSPEED
                        end
                    end)
                    mouse.KeyUp:connect(function(key) if key:lower() == 'w' then ctrl.f = 0 elseif key:lower() == 's' then ctrl.b = 0 elseif key:lower() == 'a' then ctrl.l = 0 elseif key:lower() == 'd' then ctrl.r = 0 end end)
                    speaker.CharacterAdded:Connect(function(cr)
                        cr:WaitForChild('HumanoidRootPart')
                        wait(1)
                        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild('Head') and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
                        local mouse = game.Players.LocalPlayer:GetMouse()
                        repeat wait() until mouse
                        local plr = game.Players.LocalPlayer
                        local torso = plr.Character.Head
                        local flying = false
                        local deb = true
                        local ctrl = { f = 0, b = 0, l = 0, r = 0 }
                        local lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                        local maxspeed = 5000
                        local speed = 5000
                        function Fly()
                            local bg = Instance.new('BodyGyro', torso)
                            bg.P = 10000
                            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                            bg.cframe = torso.CFrame
                            local bv = Instance.new('BodyVelocity', torso)
                            bv.velocity = Vector3.new(0, 0.1, 0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
                            repeat
                                wait()
                                plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                                if ctrl.l + ctrl.r ~= 100000 or ctrl.f + ctrl.b ~= 10000 then
                                    speed = speed + .0 + (speed / maxspeed)
                                    if speed > maxspeed then speed = maxspeed end
                                elseif not (ctrl.l + ctrl.r ~= 5 or ctrl.f + ctrl.b ~= 5) and speed ~= 5 then
                                    speed = speed - 5
                                    if speed > 5 then speed = -2 end
                                end
                                if (ctrl.l + ctrl.r) ~= 5 or (ctrl.f + ctrl.b) ~= 5 then
                                    bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        speed
                                    lastctrl = { f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r }
                                elseif (ctrl.l + ctrl.r) == 5 and (ctrl.f + ctrl.b) == 5 and speed ~= 5 then
                                    bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        speed
                                else
                                    bv.velocity = Vector3.new(0, 0.1, 0)
                                end
                                bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                                    CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
                            until not flying
                            ctrl = { f = 0, b = 0, l = 0, r = 0 }
                            lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                            speed = 5
                            bg:Destroy()
                            bv:Destroy()
                            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                        end

                        mouse.KeyDown:connect(function(key)
                            if key:lower() == 'x' then
                                if flying then
                                    flying = false
                                else
                                    flying = true
                                    if true then Fly() end
                                end
                            elseif key:lower() == 'w' then
                                ctrl.f = FLYSPEED
                            elseif key:lower() == 's' then
                                ctrl.b = -
                                    FLYSPEED
                            elseif key:lower() == 'a' then
                                ctrl.l = -FLYSPEED
                            elseif key:lower() == 'd' then
                                ctrl.r =
                                    FLYSPEED
                            end
                        end)
                        mouse.KeyUp:connect(function(key) if key:lower() == 'w' then ctrl.f = 0 elseif key:lower() == 's' then ctrl.b = 0 elseif key:lower() == 'a' then ctrl.l = 0 elseif key:lower() == 'd' then ctrl.r = 0 end end)
                    end)
                    fly_config.Active = true
                    Fly()
                end)

            Main_:CreateToggle("Auto Respawn", function(bool)
                autorespawn_ = bool

                spawn(function()
                    while task.wait() and autorespawn_ do
                        repeat wait() until getHumanoid().Health == 0 or autorespawn_ == false
                        if autorespawn_ == false then
                            return
                        end
                        local old_cf = getRoot().CFrame
                        local old_char = getCharacter()
                        local old_team = tostring(speaker.TeamColor)
                        if old_team == "Really red" then
                            change_team("Bright orange")
                            change_team("Really red")
                        else
                            change_team("Bright orange")
                            change_team(old_team)
                        end
                    end
                end)
            end)

            Main_:CreateToggle("Walk Speed Enabled", function(bool)
                walk_bool = bool
                if not walk_value then
                    notificar("Error", "Change a value First.", 3, 2)
                end
                spawn(function()
                    while walk_bool and task.wait() do
                        getHumanoid().WalkSpeed = walk_value
                    end
                    getHumanoid().WalkSpeed = 16
                end)
            end)

            Main_:CreateSlider("Walk Speed", 16, 100, function(value)
                walk_value = value
            end)

            Main_:CreateToggle("Jump Power Enabled", function(bool)
                jump_bool = bool
                if not jump_value then
                    notificar("Error", "Change a value First.", 3, 2)
                end
                spawn(function()
                    while jump_bool and task.wait() do
                        getHumanoid().JumpPower = jump_value
                    end
                    getHumanoid().JumpPower = 50
                end)
            end)

            Main_:CreateSlider("Jump Power", 50, 250, function(value)
                jump_value = value
            end)

            --// Target \\--

            Teleports_:CreateLabel("Teleports")

            Teleports_:CreateButton("Criminal Base", function()
                getRoot().CFrame = CFrame.new(-907, 95, 2140)
            end)

            Teleports_:CreateButton("Prison yard", function()
                getRoot().CFrame = CFrame.new(783, 98, 2473)
            end)

            Teleports_:CreateButton("Prison Cells", function()
                getRoot().CFrame = CFrame.new(917, 100, 2448)
            end)

            Teleports_:CreateButton("Police Base", function()
                getRoot().CFrame = CFrame.new(835, 100, 2320)
            end)

            Teleports_:CreateButton("Police Car", function()
                getRoot().CFrame = CFrame.new(616, 98, 2507)
            end)

            Teleports_:CreateButton("City", function()
                getRoot().CFrame = CFrame.new(-377, 54, 1678)
            end)





            local user_selected = Target_:CreateLabel("Player Selected: nil")
            Target_:CreateBox("Username", function(text)
                target = FindPlayer(text)

                if target then
                    user_selected:Refresh("Player Selected: " .. target.Name)
                    notificar("Target", tostring(target), 1, 3)
                else
                    notificar("Target", text .. " is not a valid player.", 3, 3)
                end
            end)


            local fire_repetion = 40


            Target_:CreateLabel("Target Options:")

            Target_:CreateButton("Select Nearest Player", function()
                target = getNearest(false)

                if target then
                    user_selected:Refresh("Player Selected: " .. target.Name)
                    notificar("Target", tostring(target), 1, 3)
                end
            end)

            Target_:CreateButton("Kill Target", function()
                local local_color = tostring(speaker.TeamColor)
                local other_color = tostring(target.TeamColor)
                local mudou = false

                if local_color == other_color then
                    if other_color == "Bright orange" then
                        change_team("Criminal")
                        mudou = true
                    elseif other_color == "Bright blue" then
                        change_team("Bright orange")
                        mudou = true
                    elseif other_color == "Really red" then
                        change_team("Bright orange")
                        mudou = true
                    end
                end

                kill(target)
                if mudou == true then
                    change_team(local_color)
                end
            end)


            Target_:CreateButton("Tp Target", function()
                getRoot().CFrame = getRoot(target).CFrame
            end)

            Target_:CreateToggle("View", function(bool)
                view_ = bool
                if bool then
                    spawn(function()
                        while view_ and task.wait() do
                            pcall(function()
                                workspace.CurrentCamera.CameraSubject = getRoot(target)
                            end)
                        end
                        workspace.CurrentCamera.CameraSubject = getRoot().Parent
                    end)
                end
            end)

            Target_:CreateToggle("Fling", function(bool)
                fling_ = bool

                if bool then
                    fling_cf = getRoot().CFrame

                    spawn(function()
                        while fling_ and task.wait() do
                            getRoot().CFrame = getRoot(target).CFrame
                            getRoot().Velocity = Vector3.new(9e9, 9e9, 9e9)
                        end
                        repeat
                            for i = 1, 30 do
                                getRoot().CFrame = fling_cf
                                getRoot().Velocity = Vector3.new(0, 0, 0)
                                task.wait()
                            end
                            wait(0.2)
                        until (getRoot().Position - fling_cf.Position).Magnitude < 10
                    end)
                end
            end)

            Target_:CreateLabel("All Options")



            local Polices = false
            local Criminals = false
            local Prisoners = false
            local Bacons = false


            Flags["Kill all"] = function()
                local Policiais = {}
                local Prisoneiros = {}
                local Criminais = {}


                local New_Team = ""
                local Old_Team = tostring(speaker.TeamColor)
                local Mudou = false
                local function getTeam()
                    return tostring(speaker.TeamColor)
                end
                local method = 1
                pcall(function()
                    for i, v in pairs(game.Players:GetChildren()) do
                        if v ~= speaker then
                            local Team = tostring(v.TeamColor)
                            local adc = false

                            if Team == "Bright blue" and Polices then
                                Policiais[#Policiais + 1] = v
                            end

                            if Team == "Bright orange" and Prisoners then
                                Prisoneiros[#Prisoneiros + 1] = v
                            end

                            if Team == "Really red" and Criminals then
                                Criminais[#Criminais + 1] = v
                            end
                        end
                    end
                end)

                if #Criminais > 0 then
                    if tostring(speaker.TeamColor) == "Really red" then
                        change_team("Bright orange")
                        Mudou = true
                    end

                    kill(Criminais)
                    Criminais = {}
                    wait(0.1)
                end

                if #Policiais > 0 then
                    if getTeam() == "Bright blue" or getTeam() == "Bright orange" then
                        change_team("Really red")
                        Mudou = true
                    end

                    if #Prisoneiros > 0 then
                        kill(Prisoneiros)
                        kill(Policiais)
                        Prisoneiros = {}
                        Policiais = {}
                        wait(0.1)
                    else
                        kill(Policiais)
                        Policiais = {}
                        wait(0.1)
                    end
                end

                if #Prisoneiros > 0 then
                    if getTeam() == "Bright orange" then
                        change_team("Criminal")
                        Mudou = true
                    end

                    kill(Prisoneiros)
                    Prisoneiros = {}
                    wait(0.1)
                end




                if Mudou == true then
                    change_team(Old_Team)
                end
            end

            Target_:CreateButton("Kill Polices", function()
                Criminals = false
                Prisoners = false
                Polices = true
                flags("Kill all")
            end)

            Target_:CreateButton("Kill Criminals", function()
                Criminals = true
                Prisoners = false
                Polices = false
                flags("Kill all")
            end)

            Target_:CreateButton("Kill Prisoners", function()
                Criminals = false
                Prisoners = true
                Polices = false
                flags("Kill all")
            end)

            Target_:CreateButton("Kill All", function()
                Criminals = true
                Prisoners = true
                Polices = true
                flags("Kill all")
            end)





            --// Combat \\--

            local To_loop = {
                {
                    "M9",
                    NewTab = {
                        [1] = "FireRate",
                        [2] = "MaxAmmo",
                        [3] = "CurrentAmmo",
                        [4] = "Damage"
                    }
                },
                {
                    "AK-47",
                    NewTab = {
                        [1] = "FireRate",
                        [2] = "MaxAmmo",
                        [3] = "CurrentAmmo",
                        [4] = "Damage"
                    }
                },
                {
                    "Remington 870",
                    NewTab = {
                        [1] = "FireRate",
                        [2] = "MaxAmmo",
                        [3] = "CurrentAmmo",
                    }
                },

            }

            Combat_:CreateLabel("Guns Mod")

            Combat_:CreateToggle("Auto Reload", function(bool)
                auto_reload = bool
                if bool then
                    spawn(function()
                        pcall(function()
                            while auto_reload do
                                local Guns = {}

                                for i, v in pairs(getRoot().Parent:GetChildren()) do
                                    if v:IsA("Tool") then
                                        Guns[#Guns + 1] = v
                                    end
                                end

                                for i, v in pairs(Guns) do
                                    game:GetService("ReplicatedStorage").ReloadEvent:FireServer(v)
                                end
                                task.wait()
                            end
                        end)
                    end)
                end
            end)

            Combat_:CreateToggle("Auto Get Guns", function(bool)
                auto_get_guns = bool

                spawn(function()
                    while auto_get_guns do
                        pcall(function()
                            get_gun("M9")
                            get_gun("Remington 870")
                            get_gun("AK-47")
                        end)
                        task.wait()
                    end
                end)
            end)

            local Silent_Aim_ = false

            Combat_:CreateToggle("Silent Aim", function(bool)
                Silent_Aim_ = bool
                notificar("Silent aim", bool and "online" or "offline", bool and 1 or 3, 3)
            end)

            local GunsChanges = {
                ["Remington 870"] = {
                    CurrentAmmo = 9e9,
                    MaxAmmo = 9e9,
                    AutoFire = true,
                    FireRate = 0,
                },
                ["M9"] = {
                    CurrentAmmo = 9e9,
                    MaxAmmo = 9e9,
                    AutoFire = true,
                    FireRate = 0,
                },
                ["AK-47"] = {
                    CurrentAmmo = 9e9,
                    MaxAmmo = 9e9,
                    AutoFire = true,
                    FireRate = 0,
                },
            }

            for i, v in pairs(GunsChanges) do
                Combat_:CreateButton("Full " .. i .. " changes", function()
                    local Gun = FindTool(nil, i)

                    if Gun then
                        local mod = require(Gun.GunStates)

                        for _, state in pairs(v) do
                            mod[_] = state
                        end
                    end
                end)
            end

            --// Team \\--
            Team_:CreateLabel("Team Changer")

            Team_:CreateButton("Prisoner", function()
                change_team("Bright orange")
            end)

            Team_:CreateButton("Police", function()
                change_team("Bright blue")
            end)

            Team_:CreateButton("Criminal", function()
                change_team("Criminal")
            end)
            local old_
            local Player_
            local head_Pos
            local local_cf
            local NewRay
            spawn(function()
                while true do
                    pcall(function()
                        if getNearestToMouse(500, false) and getNearestToMouse(120, false).Character and getNearestToMouse(500, false).Character:FindFirstChild("Head") then
                            Player_ = getNearestToMouse(500, false)
                            head_Pos = getNearestToMouse(500, false).Character.Head.Position
                            local_cf = (getRoot() and getRoot().Position) or Vector.zero
                            NewRay = Ray.new(CFrame.new(local_cf), CFrame.new(head_Pos))
                        else
                            Player_ = nil
                            head_Pos = nil
                        end
                    end)
                    task.wait()
                end
            end)


            old_ = hookmetamethod(game, "__namecall", function(self, ...)
                local args = { ... }

                if getnamecallmethod() == "FireServer" and tostring(self) == "ShootEvent" and head_Pos and Player_ and Silent_Aim_ then
                    args[1][1]["Hit"] = Player_.Character.Head
                end

                return old_(self, unpack(args))
            end)
            notificar("Macro X", "Prison Life loaded!", 1, 3)
        end

        if game.PlaceId == Jogos["Demon Fall Original"] then --Demon Fall
            spawn(function()
                while true do
                    game:GetService("UserInputService").MouseIconEnabled = true
                    task.wait(.1)
                end
            end)
            local time_alived = 0
            local anti_void = false
            local minY = -244
            local targetY = 414

            local function checkY()
                local character = game.Players.LocalPlayer.Character

                local current = character.HumanoidRootPart.CFrame
                if current.Y < minY and anti_void then
                    current = current + Vector3.new(0, math.abs(current.Y) + targetY, 0)

                    character.HumanoidRootPart.CFrame = current
                    character.HumanoidRootPart.Velocity = Vector3.new(0, 15, 0)
                end
            end


            game:GetService("RunService").Heartbeat:Connect(checkY)
            spawn(function()
                pcall(function()
                    while true do
                        local started_character = game.Players.LocalPlayer.Character
                        repeat
                            time_alived = time_alived + 1
                            wait(1)
                        until speaker.Health.Value == 0 or (started_character ~= (speaker.Character or speaker.CharacterAdded:wait()))
                        time_alived = 0

                        if (started_character ~= (speaker.Character or speaker.CharacterAdded:wait())) then
                        else
                            speaker.CharacterAdded:wait():WaitForChild("HumanoidRootPart")
                        end
                    end
                end)
            end)
            local reached_tp = false
            function transformar(vector)
                return Vector3.new(vector.X, 550, vector.Z)
            end

            function change_tp_velo(value)
                getgenv().tp_velo = value
            end

            change_tp_velo(140)
            local debounce = false
            function tp(vector)
                if debounce then
                    repeat task.wait() until debounce == false
                end
                if debounce == false then
                    debounce = true
                end
                local func
                if typeof(vector) == "function" then
                    func = vector
                    vector = func()
                end
                Flags["ragdoll"](true)
                local reached_tp = false

                local humanoidRootPart = getRoot()


                local bodyPosition = Instance.new("BodyPosition")
                bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyPosition.D = 500
                bodyPosition.P = 150000


                bodyPosition.Position = humanoidRootPart.Position
                bodyPosition.Parent = humanoidRootPart


                bodyPosition.Name = ""
                noclip(true)
                Flags["ragdoll"](true)
                local last_diff = 9e9
                local travou = false
                while true and task.wait(0.01) do
                    if travou == true then
                        bodyPosition.Position = getRoot().Position
                    else
                        local diff = (getRoot().Position - ((func and func()) or vector))
                        if diff.Magnitude > last_diff and ((diff.Magnitude - last_diff) > 5) then
                            bodyPosition.Position = getRoot().Position
                            local old_tp = getgenv().tp_velo
                            travou = true
                            last_diff = diff.Magnitude
                            notificar("Security Detected", "Waiting 5 Seconds...", 2, 3)
                            delay(5, function()
                                travou = false
                            end)
                        else
                            last_diff = diff.Magnitude
                        end

                        bodyPosition.Position = getRoot().Position -
                            diff.Unit * math.min(0.01 * getgenv().tp_velo, diff.Magnitude)
                        getRoot().Velocity = Vector3.new(0, 0, 0)
                        if diff.Magnitude < 1 then
                            reached_tp = true
                            break
                        end
                    end
                end
                bodyPosition:Destroy()
                debounce = false
                while reached_tp == false and task.wait() and speaker:FindFirstChild("Health").Value ~= 0 do end
                noclip(false)
            end

            function getAnswer(number)
                return game.Players.LocalPlayer.PlayerGui.Interface.Dialogue.Answers:GetChildren()[number + 1] or false
            end

            local old = tp
            tp = function(vector)
                if debounce == true then
                    repeat task.wait() until debounce == false
                end
                getRoot().CFrame = CFrame.new(transformar(getRoot().Position))
                old(transformar((typeof(vector) == "function" and vector()) or vector))
                getRoot().CFrame = CFrame.new((typeof(vector) == "function" and vector()) or vector)
            end
            getgenv().tp = tp
            local tab_Auto = moretti:CreateTab('Farm')
            local tab_Combat = moretti:CreateTab('Combat')
            local tab_tp = moretti:CreateTab('Map Teleports')
            local tab_Others = moretti:CreateTab('Others')
            local tab_Credits = moretti:CreateTab('Credits')
            local AUTO_STATUS = tab_Auto:CreateLabel("Status: ")

            local Respirando = false
            function Respirar(bool)
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Async"):FireServer(
                    "Character", 'Breath', bool)
            end

            function status_auto(text, num)
                AUTO_STATUS:Refresh("Status: " .. string.sub(text, 1, 1):upper() .. string.sub(text, 2, 99))
                if num then
                    delay(num, function()
                        AUTO_STATUS:Refresh("Status: ")
                    end)
                end
            end

            getgenv().status_auto = status_auto
            local already = {}
            function get_proximity_trinkets()
                local result
                local get
                local dist = 9e9
                for i, v in pairs(workspace:GetChildren()) do
                    if v:FindFirstChild("PickableItem") and not table.find(already, v.PickableItem) and v:FindFirstChild("Spawn") and v:FindFirstChild("Part") and (v:FindFirstChild("Part").Position - getRoot().Position).Magnitude < dist then
                        dist = (v:FindFirstChild("Part").Position - getRoot().Position).Magnitude
                        result = v:FindFirstChild("Part")
                        local replicatedStorage = game:GetService("ReplicatedStorage")
                        local asyncRemote = replicatedStorage.Remotes.Async

                        local part = v:FindFirstChild("Part")

                        get = function()
                            if (part.Position - getRoot().Position).Magnitude < 25 then
                                local start_time = os.clock()
                                local tempo_maximo = 1
                                repeat
                                    wait(0.3)
                                    asyncRemote:FireServer("Character", "Interaction", part)
                                until os.clock() - start_time >= tempo_maximo or (part.Position - getRoot().Position).Magnitude > 25
                            end
                            return false
                        end
                    end
                end
                return result, get
            end

            local farmingEnabled = false


            local mob_list = {
                -- Demon List
                "Green Demon",
                "GenericOni",
                "FrostyOni",
                "Blue Demon",
                "SlayerBoss",
                "Lower Moon 3",
                "Kaigaku",
                "Gyutaro",
                "Okuro",


                -- Slayer List
                "GenericSlayer",
                "Zenitsu",
            }

            local selecteds = {}
            local Other_Menu

            spawn(function()
                Other_Menu = Instance.new("ScreenGui")
                local Name = Other_Menu
                local Background = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local Title = Instance.new("TextLabel")
                local SubTitle = Instance.new("TextLabel")
                local Shadow = Instance.new("Frame")
                local DropShadow = Instance.new("ImageLabel")
                local TextLabel = Instance.new("TextLabel")
                local TabContainer = Instance.new("Frame")
                local UICorner_2 = Instance.new("UICorner")
                local UIListLayout = Instance.new("UIListLayout")
                local ScrollingFrame = Instance.new("ScrollingFrame")
                local Toggle = Instance.new("TextButton")
                local UICorner_3 = Instance.new("UICorner")
                local Title_2 = Instance.new("TextLabel")
                local UIPadding = Instance.new("UIPadding")
                local Toggle_2 = Instance.new("Frame")
                local UICorner_4 = Instance.new("UICorner")
                local ImageLabel = Instance.new("ImageLabel")
                local Logo = Instance.new("ImageButton")
                local SubTitle_2 = Instance.new("TextLabel")


                Name.Name = "MacroX UI"
                Name.Parent = game.CoreGui
                Name.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                Name.Enabled = false

                Background.Name = "Background"
                Background.Parent = Name
                Background.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
                Background.Position = UDim2.new(0.470526636, 0, 0.325578243, 0)
                Background.Size = UDim2.new(0, 292, 0, 440)
                Background.SizeConstraint = Enum.SizeConstraint.RelativeYY
                MakeDraggAble(Background, Background)

                UICorner.CornerRadius = UDim.new(0, 5)
                UICorner.Parent = Background

                Title.Name = "Title"
                Title.Parent = Background
                Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Title.BackgroundTransparency = 1.000
                Title.Position = UDim2.new(0.173100919, 0, 0.0277554244, 0)
                Title.Size = UDim2.new(0, 42, 0, 33)
                Title.Font = Enum.Font.ArialBold
                Title.Text = "Macro X"
                Title.TextColor3 = Color3.fromRGB(165, 0, 191)
                Title.TextSize = 20.000
                Title.TextXAlignment = Enum.TextXAlignment.Left

                SubTitle.Name = "SubTitle"
                SubTitle.Parent = Background
                SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SubTitle.BackgroundTransparency = 1.000
                SubTitle.Position = UDim2.new(0.430000007, 0, 0.0280000009, 0)
                SubTitle.Size = UDim2.new(0, 110, 0, 33)
                SubTitle.Font = Enum.Font.ArialBold
                SubTitle.Text = "Hub"
                SubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                SubTitle.TextSize = 20.000
                SubTitle.TextXAlignment = Enum.TextXAlignment.Left

                Shadow.Name = "Shadow"
                Shadow.Parent = Background
                Shadow.BackgroundTransparency = 1.000
                Shadow.BorderSizePixel = 0
                Shadow.Size = UDim2.new(1, 0, 1.00227785, 0)
                Shadow.ZIndex = 0

                DropShadow.Name = "DropShadow"
                DropShadow.Parent = Shadow
                DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
                DropShadow.BackgroundTransparency = 1.000
                DropShadow.BorderSizePixel = 0
                DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
                DropShadow.Size = UDim2.new(1, 47, 1, 47)
                DropShadow.ZIndex = 0
                DropShadow.Image = "rbxassetid://6014261993"
                DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
                DropShadow.ImageTransparency = 0.500
                DropShadow.ScaleType = Enum.ScaleType.Slice
                DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

                TextLabel.Parent = Background
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.Position = UDim2.new(0.792727113, 0, 0.0277554244, 0)
                TextLabel.Size = UDim2.new(0, 60, 0, 33)
                TextLabel.Font = Enum.Font.Unknown
                TextLabel.Text = ""
                TextLabel.TextColor3 = Color3.fromRGB(75, 75, 75)
                TextLabel.TextSize = 20.000

                TabContainer.Name = "Tab Container"
                TabContainer.Parent = Background
                TabContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                TabContainer.Position = UDim2.new(0.0181817878, 0, 0.138777018, 0)
                TabContainer.Size = UDim2.new(0, 281, 0, 371)

                UICorner_2.CornerRadius = UDim.new(0, 4)
                UICorner_2.Parent = TabContainer

                UIListLayout.Parent = TabContainer
                UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                ScrollingFrame.Parent = TabContainer
                ScrollingFrame.Active = true
                ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ScrollingFrame.BackgroundTransparency = 1.000
                ScrollingFrame.BorderSizePixel = 0
                ScrollingFrame.Position = UDim2.new(-0.128113881, 0, 0.146739125, 0)
                ScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
                ScrollingFrame.ScrollBarThickness = 5

                Toggle.Name = "Toggle"
                Toggle.Parent = ScrollingFrame
                Toggle.BackgroundColor3 = Color3.fromRGB(252, 181, 101)
                Toggle.BackgroundTransparency = 1.000
                Toggle.Size = UDim2.new(0, 266, 0, 25)
                Toggle.Selected = true
                Toggle.Font = Enum.Font.Gotham
                Toggle.Text = ""
                Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                Toggle.TextSize = 15.000
                Toggle.Visible = false
                Toggle.TextXAlignment = Enum.TextXAlignment.Left

                UICorner_3.CornerRadius = UDim.new(0, 4)
                UICorner_3.Parent = Toggle

                Title_2.Name = "Title"
                Title_2.Parent = Toggle
                Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Title_2.BackgroundTransparency = 1.000
                Title_2.Size = UDim2.new(0, 266, 0, 25)
                Title_2.Font = Enum.Font.Gotham
                Title_2.Text = "Mob Name"
                Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title_2.TextSize = 15.000
                Title_2.TextXAlignment = Enum.TextXAlignment.Left

                UIPadding.Parent = Title_2
                UIPadding.PaddingLeft = UDim.new(0, 10)

                Toggle_2.Name = "Toggle"
                Toggle_2.Parent = Toggle
                Toggle_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                Toggle_2.Position = UDim2.new(0.9297297, 0, 0.0799999982, 0)
                Toggle_2.Size = UDim2.new(0, 20, 0, 20)

                UICorner_4.CornerRadius = UDim.new(0, 5)
                UICorner_4.Parent = Toggle_2

                ImageLabel.Parent = Toggle_2
                ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
                ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ImageLabel.BackgroundTransparency = 1.000
                ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
                ImageLabel.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
                ImageLabel.Image = "rbxassetid://13230535883"
                ImageLabel.ImageTransparency = 1.000

                Logo.Name = "Logo"
                Logo.Parent = Background
                Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Logo.BackgroundTransparency = 1.000
                Logo.Position = UDim2.new(0.0181819964, 0, 0.0030839399, 0)
                Logo.Size = UDim2.new(0, 49, 0, 54)
                Logo.Image = "rbxassetid://13231015083"

                SubTitle_2.Name = "SubTitle"
                SubTitle_2.Parent = Background
                SubTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SubTitle_2.BackgroundTransparency = 1.000
                SubTitle_2.Position = UDim2.new(0.556712329, 0, 0.0280000009, 0)
                SubTitle_2.Size = UDim2.new(0, 110, 0, 33)
                SubTitle_2.Font = Enum.Font.ArialBold
                SubTitle_2.Text = "[Select]"
                SubTitle_2.TextColor3 = Color3.fromRGB(255, 0, 0)
                SubTitle_2.TextSize = 20.000
                SubTitle_2.TextXAlignment = Enum.TextXAlignment.Left
                function Invis(button, bool)
                    if v:IsA("ImageLabel") and v.Name == "ImageLabel" and v.Parent.Name == "Toggle" then
                        return
                    end
                    pcall(function()
                        game:GetService("TweenService"):Create(button,
                            TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                            { BackgroundTransparency = bool and 0 or 1 }):Play()
                    end)
                    pcall(function()
                        game:GetService("TweenService"):Create(button,
                            TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                            { TextTransparency = bool and 0 or 1 }):Play()
                    end)
                    pcall(function()
                        game:GetService("TweenService"):Create(button,
                            TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                            { ImageTransparency = bool and 0 or 1 }):Play()
                    end)
                    game.Debris:AddItem(button, 3)
                end

                Instance.new("UIListLayout", ScrollingFrame)
                for i, v in pairs(mob_list) do
                    local Clone = Toggle:Clone()
                    Clone.Parent = ScrollingFrame
                    Clone.Visible = true
                    local clicou = false
                    Clone.Toggle.ImageLabel.ImageTransparency = 1
                    Clone.Title.Text = v
                    local Stroke = Instance.new("UIStroke", Clone.Toggle)
                    Stroke.Color = Color3.fromRGB(165, 0, 191)
                    Stroke.Thickness = 1
                    Stroke.Enabled = true
                    Stroke.LineJoinMode = Enum.LineJoinMode.Round
                    Stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual
                    Clone.MouseButton1Click:Connect(function()
                        clicou = not clicou
                        game:GetService("TweenService"):Create(Clone.Toggle.ImageLabel, TweenInfo.new(0.5),
                            { ImageTransparency = clicou and 0 or 1 }):Play()
                        local b = clicou
                        if b then
                            notificar("Mob List", "Added " .. v, 1, 3)
                            table.insert(selecteds, #selecteds + 1, v)
                        else
                            notificar("Mob List", "Removed " .. v, 1, 3)
                            table.remove(selecteds, table.find(selecteds, v))
                        end
                    end)
                end
            end)


            local function getMob()
                local dist, mob = math.huge
                for i, v in pairs(workspace:GetChildren()) do
                    if v:IsA("Model") and table.find(selecteds, v.Name) then
                        local get_mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:GetModelCFrame().p)
                            .magnitude
                        if get_mag < dist then
                            dist = get_mag
                            mob = v
                        end
                    end
                end
                return mob
            end


            tab_Auto:CreateToggle('Auto Farm', function(a)
                farmingEnabled = a
                if trinkets_farm then
                    flags("auto farm2", false)
                end

                if farmingEnabled and #selecteds == 0 then
                    status_auto("Select any Mob First.")
                    notificar("Auto Farm", "Select any Mob First", 3, 3)
                    spawn(function()
                        flags("mob list", true)
                        flags("auto farm", false)
                    end)

                    status_auto("")
                    return
                end
                if farmingEnabled then
                    notificar("Auto Farm", "Started", 1, 3)
                end
                if not farmingEnabled then
                    status_auto("")
                    return
                end
                spawn(function()
                    flags("ragdoll", true)
                    wait(1)
                    flags("godmode", true)
                    wait(1)
                    flags("cooldown", true)
                    wait(1)
                    flags("equip", true)
                end)

                local last_mob = getMob()
                while farmingEnabled do
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer",
                            "nan(ind)")
                        if time_alived > 10 then
                            if getMob() == last_mob then
                                if (transformar(getRoot().Position) - transformar(getMob():GetModelCFrame().Position)).Magnitude > 30 then
                                    local chegou = false
                                    spawn(function()
                                        while chegou == false and wait() do
                                            status_auto("Teleporting to " ..
                                                getMob().Name ..
                                                "... [" ..
                                                math.floor((transformar(getRoot().Position) - transformar(getMob():GetModelCFrame().p))
                                                    .Magnitude) .. "m]")
                                        end
                                    end)
                                    tp(function() return getMob():GetModelCFrame() * CFrame.new(0, 0, 3).p end)
                                    chegou = true
                                else
                                    status_auto("Attacking [Health: " .. math.floor(getMob().Health.Value) .. "]")


                                    if getRoot().Parent:FindFirstChild("Katana") then
                                    else
                                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild(
                                            "Async"):FireServer("Katana", "EquippedEvents", false, true)
                                    end
                                    if game.Players.LocalPlayer.Health.Value < 5 then
                                        local started_ = tick()
                                        status_auto("You lost a lot of health, waiting for life...")
                                        repeat
                                            getRoot().CFrame = getMob():GetModelCFrame() + Vector3.new(0, 50, 0)
                                            task.wait()
                                        until game.Players.LocalPlayer.Health.Value > 25 or tick() - started_ > 60
                                        status_auto("Attacking [Health: " .. math.floor(getMob().Health.Value) .. "]")
                                    elseif game:GetService("Players").LocalPlayer.Stamina.Value < 9 then
                                        status_auto("Regaining Energy, Waiting...")
                                        repeat
                                            getRoot().CFrame = getMob():GetModelCFrame() + Vector3.new(0, 100, 0)
                                            task.wait()
                                        until game:GetService("Players").LocalPlayer.Stamina.Value >= 35
                                        status_auto("Attacking [Health: " .. math.floor(getMob().Health.Value) .. "]")
                                    elseif getMob():FindFirstChild("Down") then
                                        getRoot().CFrame = getMob():GetModelCFrame() * CFrame.new(0, 5, 0)

                                        game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Character",
                                            "Execute")
                                    elseif getMob():FindFirstChild("Executed") then
                                        getRoot().CFrame = getMob():GetModelCFrame() + Vector3.new(0, 3.5, 0)
                                        getMob():Destroy()
                                    else
                                        getRoot().CFrame = getMob():GetModelCFrame() * CFrame.new(0, 0, 5)


                                        spawn(function()
                                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild(
                                                "Async"):FireServer("Katana", "Server")
                                        end)
                                    end
                                end
                            else
                                last_mob = getMob()
                            end
                        else
                            status_auto("Time alived [" .. 10 - time_alived .. "]")
                        end
                    end)
                    task.wait()
                end
                notificar("Auto Farm", "Stopped", 3, 3)
                spawn(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Async"):FireServer(
                        "Katana", "EquippedEvents", false, false)
                    flags("equip", false)
                    wait(1)
                    flags("cooldown", false)
                end)
            end, "auto farm")
            local ore_list = {
                "Sun Ore",
                "Iron Ore"
            }
            local function getOre(valor)
                local dist, ore = math.huge
                for i, v in pairs(game:GetService("Workspace").Map.Minerals:GetDescendants()) do
                    if v.Name == "MineralName" and v.Value == valor then
                        local oremag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Parent.Position)
                            .magnitude
                        if oremag < dist then
                            dist = oremag
                            ore = v.Parent
                        end
                    end
                end
                return ore
            end

            tab_Auto:CreateToggle('Auto Sun Ore', function(bool)
                auto_sun_ore = bool

                if auto_sun_ore then
                    spawn(function()
                        while auto_sun_ore and task.wait() do
                            if not getOre(ore_list[1]) then
                                status_auto("Waiting For Sun Ore")
                            else
                                local ore_mag = (getRoot().Position - getOre(ore_list[1]).Position).Magnitude
                                if ore_mag > 5 then
                                    local chegou = false
                                    spawn(function()
                                        while chegou == false and task.wait() do
                                            status_auto("Teleporting... [" ..
                                                math.floor((transformar(getRoot().Position) - transformar(getOre(ore_list[1]).Position))
                                                    .Magnitude) .. "m]")
                                        end
                                    end)
                                    tp(getOre(ore_list[1]).Position)
                                    chegou = true
                                else
                                    getRoot().CFrame = CFrame.new(getOre(ore_list[1]).Position + Vector3.new(0, 2, 0))
                                    spawn(function()
                                        game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Pickaxe",
                                            "Server")
                                    end)
                                end
                            end
                        end
                    end)
                end
            end)

            tab_Auto:CreateToggle('Auto Iron Ore', function(bool)
                auto_sun_ore = bool

                if auto_sun_ore then
                    spawn(function()
                        while auto_sun_ore and task.wait() do
                            if not getOre(ore_list[2]) then
                                status_auto("Waiting For Iron Ore")
                            else
                                local ore_mag = (getRoot().Position - getOre(ore_list[2]).Position).Magnitude
                                if ore_mag > 5 then
                                    local chegou = false
                                    spawn(function()
                                        while chegou == false and task.wait() do
                                            status_auto("Teleporting... [" ..
                                                math.floor((transformar(getRoot().Position) - transformar(getOre(ore_list[2]).Position))
                                                    .Magnitude) .. "m]")
                                        end
                                    end)
                                    tp(getOre(ore_list[2]).Position)
                                    chegou = true
                                else
                                    getRoot().CFrame = CFrame.new(getOre(ore_list[2]).Position + Vector3.new(0, 2, 0))
                                    spawn(function()
                                        game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer("Pickaxe",
                                            "Server")
                                    end)
                                end
                            end
                        end
                    end)
                end
            end)

            tab_Auto:CreateToggle('Auto Trinkets', function(b)
                trinkets_farm = b

                if farmingEnabled then
                    flags("auto farm", false)
                end
                if trinkets_farm then
                    status_auto("Started Farming...")
                else
                    status_auto("")
                    return
                end

                spawn(function()
                    while trinkets_farm and task.wait() do
                        if getRoot() and speaker.Health.Value > 0 then
                            if time_alived < 10 then
                                status_auto("Time alived... [" .. 10 - time_alived .. "]")
                            else
                                status_auto("Looking for a trinkets...")
                                local Trinkets, Get = get_proximity_trinkets()
                                if Trinkets and Get then
                                    status_auto("Trinkets detected [Teleporting...]")
                                    pcall(Flags["ragdoll"], true)
                                    local chegou_2 = false
                                    spawn(function()
                                        while chegou_2 == false and task.wait() do
                                            status_auto("Trinkets detected [" ..
                                                math.floor((Vector3.new(getRoot().Position.X, Trinkets.Position.Y, getRoot().Position.Z) - Trinkets.Position)
                                                    .Magnitude) .. "m]")
                                        end
                                    end)
                                    already[#already + 1] = Trinkets.Parent
                                    tp(Trinkets.Position + Vector3.new(0, 7, 0))
                                    chegou_2 = true
                                    status_auto("Getting trinkets...")
                                    wait(0.2)
                                    local successfully = Get()
                                    wait(0.1)
                                else
                                    status_auto("Trinkets not detected [waiting...]")
                                end
                            end
                        end
                    end
                end)
            end, "auto farm2")

            tab_Auto:CreateLabel('Auto Skills:')

            getgenv().Skills = {}
            for i, v in pairs({ 1, 2, 3, 4, 5, 6, 7 }) do
                tab_Auto:CreateToggle("Skill " .. v, function(bool)
                    local num = v
                    Skills[v] = bool
                    if not bool then return end
                    spawn(function()
                        while Skills[v] == true do
                            game:GetService("VirtualInputManager"):SendKeyEvent(true,
                                (num == 1 and "One" or num == 2 and "Two" or num == 3 and "Three" or num == 4 and "Four" or num == 5 and "Five" or num == 6 and "Six" or num == 7 and "Seven"),
                                false, game)
                            wait(1)
                        end
                    end)
                end)
            end

            tab_Auto:CreateLabel('Config NPCS:')
            tab_Auto:CreateToggle("Mob list", function(bool)
                Other_Menu.Enabled = bool
            end, "mob list")

            local fly_config = {
                Normal = 20,
                Fast = 80
            }

            tab_Others:CreateLabel("Server Config:")

            tab_Others:CreateButton('Exit Server', function()
                game.Players.LocalPlayer:Kick()
            end)

            tab_Others:CreateButton('Rejoin', function()
                game:GetService("TeleportService"):Teleport(5094651510, game.Players.LocalPlayer)
            end)

            tab_Others:CreateToggle('Skip Main', function(bool)
                skip = bool

                if skip then
                    while skip == true do
                        if not game:IsLoaded() then
                            game.Loaded:wait()
                        end
                        if game.PlaceId == 4855457388 then
                            game:GetService("TeleportService"):Teleport(5094651510, game.Players.LocalPlayer)
                        end
                        task.wait()
                    end
                end
            end)

            local tp_STATUS = tab_tp:CreateLabel("Teleports:")

            function teleportar(pos)
                tp_STATUS:Refresh("Teleporting... [" ..
                    math.floor((transformar(getRoot().Position) - transformar(pos)).Magnitude) .. "m]")
                local chegou = false
                spawn(function()
                    while chegou == false and task.wait() do
                        tp_STATUS:Refresh("Teleporting... [" ..
                            math.floor((transformar(getRoot().Position) - transformar(pos)).Magnitude) .. "m]")
                    end
                    tp_STATUS:Refresh("Teleports: ")
                end)
                tp(pos)
                chegou = true
            end

            tab_tp:CreateButton("Village Okuyia",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-3547, 705, -1708))
                end)

            tab_tp:CreateButton("Sakura Passage",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-3512, 707, -2310))
                end)

            tab_tp:CreateButton("Selection Exam",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-5162, 791, -3038))
                end)

            tab_tp:CreateButton("Village Kamakura",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-2146, 1162, -1687))
                end)

            tab_tp:CreateButton("Village Hayakawa",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(498, 755, -1961))
                end)

            tab_tp:CreateButton("Corps Slayers",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-1832, 872, -6184))
                end)

            tab_tp:CreateButton("Shop Sell Others",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-3637, 708, -1479))
                end)

            tab_tp:CreateButton("Shop Sell Ores",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(400, 755, -2388))
                end)

            tab_tp:CreateButton("Shop Guns",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-1421, 871, -6310))
                end)

            tab_tp:CreateButton("Shop Clothing",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-1270, 872, -6270))
                end)

            tab_tp:CreateButton("Shop Food Corps Slayers",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(-1359, 872, -6125))
                end)

            tab_tp:CreateButton("Shop Food Hayakawa ",
                function()
                    pcall(Flags["ragdoll"], true)
                    teleportar(Vector3.new(559, 759, -2388))
                end)

            tab_tp:CreateLabel('Tp Config:')

            tab_tp:CreateSlider("Tp Velocity", 1, 190, function(value)
                change_tp_velo(value)
            end)


            local anti_ragdoll = false
            local old

            tab_Others:CreateLabel("Others: ")

            old = hookmetamethod(game, "__namecall", function(self, ...)
                local args = { ... }

                if getnamecallmethod() == "FireServer" and tostring(self) == "Async" and args[1] == "Character" and args[2] == "DemonWeakness" and AntiSunBurn then
                    return nil
                end

                if getnamecallmethod() == "FireServer" and tostring(self) == "Async" and args[1] == "Character" and args[2] == "Crow" and AntiCrow then
                    return nil
                end

                if getnamecallmethod() == "FireServer" and anti_ragdoll and tostring(self) == "Async" and args[2] and args[2] == "FallDamageServer" then
                    return nil
                end

                return old(self, ...)
            end)
            tab_Others:CreateToggle("Anti ragdoll", function(bool)
                anti_ragdoll = bool
                notificar(
                    "Anti ragdoll",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
            end, "ragdoll")

            tab_Others:CreateToggle("Anti Void", function(bool)
                anti_void = bool
            end)

            tab_Others:CreateToggle("God Mode", function(bool)
                god = bool
                notificar(
                    "God Mode",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                if god then
                    while god and wait(1) do
                        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer",
                            "nan(ind)")
                    end
                else
                    notificar(
                        "God Mode",
                        "Please Rejoin.",
                        1,
                        2.5
                    )
                    game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "FallDamageServer",
                        999999999999999999999999999999999999999)
                end
            end, "godmode")
            local valor_breath = nil
            local Breath_
            local Breath_loop
            local Pode_Breath = true
            spawn(function()
                while wait(5) do
                    Pode_Breath = true
                end
            end)
            Breath_ = tab_Others:CreateToggle("Auto Breath", function(bool)
                notificar(
                    "Auto Breath",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                AutoBreath = bool
                if AutoBreath and valor_breath == nil then
                    Breath_:Refresh("Select a value first.")
                    wait(0.3)
                    flags("breath", false)
                    delay(0.7, function()
                        Breath_:Refresh("Auto Breath")
                    end)
                    return
                end

                if bool then
                    Breath_loop = game:GetService("RunService").RenderStepped:Connect(function()
                        if game:GetService("Players").LocalPlayer.Breathing.Value < valor_breath and Pode_Breath == true then
                            Pode_Breath = false
                            pcall(function()
                                game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Breath", true)
                            end)
                            repeat wait() until game:GetService("Players").LocalPlayer.Breathing.Value >= valor_breath
                            pcall(function()
                                game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Breath",
                                    false)
                            end)
                            Pode_Breath = true
                        end
                    end)
                else
                    Breath_loop:Disconnect()
                end
            end, "breath")

            tab_Others:CreateSlider("Breath Limit", 1, 100, function(value)
                valor_breath = value
            end)

            local instances = {
                "Busy",
                "Ragdoll",
                "Down",
                "Stun",
                "Combat",
                "Aggro",
                "Health",
                "Stamina",
            };
            _G.steppedConnection = game:GetService("RunService").Stepped:Connect(function()
                for _, object in next, game.Players.LocalPlayer.Character:GetChildren() do
                    if no_cooldown and table.find(instances, object.Name) or string.lower(object.Name):find("cooldown") or string.lower(object.Name):find("activate") then
                        local old_Parent = object.Parent
                        object.Parent = game.ReplicatedStorage
                        spawn(function()
                            repeat wait() until no_cooldown == false
                            object.Parent = old_Parent
                        end)
                    end
                end
            end);
            tab_Others:CreateToggle("No Cooldown", function(bool)
                notificar(
                    "No Cooldown",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                no_cooldown = bool
            end, "cooldown")
            function get_drop()
                local result
                local get
                local dist = 9e9
                for i, v in pairs(workspace:GetChildren()) do
                    if v:FindFirstChild("PickableItem") and v:FindFirstChild("Spawn") and v:FindFirstChild("Part") and (v:FindFirstChild("Part").Position - getRoot().Position).Magnitude < dist then
                        dist = (v:FindFirstChild("Part").Position - getRoot().Position).Magnitude
                        result = v:FindFirstChild("Part")
                        local replicatedStorage = game:GetService("ReplicatedStorage")
                        local asyncRemote = replicatedStorage.Remotes.Async

                        local part = v:FindFirstChild("Part")

                        get = function()
                            if (part.Position - getRoot().Position).Magnitude < 10 then
                                asyncRemote:FireServer("Character", "Interaction", part)
                                return true
                            end
                            return false
                        end
                    end
                end

                return result, get
            end

            tab_Others:CreateToggle("Anti Sun Burn", function(bool)
                notificar(
                    "Anti Sun Burn",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                AntiSunBurn = bool
            end)

            tab_Others:CreateToggle("Anti Crow", function(bool)
                notificar(
                    "Anti Crow",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                AntiCrow = bool
            end)

            for i, v in pairs(game.CoreGui:GetChildren()) do
                if v.Name == "Logger" then
                    v:Destroy()
                end
            end

            local Menu_Logger = game:GetObjects("rbxassetid://13424879827")[1]

            Menu_Logger.Parent = game:GetService("CoreGui")
            Menu_Logger.Background.Active = true
            Menu_Logger.Background.Draggable = true
            Menu_Logger.Enabled = false

            Menu_Logger.Background.TextButton.MouseButton1Click:Connect(function()
                for i, v in pairs(Menu_Logger.Background["Tab Container"].ScrollingFrame:GetChildren()) do
                    if v.Name == "Button" then
                        v:Destroy()
                    end
                end
            end)

            function newPlr(plr)
                plr.Chatted:Connect(function(msg)
                    local clone = Menu_Logger.Background["Tab Container"].ScrollingFrame.template:Clone()
                    clone.Parent = Menu_Logger.Background["Tab Container"].ScrollingFrame
                    clone.Visible = true
                    clone.horario.Position = clone.horario.Position + UDim2.new(0, -10, 0, 0)
                    clone.Text = plr.Name .. ": " .. msg
                    local Hor = os.date("!*t", tick())
                    clone.horario.Text = string.format("%s:%s", Hor.hour, Hor.min)
                    clone.Name = "Button"
                end)
            end

            for i, v in pairs(game.Players:GetChildren()) do
                newPlr(v)
            end

            game.Players.PlayerAdded:Connect(newPlr)
            tab_Others:CreateToggle("ChatLogger", function(bool)
                notificar(
                    "Chat Logger",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                Menu_Logger.Enabled = bool
            end)

            tab_Others:CreateToggle("NoClip", function(bool)
                notificar(
                    "Noclip",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                noclip(bool)
            end)

            tab_Others:CreateToggle("Pickup-Aura", function(bool)
                notificar(
                    "Pickup Aura",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                pick_aura = bool

                spawn(function()
                    while pick_aura and wait(1) do
                        pcall(function()
                            wait(1)
                            for i, v in pairs(workspace:GetChildren()) do
                                if v.Name == "DropItem" then
                                    local partmag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position)
                                        .magnitude
                                    if partmag < 20 then
                                        game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character",
                                            "Interaction", v)
                                    end
                                end
                            end
                        end)
                    end
                end)
            end, "aura")

            tab_Others:CreateToggle("Auto Equip Sword", function(bool)
                notificar(
                    "Auto Equip Sword",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                equip = bool

                while equip and wait(2) do
                    local args = {
                        [1] = "Katana",
                        [2] = "EquippedEvents",
                        [3] = true,
                        [4] = true
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Async"):FireServer(unpack(
                        args))
                end
            end, "equip")

            local auto_grourd = false
            function getNum()
                local sucess, item = pcall(function()
                    return game.Players.LocalPlayer.PlayerGui.Interface.HUD.Clay.Back.TextLabel
                end)

                if sucess then
                    return tonumber(string.sub(item.Text, 1, #item.Text - 1))
                else
                    return 0
                end
            end

            tab_Others:CreateToggle("Auto Gourd", function(bool)
                notificar(
                    "Auto Gourd",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                auto_grourd = bool

                spawn(function()
                    while auto_grourd do
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
                        repeat wait() until getNum() >= 50
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 0)
                        repeat wait() until getNum() <= 49
                    end
                end)
            end)



            local enhance_visu = false

            local oldSun, oldColor, oldBlur, oldBloom
            local old_Density, old_Glare, old_Haze
            local Blind, old

            if enhance_visu then
                oldSun = game.Lighting.SunRays.Enabled
                oldColor = game.Lighting.ColorCorrection.Enabled
                oldBlur = game.Lighting.Blur.Enabled
                oldBloom = game.Lighting.Bloom.Enabled
                game.Lighting.SunRays.Enabled = false
                game.Lighting.ColorCorrection.Enabled = false
                game.Lighting.Blur.Enabled = false
                game.Lighting.Bloom.Enabled = false

                for i, v in pairs(game.Lighting:GetChildren()) do
                    if v.Name == "Atmosphere" then
                        v.Density = 0
                        v.Glare = 0
                        v.Haze = 0
                        old_Density = v.Density
                        old_Glare = v.Glare
                        old_Haze = v.Haze
                    end
                end

                if game.Lighting:FindFirstChild("Blind") then
                    Blind = game.Lighting:FindFirstChild("Blind")
                    old = Blind.Parent

                    Blind.Parent = nil
                end
            end

            tab_Others:CreateToggle("Enhance-Visuals", function(bool)
                notificar(
                    "Enhance Visuals",
                    bool and "activated" or "disabled",
                    1,
                    2.5
                )
                enhance_visu = bool

                if enhance_visu then
                    game.Lighting.SunRays.Enabled = false
                    game.Lighting.ColorCorrection.Enabled = false
                    game.Lighting.Blur.Enabled = false
                    game.Lighting.Bloom.Enabled = false

                    for i, v in pairs(game.Lighting:GetChildren()) do
                        if v.Name == "Atmosphere" then
                            local Densi = v.Density
                            local Glare = v.Glare
                            local Haze = v.Haze
                            v.Density = 0
                            v.Glare = 0
                            v.Haze = 0
                            spawn(function()
                                repeat wait() until enhance_visu == false
                                v.Density = Densi
                                v.Glare = Glare
                                v.Haze = Haze
                            end)
                        end
                    end

                    if Blind then
                        Blind.Parent = nil
                    end

                    spawn(function()
                        while enhance_visu do wait() end

                        game.Lighting.SunRays.Enabled = oldSun
                        game.Lighting.ColorCorrection.Enabled = oldColor
                        game.Lighting.Blur.Enabled = oldBlur
                        game.Lighting.Bloom.Enabled = oldBloom



                        if Blind then
                            Blind.Parent = old
                        end
                    end)
                else
                    game.Lighting.SunRays.Enabled = oldSun
                    game.Lighting.ColorCorrection.Enabled = oldColor
                    game.Lighting.Blur.Enabled = oldBlur
                    game.Lighting.Bloom.Enabled = oldBloom

                    for i, v in pairs(game.Lighting:GetChildren()) do
                        if v.Name == "Atmosphere" then
                            v.Density = old_Density
                            v.Glare = old_Glare
                            v.Haze = old_Haze
                        end
                    end

                    if Blind then
                        Blind.Parent = game.Lighting
                    end
                end
            end)


            tab_Others:CreateLabel("Fly Config: ")

            tab_Others:CreateButton('Fly',
                function()
                    FLYSPEED = fly_config.Normal
                    game:GetService('UserInputService').InputBegan:Connect(function(a, b)
                        if b then return end
                        if a.KeyCode == Enum.KeyCode.LeftShift then FLYSPEED = fly_config.Fast end
                    end)
                    game:GetService('UserInputService').InputEnded:Connect(function(a, b)
                        if b then return end
                        if a.KeyCode == Enum.KeyCode.LeftShift then FLYSPEED = fly_config.Normal end
                    end)
                    repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild('Head') and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
                    local mouse = game.Players.LocalPlayer:GetMouse()
                    repeat wait() until mouse
                    local plr = game.Players.LocalPlayer
                    local torso = plr.Character.Head
                    local flying = false
                    local deb = true
                    local ctrl = { f = 0, b = 0, l = 0, r = 0 }
                    local lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                    local maxspeed = 5000
                    local speed = 5000
                    function Fly()
                        local bg = Instance.new('BodyGyro', torso)
                        bg.P = 10000
                        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                        bg.cframe = torso.CFrame
                        local bv = Instance.new('BodyVelocity', torso)
                        bv.velocity = Vector3.new(0, 0.1, 0)
                        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
                        repeat
                            wait()
                            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                            if ctrl.l + ctrl.r ~= 100000 or ctrl.f + ctrl.b ~= 10000 then
                                speed = speed + .0 + (speed / maxspeed)
                                if speed > maxspeed then speed = maxspeed end
                            elseif not (ctrl.l + ctrl.r ~= 5 or ctrl.f + ctrl.b ~= 5) and speed ~= 5 then
                                speed = speed - 5
                                if speed > 5 then speed = -2 end
                            end
                            if (ctrl.l + ctrl.r) ~= 5 or (ctrl.f + ctrl.b) ~= 5 then
                                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                    speed
                                lastctrl = { f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r }
                            elseif (ctrl.l + ctrl.r) == 5 and (ctrl.f + ctrl.b) == 5 and speed ~= 5 then
                                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                    speed
                            else
                                bv.velocity = Vector3.new(0, 0.1, 0)
                            end
                            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                                CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
                        until not flying
                        ctrl = { f = 0, b = 0, l = 0, r = 0 }
                        lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                        speed = 5
                        bg:Destroy()
                        bv:Destroy()
                        plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                    end

                    mouse.KeyDown:connect(function(key)
                        if key:lower() == 'x' then
                            if flying then
                                flying = false
                            else
                                flying = true
                                if true then Fly() end
                            end
                        elseif key:lower() == 'w' then
                            ctrl.f = FLYSPEED
                        elseif key:lower() == 's' then
                            ctrl.b = -
                                FLYSPEED
                        elseif key:lower() == 'a' then
                            ctrl.l = -FLYSPEED
                        elseif key:lower() == 'd' then
                            ctrl.r =
                                FLYSPEED
                        end
                    end)
                    mouse.KeyUp:connect(function(key) if key:lower() == 'w' then ctrl.f = 0 elseif key:lower() == 's' then ctrl.b = 0 elseif key:lower() == 'a' then ctrl.l = 0 elseif key:lower() == 'd' then ctrl.r = 0 end end)
                    speaker.CharacterAdded:Connect(function(cr)
                        cr:WaitForChild('HumanoidRootPart')
                        wait(1)
                        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild('Head') and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
                        local mouse = game.Players.LocalPlayer:GetMouse()
                        repeat wait() until mouse
                        local plr = game.Players.LocalPlayer
                        local torso = plr.Character.Head
                        local flying = false
                        local deb = true
                        local ctrl = { f = 0, b = 0, l = 0, r = 0 }
                        local lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                        local maxspeed = 5000
                        local speed = 5000
                        function Fly()
                            local bg = Instance.new('BodyGyro', torso)
                            bg.P = 10000
                            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                            bg.cframe = torso.CFrame
                            local bv = Instance.new('BodyVelocity', torso)
                            bv.velocity = Vector3.new(0, 0.1, 0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
                            repeat
                                wait()
                                plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                                if ctrl.l + ctrl.r ~= 100000 or ctrl.f + ctrl.b ~= 10000 then
                                    speed = speed + .0 + (speed / maxspeed)
                                    if speed > maxspeed then speed = maxspeed end
                                elseif not (ctrl.l + ctrl.r ~= 5 or ctrl.f + ctrl.b ~= 5) and speed ~= 5 then
                                    speed = speed - 5
                                    if speed > 5 then speed = -2 end
                                end
                                if (ctrl.l + ctrl.r) ~= 5 or (ctrl.f + ctrl.b) ~= 5 then
                                    bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        speed
                                    lastctrl = { f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r }
                                elseif (ctrl.l + ctrl.r) == 5 and (ctrl.f + ctrl.b) == 5 and speed ~= 5 then
                                    bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        speed
                                else
                                    bv.velocity = Vector3.new(0, 0.1, 0)
                                end
                                bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame *
                                    CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
                            until not flying
                            ctrl = { f = 0, b = 0, l = 0, r = 0 }
                            lastctrl = { f = 0, b = 0, l = 0, r = 0 }
                            speed = 5
                            bg:Destroy()
                            bv:Destroy()
                            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
                        end

                        mouse.KeyDown:connect(function(key)
                            if key:lower() == 'x' then
                                if flying then
                                    flying = false
                                else
                                    flying = true
                                    if true then Fly() end
                                end
                            elseif key:lower() == 'w' then
                                ctrl.f = FLYSPEED
                            elseif key:lower() == 's' then
                                ctrl.b = -
                                    FLYSPEED
                            elseif key:lower() == 'a' then
                                ctrl.l = -FLYSPEED
                            elseif key:lower() == 'd' then
                                ctrl.r =
                                    FLYSPEED
                            end
                        end)
                        mouse.KeyUp:connect(function(key) if key:lower() == 'w' then ctrl.f = 0 elseif key:lower() == 's' then ctrl.b = 0 elseif key:lower() == 'a' then ctrl.l = 0 elseif key:lower() == 'd' then ctrl.r = 0 end end)
                    end)
                    fly_config.Active = true
                    Fly()
                end)

            tab_Others:CreateSlider('Normal Fly speed', 0, 100, function(value)
                fly_config.Normal = value
                FLYSPEED = value
            end)

            tab_Others:CreateSlider('Shift Fly speed', 0, 100, function(value)
                fly_config.Fast = value
            end)
            notificar("Macro X", "Demon Fall Loaded", 1, 5)

            local walk_speed = false
            local walk_speed_value = 16
            local jump_power = false
            local jump_power_value = 50

            spawn(function()
                while true do
                    pcall(function()
                        if walk_speed then
                            getHumanoid().WalkSpeed = walk_speed_value
                        end
                        if jump_power then
                            getHumanoid().JumpPower = jump_power_value
                        end
                    end)
                    task.wait()
                end
            end)

            local walk_meta
            walk_meta = hookmetamethod(game, "__index", function(self, b)
                if tostring(b) == "WalkSpeed" then
                    return 16
                elseif tostring(b) == "JumpPower" then
                    return 50
                end


                return walk_meta(self, b)
            end)

            tab_Combat:CreateLabel('Walk Speed')

            tab_Combat:CreateToggle('Toggled', function(bool)
                walk_speed = bool

                if not bool then
                    wait()
                    getHumanoid().WalkSpeed = 16
                else
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)

            tab_Combat:CreateSlider('Value', 16, 120, function(value)
                walk_speed_value = value
                if walk_speed then
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)

            tab_Combat:CreateLabel('Jump Power')

            tab_Combat:CreateToggle('Toggled', function(bool)
                jump_power = bool

                if not bool then
                    wait()
                    getHumanoid().JumpPower = 50
                else
                    getHumanoid().JumpPower = jump_power_value
                end
            end)

            tab_Combat:CreateSlider('Value', 50, 300, function(value)
                jump_power_value = value
                if jump_power then
                    getHumanoid().JumpPower = jump_power_value
                end
            end)

            local Player = game:service 'Players'.LocalPlayer
            Player.Character.Humanoid:GetPropertyChangedSignal 'WalkSpeed':Connect(function()
                if walk_speed then
                    getHumanoid().WalkSpeed = walk_speed_value
                end
            end)

            tab_Credits:CreateLabel("MACRO X Devs:")

            function Creditos(text)
                notificar("Sucess ClipBoard!", 1, 3)
                setclipboard(text)
            end

            tab_Credits:CreateButton("(Creator/Scripter) By Japa [ãƒ˜ãƒ³ãƒªã‚±#0101]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
            tab_Credits:CreateButton("(Sub_Creator/Scripter) By Sammu [ã‚µãƒŸãƒ¥ã‚¨ãƒ«#7670]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
            tab_Credits:CreateButton("(Designer) By Color [collorem#9470]",
                function() Creditos("https://discord.gg/P7XXTAXmPZ") end)
        end
    end

    if game.PlaceId == 2474168535 then
        local fov_ = Drawing.new("Circle")
        local Player = moretti:CreateTab("Player")
        local Aim_Assist = moretti:CreateTab("Aim Assist")
        local Combat = moretti:CreateTab("Combat")



        Player:CreateSlider("Walk Speed Value", 16, 200, function(value)
            walk_speed_value = value
        end)

        Player:CreateToggle("WalkSpeed", function(bool)
            walk_speed = bool

            while walk_speed do
                getHumanoid().WalkSpeed = (walk_speed_value or 50)
                task.wait()
            end
            getHumanoid().WalkSpeed = 16
        end)

        Player:CreateSlider("Jump Power Value", 50, 300, function(value)
            jump_power_value = value
        end)


        Player:CreateToggle("Jump Power", function(bool)
            jump_power = bool

            while jump_power do
                getHumanoid().JumpPower = (jump_power_value or 200)
                task.wait()
            end
            getHumanoid().JumpPower = 50
        end)
        local noclip_ = false
        Player:CreateToggle("Noclip", function(bool)
            noclip_ = bool
        end)

        game:GetService("RunService").RenderStepped:Connect(function()
            if noclip_ then
                for i, v in pairs(speaker.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            else
                for i, v in pairs(speaker.Character:GetChildren()) do
                    if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
                        v.CanCollide = true
                    end
                end
            end
        end)

        local old2
        old2 = hookmetamethod(game, "__index", function(self, b)
            if tostring(self) == "Humanoid" then
                if tostring(b) == "WalkSpeed" then
                    return 16
                elseif tostring(b) == "JumpPower" then
                    return 50
                end
            end
            return old2(self, b)
        end)

        local Aim_Configs = {
            fov = 90,
            fov_visible = false,
            Aimbot = false
        }

        Aim_Assist:CreateToggle("Aimbot [Activates on aiming]", function(bool)
            Aim_Configs.Aimbot = bool
        end)

        Aim_Assist:CreateLabel("Aim Assist Config:")

        Aim_Assist:CreateSlider("Fov", 0, 1000, function(value)
            Aim_Configs.fov = value
        end)
        Aim_Assist:CreateSlider("Fov Sides", 3, 60, function(value)
            fov_.NumSides = value
        end)
        Aim_Assist:CreateToggle("Fov Visible", function(bool)
            Aim_Configs.fov_visible = bool
        end)





        --number NumSides;


        fov_.Thickness = 1
        fov_.Radius = 10
        fov_.Visible = false
        fov_.Color = Color3.fromRGB(255, 255, 255)

        local UserInputService = game:GetService("UserInputService")

        game:GetService("RunService").RenderStepped:Connect(function()
            fov_.Visible = Aim_Configs.fov_visible
            fov_.Radius = Aim_Configs.fov
            fov_.Position = UserInputService:GetMouseLocation()
        end)


        --posicao para a bala ser alterada
        --HitPosition
        --EndPoint

        local old
        local silent_aim_position
        local player_to_aim
        local head_to_aim
        local vector
        local onscreen
        game:GetService("RunService").RenderStepped:Connect(function()
            local Player = getNearestToMouse(Aim_Configs.fov, true)

            if Player and getRoot(Player) and getRoot(Player).Parent:FindFirstChild("Head") then
                silent_aim_position = getRoot(Player).Parent:FindFirstChild("Head").Position
                head_to_aim = getRoot(Player).Parent.Head
                player_to_aim = Player
                vector, onscreen = workspace.CurrentCamera:worldToViewportPoint(head_to_aim.Position)
            else
                silent_aim_position = nil
                head_to_aim = nil
                player_to_aim = nil
                vector, onscreen = nil, nil
            end

            if Aim_Configs.Aimbot == true and mirando == true and silent_aim_position ~= nil then
                workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, silent_aim_position)
            end
        end)

        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                mirando = true
            end
        end)
        game:GetService("UserInputService").InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                mirando = false
            end
        end)

        Combat:CreateLabel("Gun Mods")



        local module = game:GetService("ReplicatedStorage").GunScripts.GunStats
        module = require(module)


        for i, v in pairs(
            {
                { "No Equip Delay",  "equipTime",       0 },
                { "No Reload Delay", "ReloadSpeed",     0 },
                { "No Spread",       "HipFireAccuracy", 0 },
                { "No Camera shake", "camShakeResist",  0 },
                { "No bullet limit", "MaxShots",        9e9 }
            }
        ) do
            local test = false
            Combat:CreateToggle(v[1], function(bool)
                test = bool

                if test then
                    for _, gun in pairs(module) do
                        if gun[v[2]] ~= nil then
                            spawn(function()
                                local old = gun[v[2]]
                                repeat
                                    gun[v[2]] = v[3]
                                    task.wait()
                                until test == false
                                gun[v[2]] = old
                            end)
                        end
                    end
                end
            end)
        end

        Combat:CreateButton("Infinite Ammo", function()
            local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()
            local scriptPath = game:GetService("ReplicatedStorage").GunScripts.GunLocalModule
            local closureName = "Unnamed function"
            local upvalueIndex = 1
            local closureConstants = {
                [1] = "MouseUp"
            }

            local closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)
            local value = YOUR_NEW_VALUE_HERE
            local elementIndex = "Shots"

            debug.getupvalue(closure, upvalueIndex)[elementIndex] = math.huge
        end)
    end

    if game.PlaceId == Jogos["Zombie Attack"] or  game.PlaceId == Jogos["Zombie Attack Hard"] then 
        local Main = moretti:CreateTab("Main")

        local Freatures = moretti:CreateTab("Freatures")

        local SilentAim = moretti:CreateTab("Silent Aim")

        local config = {
            mindistance = 50,
            first_noobs = false,
        }
        
        local guns_list = {"Pistol", "Revolver", "Uzi", "Trench Shotgun", "M1 Garand", "Type 100", "M16", "Sniper", "Tactical ShotGun", "Thompson", "Blaster", "Machina Gun", "Cobra", "Fiery Cannon", "Toxic", "Retribution Ray", "Platinum Gun", "Scope Rifle", "Scape Gun", "Railgun", "Ghost", "Alien Rifle", "Ray Gun", "Annihilator", "Biohazard", "Venom", "Golden Pistol", "Rainbow Blaster", "Hex Splitter", "Beam Launcher", "Gatling Laser", "Tri Laser", "Techno Rifle", "Minigun"}
        local guns_knife = {"Basic Knife", "Deathshard", "Clockwork", "Katana", "Azure Sword", "Earth Sword", "Fire Sword", "Firebranc", "Ice Dragon", "Venomshank", "Leaf Swod", "Darkheart", "Heat", "Golden", "Rainbow Horse Sword", "Virtual", "Sword of Swords", "Magma Sword", "Green Saber", "Slasher", "Mamba", "Monochrome", "Hallows Edge", "Darklumos", "Blue Flame", "Death Horse Sword", "Batwing", "Omega Scythe", "Epic Blue Sword", "Epic Red Sword"}
        
        local mobs_to_kill = {}
        local boss_to_kill = {}
        
        function atirar(mob, gun)
            if not gun then return end
            if not mob:FindFirstChild("Head") then return end
            if not mob:FindFirstChild("Humanoid") then return end
            local sucess, result = pcall(function()
                return assert(table.find(guns_list, gun.Name))
            end)
        
            if sucess and not (mob:FindFirstChild("Head") and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("Humanoid").Health > 0) then 
                return 
            end
            local args = {
                [1] = {
                    ["Normal"] = Vector3.yAxis,
                    ["Direction"] = Vector3.new(297.8861083984375, -34.430519104003906, -8.856056213378906),
                    ["Name"] = gun.Name,
                    ["Hit"] = mob.Head,
                    ["Origin"] = game.Players.LocalPlayer.Character.Head.Position,
                    ["Pos"] = mob.Head.Position
                }            
            }
        
            local Humanoid = mob:FindFirstChild("Humanoid")
            spawn(function()
                game:GetService("ReplicatedStorage"):WaitForChild("Gun"):FireServer(unpack(args))
            end)
        end
        
        
        
        local killing_boss = false 
        
        for i,v in pairs(workspace.enemies:GetChildren()) do 
            if v:FindFirstChild("Humanoid") and v:FindFirstChild("Head") and v:FindFirstChild("Humanoid").Health > 0 then 
                mobs_to_kill[#mobs_to_kill + 1] = v
            end
        end
        
        for i,v in pairs(workspace:FindFirstChild("BossFolder"):GetChildren()) do 
            if v:FindFirstChild("Humanoid") and v:FindFirstChild("Head") and v:FindFirstChild("Humanoid").Health > 0 then 
                boss_to_kill[#boss_to_kill + 1] = v
                killing_boss = true 
            end
        end
        
        workspace.enemies.ChildAdded:Connect(function(v)
            v:WaitForChild("Humanoid")
            v:WaitForChild("Head")
            v:WaitForChild("HumanoidRootPart")
            mobs_to_kill[#mobs_to_kill + 1] = v
            v.Humanoid.Changed:Connect(function(value)
                if value == "Health" then 
                    if v.Humanoid.Health == 0 then 
                        table.remove(mobs_to_kill, table.find(mobs_to_kill, v))
                    end
                end
            end)
        end)
        workspace.BossFolder.ChildAdded:Connect(function(v)
            v:WaitForChild("Humanoid")
            v:WaitForChild("Head")
            v:WaitForChild("HumanoidRootPart")
            boss_to_kill[#boss_to_kill + 1] = v
            killing_boss = true 
            v.Humanoid.Changed:Connect(function(value)
                if value == "Health" then 
                    if v.Humanoid.Health == 0 then 
                        table.remove(boss_to_kill, table.find(boss_to_kill, v))
                    end
                end
            end)
        end)
        workspace.enemies.ChildRemoved:Connect(function(v)
            table.remove(mobs_to_kill, table.find(mobs_to_kill, v))
        end)
        workspace.BossFolder.ChildRemoved:Connect(function(v)
            table.remove(boss_to_kill, table.find(boss_to_kill, v))
        end)

        Main:CreateSlider("Walk Speed", 16, 200, function(value)
            getgenv().value_walkspeed = value 
            
        end)
        spawn(function()
            while task.wait() do 
                if getHumanoid() and getgenv().value_walkspeed then 
                    getHumanoid().WalkSpeed = getgenv().value_walkspeed
                end
            end
        end)
        

        Freatures:CreateToggle("Auto Pick Up Powers", function(bool)
            auto_powers = bool 
            spawn(function()
                while auto_powers do 
                    for i,v in pairs(workspace.Powerups:GetChildren()) do 
                        for i,v in pairs(v:GetChildren()) do 
                            if v:IsA("BasePart") and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Head") then 
                                v.CanCollide = false
                                v.CFrame = game.Players.LocalPlayer.Character.Head.CFrame	
                            end
                        end
                    end
                    task.wait()
                end
            end)
        end)

        Freatures:CreateToggle("Auto Equip Gun", function(bool)
            auto_gun = bool 

            spawn(function()
                while auto_gun do 
                    local gun 
                    for i,v in pairs(speaker.Backpack:GetChildren()) do 
                        if table.find(guns_list, v.Name) then 
                            gun = v 
                        end
                    end
                    if gun then 
                        getHumanoid():EquipTool(gun)
                    end
                    task.wait()
                end
            end)
        end)

        local Lista_Mobs = Freatures:CreateLabel("Mobs: 0")

        function getmob()
            local dist = 9e9
            local target 

            for i,v in pairs(workspace.enemies:GetChildren()) do 
                if v:FindFirstChild("Head") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (getRoot().CFrame * CFrame.new(0, -15, -15).Position - v.Head.Position).Magnitude < dist then 
                    dist = (getRoot().Position - v.Head.Position).Magnitude
                    target = v 
                end
            end
            if target == nil and #workspace.BossFolder:GetChildren()>0 then 
                target = workspace.BossFolder:GetChildren()[1]
            end

            return target 
        end

        Freatures:CreateToggle("Kill All v2 [Use in afk time]", function(bool)
            killall_v2 = bool 

            spawn(function()
                while task.wait() and killall_v2 do 
                    local mob = getmob()

                    if mob then 
                        getgenv().mob_target = mob
                        getRoot().CFrame = mob.Head.CFrame * CFrame.new(0, 15, 15)
                        getRoot().Velocity = Vector3.new(0, 0, 0)
                        atirar(mob, getRoot().Parent:FindFirstChildWhichIsA("Tool"))
                    else
                        getgenv().mob_target = nil
                        getRoot().CFrame = CFrame.new(0, 9e9, 0)
                    end
                end
            end)
        end)

        Freatures:CreateToggle("Kill All", function(bool)
            kill_all = bool 

            spawn(function()
                while kill_all and task.wait() do 
                    if not game.Players.LocalPlayer.Character then continue end
                    if not game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then continue end
                
                    if killing_boss then 
                        if #boss_to_kill == 0 then 
                            killing_boss = false 
                        end
                        for _, v in pairs(boss_to_kill) do 
                            if v and v:FindFirstChild("Head") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 then 
                                for i = 1,getgenv().firepermobs or 1 do 
                                    atirar(v, game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool"))
                                end
                            end
                        end
                    else
                        table.sort(mobs_to_kill, function(a,b)
                            if a:FindFirstChild("Head") and b:FindFirstChild("Head") then 
                                if (a.Head.Position - game.Players.LocalPlayer.Character.Head.Position).Magnitude < (b.Head.Position - game.Players.LocalPlayer.Character.Head.Position).Magnitude then 
                                    return true 
                                end
                            end
                        end)
                        if config.first_noobs then 
                            table.sort(mobs_to_kill, function(a,b)
                                if a.Humanoid.Health < b.Humanoid.Health then 
                                    return true 
                                end
                            end)
                        end

                        Lista_Mobs:Refresh("Mobs: "..#mobs_to_kill)
                        for _, v in pairs(mobs_to_kill) do 
                            if v and v:FindFirstChild("Head") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 and (v:FindFirstChild("Head").Position - getRoot().Position).Magnitude < config.mindistance then 
                                for i = 1,getgenv().firepermobs or 1 do 
                                    atirar(v, game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool"))
                                end
                            end
                        end
                        
                    end                    
                end
            end)
        end)

        Freatures:CreateLabel("Kill all Config")

        Freatures:CreateSlider("Shoots per mob", 1, 50, function(value)
            getgenv().firepermobs = value
        end)

        Freatures:CreateToggle("Kill easy first", function(bool)
            config.first_noobs = bool
        end)

        Freatures:CreateSlider("Distance do kill", 0, 2000, function(value)
            config.mindistance = value
        end)

        local silentaim = false 
        SilentAim:CreateToggle("Silent Aim", function(value)
            silentaim = value
        end)

        function getPlayerCFrame() 
            local target
            local dist = 300
            for i,v in pairs(workspace.enemies:GetChildren()) do 
                if v:FindFirstChild("Head") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 then 
                    local Vector, OnScreen = workspace.CurrentCamera:worldToViewportPoint(v.Head.Position)
                    if OnScreen then 
                        local mag = (Vector2.new(speaker:GetMouse().X, speaker:GetMouse().Y) - Vector2.new(Vector.X, Vector.Y)).Magnitude 

                        if mag < dist then 
                            dist = mag 
                            target = v.Head.CFrame 
                        end
                    end
                end
            end
            return target 
        end

        local gmt = getrawmetatable(game)

        setreadonly(gmt, false)

        local oldindex = gmt.__index 
        gmt.__index = function(self, b)
            if tostring(b) == "Hit" and (silentaim or killall_v2) and getPlayerCFrame() then 
                if killall_v2 and getgenv().mob_target then 
                    return mob_target.Head.CFrame
                end 
                return getPlayerCFrame()
            end
            return oldindex(self, b)
        end

        setreadonly(gmt, true)
    end


    --<>----<Tower Defense Simulator>----<>--
    do
        function skip_wave()
            game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer("Waves", "Skip")
        end

        function upgrade_tower(tower)
            local args = {
                [1] = "Troops",
                [2] = "Upgrade",
                [3] = "Set",
                [4] = {
                    ["Troop"] = tower
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer(unpack(args))
        end

        if game.PlaceId == 3260590327 then
            if is_premium then
                function elevador(level, bool)
                    for i, v in pairs(workspace.Elevators:GetChildren()) do
                        if v:FindFirstChild("State") and v:FindFirstChild("State"):FindFirstChild("Difficulty") and v:FindFirstChild("Settings") then
                            if (require(v:FindFirstChild("Settings"))).Capacity ~= v:FindFirstChild("State"):FindFirstChild("Players").Value then
                                if v:FindFirstChild("State"):FindFirstChild("Difficulty").Value:lower() == level:lower() then
                                    game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Elevators", "Enter",
                                        v)
                                    if teleportar_elevador then
                                        getRoot().CFrame = v.Touch.CFrame
                                    end
                                    return true
                                end
                            end
                        end
                    end
                    if bool then
                        wait(0.2)
                        elevador(level, true)
                    else
                        return false
                    end
                end

                local looby = moretti:CreateTab("Looby")

                looby:CreateLabel("Elevators")

                local Levels = { "Easy", "Normal", "Hard", "Insane" }

                looby:CreateToggle("Teleport to elevator", function(bool)
                    teleportar_elevador = bool
                end)

                for i, v in pairs(Levels) do
                    looby:CreateButton("Enter in " .. v:lower() .. " elevator", function()
                        local sucess = elevador(v, false)
                        if sucess then
                            notificar("MacroXHub", 'Success', 1, 5)
                        else
                            notificar("MacroXHub", 'Error', 2, 5)
                        end
                    end)
                end
                looby:CreateButton("Leave from all elevators", function()
                    game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer("Elevators", "Leave")
                end)
            else
                game.Players.LocalPlayer:Kick("MacroXHub: Only Vip+ can use this script.")
            end
        end
        
        if game.PlaceId == 5591597781 then
            if is_premium then
                local Player = moretti:CreateTab("Player")
                local Freatures = moretti:CreateTab("Freatures")
                local walk_speed = 16
                local jump_power = 50
                Player:CreateSlider("Walk Speed", 16, 150, function(value)
                    walk_speed = value
                end)

                Player:CreateSlider("Jump Power", 50, 300, function(value)
                    jump_power = value
                end)


                add_fly(Player, "Fly (X)")

                spawn(function()
                    while true do
                        pcall(function()
                            if walk_speed ~= 16 then
                                getHumanoid().WalkSpeed = walk_speed
                            end
                            if jump_power ~= 50 then
                                getHumanoid().JumpPower = jump_power
                            end
                            getHumanoid():GetPropertyChangedSignal 'WalkSpeed':Connect(function()
                                if walk_speed ~= 16 then
                                    getHumanoid().WalkSpeed = walk_speed
                                end
                            end)
                        end)
                        task.wait()
                    end
                end)

                local old
                old = hookmetamethod(game, "__index", newcclosure(function(self, b)
                    if tostring(self) == "Humanoid" then
                        if tostring(b) == "WalkSpeed" then
                            return 16
                        elseif tostring(b) == "JumpPower" then
                            return 50
                        end
                    end

                    return old(self, b)
                end))

                Freatures:CreateLabel("Freatures:")

                Freatures:CreateToggle("Auto Skip Wave", function(bool)
                    auto_wave = bool

                    while auto_wave do
                        pcall(skip_wave)
                        wait(0.1)
                    end
                end)

                Freatures:CreateToggle("Auto Upgrade all", function(bool)
                    auto_upgrade = bool

                    while auto_upgrade do
                        pcall(function()
                            for i, v in pairs(workspace.Towers:GetChildren()) do
                                if v:FindFirstChild("Owner").Value == game.Players.LocalPlayer.UserId then
                                    spawn(function()
                                        upgrade_tower(v)
                                    end)
                                end
                            end
                        end)

                        task.wait()
                    end
                end)

                function tem_npc_perto(pos)
                    for i, v in pairs(workspace.Towers:GetChildren()) do
                        if v:FindFirstChild("Owner").Value == game.Players.LocalPlayer.UserId then
                            if v:GetModelCFrame() then
                                if (v:GetModelCFrame().p - pos).Magnitude < (distance_npcs or 5) then
                                    return true
                                end
                            end
                        end
                    end
                    return false
                end

                Freatures:CreateLabel("Auto Farm:")

                local Precos = {
                    "Warden",
                    "Minigunner",
                    "Mecha Base",
                    "Shotgunner",
                    "DJ Booth",
                    "Commander",
                    "War Machine",
                    "Ranger",
                    "Mortar",
                    "Pursuit",
                    "Rocketeer",
                    "Executioner",
                    "Archer",
                    "Demoman",
                    "Sledger",
                    "Freezer",
                    "Elf Camp",
                    "Sniper",
                    "Paintballer",
                    "Medic",
                    "Ace Pilot",
                    "Hunter",
                    "Toxic Gunner",
                    "Pyromancer",
                    "Swarmer",
                    "Frost Blaster",
                    "Turret",
                    "Scout",
                    "Crook Boss",
                    "Gladiator",
                    "Soldier",
                    "Slasher",
                    "Electroshocker",
                    "Militant",
                    "Engineer",
                    "Farm",
                    "Accelerator",
                    "Commando",
                    "Military Base",
                    "Cowboy",


                }

                function tamanho_tab(v)
                    local num = 0
                    table.foreach(v, function() num = num + 1 end)
                    return num
                end

                local get_mobs = dropdown(Precos)
                mobs, menu = get_mobs()

                Freatures:CreateToggle("Select Npcs", function(bool)
                    menu.Enabled = bool
                end)

                Freatures:CreateToggle("Auto Put Npcs", function(bool)
                    auto_put = bool

                    pcall(function()
                        while auto_put do
                            for i, v in pairs(workspace.NPCs:GetChildren()) do
                                pcall(function()
                                    if v:GetModelCFrame() and v:FindFirstChild("vivo") and v.vivo.Value > (time_needed or 0) then
                                        for i, mob_nome in pairs(get_mobs()) do
                                            spawn(function()
                                                local pos = v:GetModelCFrame().p
                                                local new_pos = Vector3.new(pos.X + math.random(-5, 5), pos.Y + 10,
                                                    pos.Z + math.random(-5, 5))
                                                if tem_npc_perto(new_pos) == false then
                                                    new_pos = CFrame.new(new_pos)
                                                    new_pos = new_pos * CFrame.new(0, 0, 0)
                                                    new_pos = new_pos.p
                                                    local args = {
                                                        [1] = "Troops",
                                                        [2] = "Place",
                                                        [3] = mob_nome,
                                                        [4] = {
                                                            ["Rotation"] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
                                                            ["Position"] = new_pos
                                                        },
                                                    }

                                                    local test = game:GetService("ReplicatedStorage"):WaitForChild(
                                                        "RemoteFunction"):InvokeServer(unpack(args))
                                                    if typeof(test) == "Instance" then
                                                        notificar("MacroXHub",
                                                            "put a " ..
                                                            mob_nome ..
                                                            " in " ..
                                                            string.format("%s, %s, %s", math.floor(new_pos.X),
                                                                math.floor(new_pos.Y), math.floor(new_pos.Z)), 1, 4)
                                                    end
                                                end
                                            end)
                                        end
                                    end
                                end)
                            end
                            wait(1)
                        end
                    end)
                end)



                Freatures:CreateToggle("Sell All", function(bool)
                    if not bool then
                        return
                    end
                    pcall(function()
                        for i, v in pairs(workspace.Towers:GetChildren()) do
                            if v:FindFirstChild("Owner").Value == game.Players.LocalPlayer.UserId then
                                spawn(function()
                                    local args = {
                                        [1] = "Troops",
                                        [2] = "Sell",
                                        [3] = {
                                            ["Troop"] = v
                                        }
                                    }

                                    game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer(
                                        unpack(args))
                                end)
                            end
                        end
                    end)
                    flags("sell all", false)
                end, "sell all")

                Freatures:CreateLabel("Farm Configs")

                Freatures:CreateSlider("Time alive needed", 0, 30, function(value)
                    time_needed = value
                end)

                Freatures:CreateSlider("Distance of npcs", 5, 100, function(value)
                    distance_npcs = value
                end)


                Freatures:CreateLabel("Multiplier NPCS")
                local multi_ply = false
                Freatures:CreateToggle("Multiply amount of NPC placed", function(bool)
                    multi_ply = bool
                end)
                local quantidade_multiplicar = 1
                Freatures:CreateSlider("Amount of NPC Multiply", 1, 30, function(value)
                    quantidade_multiplicar = value
                end)
                function adicionar(quant, args)
                    print("Chamou")
                    for i = 1,quant do 
                        args[4]["Position"] = args[4]["Position"] + Vector3.new(0, math.random(1,100), 0)
                        game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer(args)
                    end
                    
                end
                local okg
                okg = hookmetamethod(game, "__namecall", function(self, ...)
                    local args = { ... }
                    if tostring(self) == "RemoteFunction" then
                        print("New Event")
                        print("Check Caller: "..tostring(checkcaller()))
                        local myargs = {}
                        for i,v in pairs(args) do 
                            myargs[i] = v
                        end
                    	if multi_ply and quantidade_multiplicar == 0 and checkcaller() == false and myargs[2] == "Place" then 
                            spawn(function()
                                pcall(function()
                                    adicionar(quantidade_multiplicar, {
                                        "Troops",
                                        "Place",
                                        myargs[3],
                                        {
                                            ["Rotation"] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
                                            ["Position"] = myargs[4]["Position"]
                                        }
                                    })
                                end)  
                            end) 
                        end
                    end
                    return okg(self, unpack(args))
                end)
                spawn(function()
                    workspace.NPCs.ChildAdded:Connect(function(v)
                        local int = Instance.new("NumberValue", v)
                        int.Name = "vivo"
                        int.Value = 0
                        spawn(function()
                            while wait(1) do
                                local sc = pcall(function()
                                    int.Value = int.Value + 1
                                end)
                                if not sc then
                                    break
                                end
                            end
                        end)
                    end)
                end)
            else
                game.Players.LocalPlayer:Kick("MacroXHub: Only Vip+ can use this script.")
            end
        end

        if game.PlaceId == Jogos["Tower of hell"] or game.PlaceId == Jogos["Tower of hell pro"] then 
            local main = moretti:CreateTab("Player")
            local freatures = moretti:CreateTab("Freatures")

            main:CreateSlider("Walk Speed", 16, 200, function(value)
                getgenv().speedvalue = value 
            end)

            main:CreateSlider("Gravity", 0, 196, function(value)
                workspace.Gravity = value
            end)

            function finish()
                pcall(function() game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.tower.sections.finish.FinishGlow.CFrame end)
            end

            freatures:CreateButton("Finish Tower", function()
                finish()
            end)

            freatures:CreateToggle("Loop Finish Tower", function(bool)
                loop_finish = bool 

                spawn(function()
                    while loop_finish and task.wait() do finish() end
                end)
            end)

            local parts_damage = {}

            function anti_damage(v)
                if v.Name == "killPart" then 
                    parts_damage[#parts_damage+1] = v
                    if no_damage then 
                        v.CanTouch = false 
                    end
                elseif v.Parent.Name == 'killparts' or v.Parent.Name == "Killparts" then 
                    parts_damage[#parts_damage+1] = v
                    if no_damage then 
                        v.CanTouch = false 
                    end
                end
            end
            freatures:CreateToggle("Anti kill", function(bool)
                no_damage = bool 

                if no_damage then 
                    for i,v in pairs(parts_damage) do 
                        pcall(function()
                            v.CanTouch = false
                        end)
                    end
                else
                    for i,v in pairs(parts_damage) do 
                        pcall(function()
                            v.CanTouch = true
                        end)
                    end
                end
            end)

            for i,v in pairs(workspace:GetDescendants()) do 
                anti_damage(v)
            end
            
            workspace.DescendantAdded:Connect(function(v)
                anti_damage(v)
            end)

            local old 
            old = hookmetamethod(game, "__index", function(self, b)
                if tostring(b) == "WalkSpeed" then 
                    return 16 
                elseif tostring(b) == "Gravity" then 
                    return 196.1999969482422
                end
                return old(self, b)
            end)
            
            game:GetService("RunService").RenderStepped:Connect(function()
                if getgenv().speedvalue then 
                    if getHumanoid() then 
                        getHumanoid().WalkSpeed = getgenv().speedvalue 
                    end 
                end
            end)
        end
    end
end
